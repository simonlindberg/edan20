=== Run information ===

Scheme:       weka.classifiers.trees.J48 -C 0.25 -M 2
Relation:     parse_action
Instances:    336949
Attributes:   7
              top_pos_stack
              second_pos_stack
              first_pos_queue
              second_pos_queue
              can_do_leftarc
              can_reduce
              action
Test mode:    10-fold cross-validation

=== Classifier model (full training set) ===

J48 pruned tree
------------------

top_pos_stack = nil: sh (9963.0)
top_pos_stack = ROOT
|   first_pos_queue = nil: sh (0.0)
|   first_pos_queue = ROOT: sh (0.0)
|   first_pos_queue = ++: sh (399.0/2.0)
|   first_pos_queue = NN: sh (3222.0/371.0)
|   first_pos_queue = EN: sh (381.0/2.0)
|   first_pos_queue = AV: ra.ROOT (1962.0/69.0)
|   first_pos_queue = AJ: sh (369.0/43.0)
|   first_pos_queue = IK: ra.ROOT (5.0/1.0)
|   first_pos_queue = IP: ra.ROOT (2.0)
|   first_pos_queue = PO: sh (3136.0/20.0)
|   first_pos_queue = VV: ra.ROOT (4618.0/325.0)
|   first_pos_queue = AB: sh (1234.0/53.0)
|   first_pos_queue = TP: sh (40.0/11.0)
|   first_pos_queue = PR: sh (1151.0/78.0)
|   first_pos_queue = RO: sh (123.0/6.0)
|   first_pos_queue = ID: ra.ROOT (1.0)
|   first_pos_queue = PN: sh (383.0/50.0)
|   first_pos_queue = IC: sh (183.0/17.0)
|   first_pos_queue = MN: sh (48.0/14.0)
|   first_pos_queue = UK: sh (324.0)
|   first_pos_queue = VN: sh (514.0/77.0)
|   first_pos_queue = QV: ra.ROOT (681.0/17.0)
|   first_pos_queue = WV: ra.ROOT (105.0/10.0)
|   first_pos_queue = IQ: ra.ROOT (1.0)
|   first_pos_queue = SV: ra.ROOT (476.0/51.0)
|   first_pos_queue = HV: ra.ROOT (938.0/42.0)
|   first_pos_queue = IR: sh (59.0/4.0)
|   first_pos_queue = IG: sh (10.0)
|   first_pos_queue = AN: sh (87.0/8.0)
|   first_pos_queue = MV: ra.ROOT (261.0/3.0)
|   first_pos_queue = IM: sh (53.0)
|   first_pos_queue = BV: ra.ROOT (232.0/9.0)
|   first_pos_queue = KV: ra.ROOT (103.0/1.0)
|   first_pos_queue = GV: ra.ROOT (70.0/7.0)
|   first_pos_queue = FV: ra.ROOT (230.0/9.0)
|   first_pos_queue = PU: ra.ROOT (16.0/3.0)
|   first_pos_queue = SP: sh (4.0/1.0)
|   first_pos_queue = XX: sh (0.0)
|   first_pos_queue = I?: ra.ROOT (1.0)
|   first_pos_queue = IS: ra.ROOT (1.0)
|   first_pos_queue = IT: sh (51.0)
|   first_pos_queue = IU: sh (0.0)
|   first_pos_queue = YY: ra.ROOT (53.0/3.0)
top_pos_stack = ++
|   first_pos_queue = nil: re (5.0)
|   first_pos_queue = ROOT: la.++ (0.0)
|   first_pos_queue = ++: sh (1.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (91.0/8.0)
|   |   second_pos_stack = ++: la.++ (1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.++ (1640.0/69.0)
|   |   |   can_do_leftarc = false: re (5.0/1.0)
|   |   second_pos_stack = EN: la.++ (4.0/1.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (68.0/21.0)
|   |   second_pos_stack = IK: sh (128.0/30.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (31.0/3.0)
|   |   second_pos_stack = VV: sh (27.0/7.0)
|   |   second_pos_stack = AB: sh (23.0/11.0)
|   |   second_pos_stack = TP: la.++ (4.0)
|   |   second_pos_stack = PR: sh (6.0/1.0)
|   |   second_pos_stack = RO: la.++ (19.0/4.0)
|   |   second_pos_stack = ID: la.++ (8.0/2.0)
|   |   second_pos_stack = PN: la.++ (19.0/3.0)
|   |   second_pos_stack = IC: la.++ (13.0/4.0)
|   |   second_pos_stack = MN: la.++ (1.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: la.++ (137.0/20.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (4.0/1.0)
|   |   second_pos_stack = IG: la.++ (1.0)
|   |   second_pos_stack = AN: la.++ (61.0/1.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: sh (1.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (4.0)
|   |   second_pos_stack = IS: la.++ (2.0)
|   |   second_pos_stack = IT: sh (11.0/4.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = EN: sh (135.0/3.0)
|   first_pos_queue = AV: la.++ (350.0/14.0)
|   first_pos_queue = AJ
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (15.0/1.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: sh (124.0/21.0)
|   |   second_pos_stack = EN: la.++ (0.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (444.0/39.0)
|   |   second_pos_stack = IK: sh (27.0/9.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (10.0/2.0)
|   |   second_pos_stack = VV: sh (4.0)
|   |   second_pos_stack = AB: la.++ (10.0/4.0)
|   |   second_pos_stack = TP: la.++ (26.0/8.0)
|   |   second_pos_stack = PR: sh (1.0)
|   |   second_pos_stack = RO: la.++ (1.0)
|   |   second_pos_stack = ID: sh (2.0)
|   |   second_pos_stack = PN: la.++ (2.0/1.0)
|   |   second_pos_stack = IC: la.++ (7.0/1.0)
|   |   second_pos_stack = MN: la.++ (0.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: sh (22.0/3.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (3.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: sh (20.0/3.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (0.0)
|   |   second_pos_stack = IT: la.++ (2.0/1.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = IK: sh (13.0)
|   first_pos_queue = IP: ra.IP (2.0/1.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (154.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (307.0/47.0)
|   |   second_pos_stack = EN: la.++ (22.0/1.0)
|   |   second_pos_stack = AV: la.++ (1.0)
|   |   second_pos_stack = AJ: sh (48.0/10.0)
|   |   second_pos_stack = IK: sh (247.0/7.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: la.++ (68.0/28.0)
|   |   second_pos_stack = VV: sh (22.0/7.0)
|   |   second_pos_stack = AB: sh (19.0/3.0)
|   |   second_pos_stack = TP: sh (7.0)
|   |   second_pos_stack = PR: sh (2.0)
|   |   second_pos_stack = RO: la.++ (10.0/3.0)
|   |   second_pos_stack = ID: sh (6.0/1.0)
|   |   second_pos_stack = PN: sh (10.0/1.0)
|   |   second_pos_stack = IC: sh (11.0/4.0)
|   |   second_pos_stack = MN: sh (1.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (31.0/4.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (1.0)
|   |   second_pos_stack = IR: la.++ (4.0/2.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (10.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (2.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (2.0)
|   |   second_pos_stack = IT: sh (11.0/1.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (1.0)
|   first_pos_queue = VV: la.++ (1433.0/54.0)
|   first_pos_queue = AB: sh (703.0/99.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (4.0)
|   |   second_pos_stack = ++: la.++ (0.0)
|   |   second_pos_stack = NN: sh (14.0/4.0)
|   |   second_pos_stack = EN: la.++ (0.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (29.0/2.0)
|   |   second_pos_stack = IK: sh (4.0/1.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (0.0)
|   |   second_pos_stack = VV: sh (1.0)
|   |   second_pos_stack = AB: la.++ (0.0)
|   |   second_pos_stack = TP: la.++ (29.0/3.0)
|   |   second_pos_stack = PR: la.++ (0.0)
|   |   second_pos_stack = RO: la.++ (0.0)
|   |   second_pos_stack = ID: la.++ (1.0)
|   |   second_pos_stack = PN: la.++ (0.0)
|   |   second_pos_stack = IC: la.++ (0.0)
|   |   second_pos_stack = MN: la.++ (0.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: sh (5.0/2.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (0.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: sh (1.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (1.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (0.0)
|   |   second_pos_stack = IT: la.++ (0.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (40.0/2.0)
|   |   second_pos_stack = ++: la.++ (0.0)
|   |   second_pos_stack = NN: la.++ (160.0/23.0)
|   |   second_pos_stack = EN: la.++ (0.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (24.0/11.0)
|   |   second_pos_stack = IK: sh (52.0/19.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (10.0/5.0)
|   |   second_pos_stack = VV: sh (4.0/2.0)
|   |   second_pos_stack = AB: la.++ (17.0/4.0)
|   |   second_pos_stack = TP: la.++ (4.0/2.0)
|   |   second_pos_stack = PR: la.++ (27.0/2.0)
|   |   second_pos_stack = RO: la.++ (6.0/2.0)
|   |   second_pos_stack = ID: la.++ (5.0/1.0)
|   |   second_pos_stack = PN: la.++ (13.0/1.0)
|   |   second_pos_stack = IC: la.++ (6.0/1.0)
|   |   second_pos_stack = MN: la.++ (1.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: la.++ (23.0/3.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (1.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: la.++ (9.0/2.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (2.0)
|   |   second_pos_stack = IT: sh (3.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (2.0)
|   |   second_pos_stack = ++: la.++ (0.0)
|   |   second_pos_stack = NN: sh (23.0)
|   |   second_pos_stack = EN: la.++ (8.0/2.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: sh (2.0)
|   |   second_pos_stack = IK: sh (4.0/1.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: sh (1.0)
|   |   second_pos_stack = VV: sh (1.0)
|   |   second_pos_stack = AB: sh (2.0)
|   |   second_pos_stack = TP: la.++ (0.0)
|   |   second_pos_stack = PR: la.++ (0.0)
|   |   second_pos_stack = RO: la.++ (64.0/11.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: la.++ (0.0)
|   |   second_pos_stack = IC: la.++ (0.0)
|   |   second_pos_stack = MN: la.++ (0.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: sh (1.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: sh (1.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: la.++ (0.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (0.0)
|   |   second_pos_stack = IT: la.++ (0.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = ID: sh (13.0/1.0)
|   first_pos_queue = PN: la.++ (151.0/16.0)
|   first_pos_queue = IC: sh (26.0)
|   first_pos_queue = MN: la.++ (33.0/1.0)
|   first_pos_queue = UK: sh (133.0/10.0)
|   first_pos_queue = VN
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: sh (14.0/2.0)
|   |   second_pos_stack = ++: la.++ (0.0)
|   |   second_pos_stack = NN: la.++ (172.0/8.0)
|   |   second_pos_stack = EN: la.++ (0.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (7.0/3.0)
|   |   second_pos_stack = IK: sh (20.0/6.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (4.0/2.0)
|   |   second_pos_stack = VV: sh (3.0)
|   |   second_pos_stack = AB: la.++ (2.0/1.0)
|   |   second_pos_stack = TP: la.++ (3.0)
|   |   second_pos_stack = PR: sh (1.0)
|   |   second_pos_stack = RO: sh (2.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: la.++ (1.0)
|   |   second_pos_stack = IC: la.++ (0.0)
|   |   second_pos_stack = MN: la.++ (0.0)
|   |   second_pos_stack = UK: la.++ (0.0)
|   |   second_pos_stack = VN: la.++ (115.0/3.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.++ (0.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (2.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: la.++ (19.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (0.0)
|   |   second_pos_stack = IT: sh (1.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = QV: la.++ (156.0/3.0)
|   first_pos_queue = WV: la.++ (33.0/1.0)
|   first_pos_queue = IQ: sh (1.0)
|   first_pos_queue = SV: la.++ (95.0/9.0)
|   first_pos_queue = HV: la.++ (167.0/2.0)
|   first_pos_queue = IR: sh (2.0)
|   first_pos_queue = IG: la.++ (2.0/1.0)
|   first_pos_queue = AN: la.++ (147.0/9.0)
|   first_pos_queue = MV: la.++ (55.0)
|   first_pos_queue = IM: sh (23.0/4.0)
|   first_pos_queue = BV: la.++ (61.0/4.0)
|   first_pos_queue = KV: la.++ (21.0)
|   first_pos_queue = GV: la.++ (21.0/1.0)
|   first_pos_queue = FV: la.++ (73.0/4.0)
|   first_pos_queue = PU: sh (3.0)
|   first_pos_queue = SP: la.++ (15.0/4.0)
|   first_pos_queue = XX: la.++ (0.0)
|   first_pos_queue = I?: ra.I? (1.0)
|   first_pos_queue = IS: la.++ (0.0)
|   first_pos_queue = IT: sh (7.0)
|   first_pos_queue = IU: la.++ (0.0)
|   first_pos_queue = YY: la.++ (1.0)
top_pos_stack = NN
|   first_pos_queue = nil: re (739.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (2665.0/10.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (1733.0/444.0)
|   |   can_do_leftarc = false: ra.CC (2857.0/1158.0)
|   first_pos_queue = EN: sh (141.0/14.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.SS (1192.0/181.0)
|   |   can_do_leftarc = false: re (1077.0/183.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true: sh (296.0/47.0)
|   |   can_do_leftarc = false: re (441.0/144.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (193.0/39.0)
|   |   second_pos_stack = ++: ra.IK (9.0/4.0)
|   |   second_pos_stack = NN: sh (459.0/193.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (220.0/120.0)
|   |   second_pos_stack = AJ: sh (11.0/5.0)
|   |   second_pos_stack = IK: ra.IK (6.0/3.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (15.0/6.0)
|   |   second_pos_stack = VV: re (611.0/306.0)
|   |   second_pos_stack = AB: ra.IK (18.0/9.0)
|   |   second_pos_stack = TP: re (4.0/1.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: sh (5.0)
|   |   |   can_do_leftarc = false: re (1372.0/645.0)
|   |   second_pos_stack = RO: re (4.0/1.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: ra.IK (3.0/1.0)
|   |   |   can_do_leftarc = false: re (41.0/24.0)
|   |   second_pos_stack = PN: sh (4.0/2.0)
|   |   second_pos_stack = IC: sh (1.0)
|   |   second_pos_stack = MN: sh (1.0)
|   |   second_pos_stack = UK: ra.IK (36.0/13.0)
|   |   second_pos_stack = VN: sh (38.0/16.0)
|   |   second_pos_stack = QV: ra.IK (7.0/2.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: ra.IK (2.0)
|   |   second_pos_stack = SV: re (6.0/2.0)
|   |   second_pos_stack = HV: re (71.0/31.0)
|   |   second_pos_stack = IR: sh (1.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: sh (23.0/10.0)
|   |   second_pos_stack = MV: sh (3.0/1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (33.0/18.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (10.0/5.0)
|   |   second_pos_stack = FV: re (32.0/11.0)
|   |   second_pos_stack = PU: sh (1.0)
|   |   second_pos_stack = SP: re (2.0/1.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: ra.IK (4.0/2.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (131.0)
|   |   second_pos_stack = ++: re (2.0)
|   |   second_pos_stack = NN: re (990.0/5.0)
|   |   second_pos_stack = EN: re (5.0)
|   |   second_pos_stack = AV: re (618.0/1.0)
|   |   second_pos_stack = AJ: re (32.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (23.0)
|   |   second_pos_stack = VV: re (1596.0/3.0)
|   |   second_pos_stack = AB: re (10.0)
|   |   second_pos_stack = TP: re (5.0)
|   |   second_pos_stack = PR: re (3974.0/6.0)
|   |   second_pos_stack = RO: re (6.0)
|   |   second_pos_stack = ID: re (104.0/2.0)
|   |   second_pos_stack = PN: re (10.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (97.0)
|   |   second_pos_stack = QV: re (9.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (5.0)
|   |   second_pos_stack = HV: re (201.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (55.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (76.0/1.0)
|   |   second_pos_stack = KV: re (2.0)
|   |   second_pos_stack = GV: re (32.0)
|   |   second_pos_stack = FV: re (126.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (3.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = PO: sh (1233.0/188.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (1148.0/154.0)
|   |   |   can_do_leftarc = false: ra.ET (62.0/21.0)
|   |   second_pos_stack = ++: la.SS (118.0/12.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (18.0/1.0)
|   |   |   can_do_leftarc = false: re (419.0/68.0)
|   |   second_pos_stack = EN: re (7.0/1.0)
|   |   second_pos_stack = AV: ra.ET (252.0/118.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.SS (2.0)
|   |   |   can_do_leftarc = false: re (7.0)
|   |   second_pos_stack = IK: la.SS (37.0/6.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (72.0/10.0)
|   |   |   can_do_leftarc = false: re (16.0/1.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.SS (8.0/4.0)
|   |   |   can_do_leftarc = false: re (652.0/242.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.SS (220.0/4.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: la.SS (7.0/4.0)
|   |   |   can_do_leftarc = false: re (2042.0/358.0)
|   |   second_pos_stack = RO: re (5.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.SS (50.0/2.0)
|   |   |   can_do_leftarc = false: re (50.0/17.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: la.SS (26.0/1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (571.0/25.0)
|   |   second_pos_stack = VN
|   |   |   can_do_leftarc = true: la.SS (8.0)
|   |   |   can_do_leftarc = false: re (54.0/13.0)
|   |   second_pos_stack = QV: re (49.0/2.0)
|   |   second_pos_stack = WV: re (4.0)
|   |   second_pos_stack = IQ: la.SS (3.0/1.0)
|   |   second_pos_stack = SV: re (40.0/2.0)
|   |   second_pos_stack = HV: re (179.0/78.0)
|   |   second_pos_stack = IR: la.SS (4.0/1.0)
|   |   second_pos_stack = IG: la.SS (2.0/1.0)
|   |   second_pos_stack = AN: re (26.0/6.0)
|   |   second_pos_stack = MV: re (24.0)
|   |   second_pos_stack = IM: la.SS (2.0)
|   |   second_pos_stack = BV: ra.ET (27.0/13.0)
|   |   second_pos_stack = KV: re (11.0)
|   |   second_pos_stack = GV: ra.ET (13.0/5.0)
|   |   second_pos_stack = FV: re (66.0/25.0)
|   |   second_pos_stack = PU: re (1.0)
|   |   second_pos_stack = SP: ra.ET (2.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: la.SS (3.0)
|   |   second_pos_stack = IT: la.SS (7.0/1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.ET (37.0/16.0)
|   |   |   can_do_leftarc = false: sh (14.0/9.0)
|   |   second_pos_stack = ++: sh (12.0/4.0)
|   |   second_pos_stack = NN: sh (131.0/81.0)
|   |   second_pos_stack = EN: sh (3.0/1.0)
|   |   second_pos_stack = AV
|   |   |   can_do_leftarc = true: la.AA (2.0)
|   |   |   can_do_leftarc = false: re (84.0/44.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.AA (3.0/2.0)
|   |   |   can_do_leftarc = false: re (4.0)
|   |   second_pos_stack = IK: sh (4.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (14.0/1.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (7.0/1.0)
|   |   |   can_do_leftarc = false: re (333.0/121.0)
|   |   second_pos_stack = AB: sh (35.0/9.0)
|   |   second_pos_stack = TP: re (2.0/1.0)
|   |   second_pos_stack = PR: sh (462.0/216.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (34.0/7.0)
|   |   second_pos_stack = PN: la.AA (1.0)
|   |   second_pos_stack = IC: sh (1.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (144.0/3.0)
|   |   second_pos_stack = VN: ra.C+ (20.0/14.0)
|   |   second_pos_stack = QV: re (11.0/2.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: re (9.0/1.0)
|   |   second_pos_stack = HV: re (54.0/14.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: ra.C+ (5.0/3.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (16.0/5.0)
|   |   second_pos_stack = KV: re (2.0)
|   |   second_pos_stack = GV: sh (14.0/6.0)
|   |   second_pos_stack = FV: re (21.0/8.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (1.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: ra.MA (1.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: sh (53.0/24.0)
|   |   can_do_leftarc = false: re (139.0/60.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT: ra.ET (585.0/40.0)
|   |   second_pos_stack = ++
|   |   |   can_do_leftarc = true: ra.ET (35.0/6.0)
|   |   |   can_do_leftarc = false: ra.OA (2.0/1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.PA (9.0/4.0)
|   |   |   can_do_leftarc = false: ra.ET (341.0/156.0)
|   |   second_pos_stack = EN: re (9.0)
|   |   second_pos_stack = AV: ra.ET (445.0/221.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   |   can_do_leftarc = false: re (14.0/4.0)
|   |   second_pos_stack = IK: ra.ET (15.0/4.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: ra.ET (8.0/2.0)
|   |   |   can_do_leftarc = false: re (21.0/11.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.PA (8.0/4.0)
|   |   |   can_do_leftarc = false: re (1717.0/616.0)
|   |   second_pos_stack = AB: ra.ET (45.0/18.0)
|   |   second_pos_stack = TP: re (6.0/3.0)
|   |   second_pos_stack = PR: ra.ET (1796.0/862.0)
|   |   second_pos_stack = RO: re (2.0)
|   |   second_pos_stack = ID: ra.ET (50.0/17.0)
|   |   second_pos_stack = PN: ra.ET (9.0/4.0)
|   |   second_pos_stack = IC: ra.ET (8.0/3.0)
|   |   second_pos_stack = MN: ra.ET (0.0)
|   |   second_pos_stack = UK: ra.ET (202.0/56.0)
|   |   second_pos_stack = VN
|   |   |   can_do_leftarc = true: la.PA (6.0/1.0)
|   |   |   can_do_leftarc = false: ra.ET (63.0/23.0)
|   |   second_pos_stack = QV: ra.ET (9.0/1.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   second_pos_stack = SV: ra.ET (11.0/2.0)
|   |   second_pos_stack = HV: re (196.0/70.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (1.0)
|   |   second_pos_stack = AN
|   |   |   can_do_leftarc = true: la.PA (2.0)
|   |   |   can_do_leftarc = false: ra.ET (21.0/4.0)
|   |   second_pos_stack = MV: ra.ET (6.0/1.0)
|   |   second_pos_stack = IM: la.PA (3.0/2.0)
|   |   second_pos_stack = BV: re (60.0/28.0)
|   |   second_pos_stack = KV: ra.ET (5.0/2.0)
|   |   second_pos_stack = GV: re (37.0/8.0)
|   |   second_pos_stack = FV: re (128.0/45.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (2.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (2.0)
|   |   second_pos_stack = IT: ra.ET (3.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: la.XX (1.0)
|   first_pos_queue = RO
|   |   can_do_leftarc = true: la.DT (201.0/29.0)
|   |   can_do_leftarc = false
|   |   |   second_pos_stack = nil: ra.ET (0.0)
|   |   |   second_pos_stack = ROOT: ra.ET (9.0/6.0)
|   |   |   second_pos_stack = ++: ra.ET (0.0)
|   |   |   second_pos_stack = NN: ra.ET (5.0/2.0)
|   |   |   second_pos_stack = EN: ra.ET (0.0)
|   |   |   second_pos_stack = AV: sh (13.0/4.0)
|   |   |   second_pos_stack = AJ: ra.ET (1.0)
|   |   |   second_pos_stack = IK: ra.ET (0.0)
|   |   |   second_pos_stack = IP: ra.ET (0.0)
|   |   |   second_pos_stack = PO: ra.ET (0.0)
|   |   |   second_pos_stack = VV: sh (15.0/9.0)
|   |   |   second_pos_stack = AB: ra.ET (0.0)
|   |   |   second_pos_stack = TP: ra.ET (1.0)
|   |   |   second_pos_stack = PR: ra.ET (75.0/41.0)
|   |   |   second_pos_stack = RO: re (1.0)
|   |   |   second_pos_stack = ID: ra.ET (2.0)
|   |   |   second_pos_stack = PN: ra.ET (2.0/1.0)
|   |   |   second_pos_stack = IC: ra.ET (0.0)
|   |   |   second_pos_stack = MN: ra.ET (0.0)
|   |   |   second_pos_stack = UK: ra.ET (0.0)
|   |   |   second_pos_stack = VN: ra.ET (1.0)
|   |   |   second_pos_stack = QV: sh (1.0)
|   |   |   second_pos_stack = WV: ra.ET (1.0)
|   |   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   |   second_pos_stack = SV: ra.ET (0.0)
|   |   |   second_pos_stack = HV: ra.TA (3.0/2.0)
|   |   |   second_pos_stack = IR: ra.ET (0.0)
|   |   |   second_pos_stack = IG: ra.ET (0.0)
|   |   |   second_pos_stack = AN: ra.ET (0.0)
|   |   |   second_pos_stack = MV: ra.ET (0.0)
|   |   |   second_pos_stack = IM: ra.ET (0.0)
|   |   |   second_pos_stack = BV: re (3.0/1.0)
|   |   |   second_pos_stack = KV: ra.ET (0.0)
|   |   |   second_pos_stack = GV: ra.ET (0.0)
|   |   |   second_pos_stack = FV: re (1.0)
|   |   |   second_pos_stack = PU: ra.ET (0.0)
|   |   |   second_pos_stack = SP: ra.ET (0.0)
|   |   |   second_pos_stack = XX: ra.ET (0.0)
|   |   |   second_pos_stack = I?: ra.ET (0.0)
|   |   |   second_pos_stack = IS: ra.ET (0.0)
|   |   |   second_pos_stack = IT: ra.ET (0.0)
|   |   |   second_pos_stack = IU: ra.ET (0.0)
|   |   |   second_pos_stack = YY: ra.ET (0.0)
|   first_pos_queue = ID
|   |   can_do_leftarc = true: la.PA (43.0/1.0)
|   |   can_do_leftarc = false: ra.HD (17.0/3.0)
|   first_pos_queue = PN
|   |   can_do_leftarc = true: la.DT (156.0/16.0)
|   |   can_do_leftarc = false: ra.AN (65.0/43.0)
|   first_pos_queue = IC
|   |   can_do_leftarc = true: sh (114.0/13.0)
|   |   can_do_leftarc = false: re (411.0/184.0)
|   first_pos_queue = MN
|   |   can_do_leftarc = true: la.DT (134.0/2.0)
|   |   can_do_leftarc = false
|   |   |   second_pos_stack = nil: ra.AN (0.0)
|   |   |   second_pos_stack = ROOT: ra.SS (1.0)
|   |   |   second_pos_stack = ++: ra.AN (0.0)
|   |   |   second_pos_stack = NN: re (7.0)
|   |   |   second_pos_stack = EN: ra.AN (0.0)
|   |   |   second_pos_stack = AV: ra.AN (1.0)
|   |   |   second_pos_stack = AJ: ra.AN (0.0)
|   |   |   second_pos_stack = IK: ra.AN (0.0)
|   |   |   second_pos_stack = IP: ra.AN (0.0)
|   |   |   second_pos_stack = PO: ra.AN (0.0)
|   |   |   second_pos_stack = VV: ra.AN (4.0/1.0)
|   |   |   second_pos_stack = AB: ra.AN (0.0)
|   |   |   second_pos_stack = TP: ra.AN (0.0)
|   |   |   second_pos_stack = PR: ra.AN (12.0/6.0)
|   |   |   second_pos_stack = RO: ra.AN (0.0)
|   |   |   second_pos_stack = ID: ra.AN (0.0)
|   |   |   second_pos_stack = PN: ra.AN (0.0)
|   |   |   second_pos_stack = IC: ra.AN (0.0)
|   |   |   second_pos_stack = MN: ra.AN (0.0)
|   |   |   second_pos_stack = UK: ra.AN (0.0)
|   |   |   second_pos_stack = VN: ra.AN (0.0)
|   |   |   second_pos_stack = QV: ra.AN (0.0)
|   |   |   second_pos_stack = WV: ra.AN (0.0)
|   |   |   second_pos_stack = IQ: ra.AN (0.0)
|   |   |   second_pos_stack = SV: ra.AN (0.0)
|   |   |   second_pos_stack = HV: ra.AN (0.0)
|   |   |   second_pos_stack = IR: ra.AN (0.0)
|   |   |   second_pos_stack = IG: ra.AN (0.0)
|   |   |   second_pos_stack = AN: ra.AN (0.0)
|   |   |   second_pos_stack = MV: ra.AN (0.0)
|   |   |   second_pos_stack = IM: ra.AN (0.0)
|   |   |   second_pos_stack = BV: ra.AN (1.0)
|   |   |   second_pos_stack = KV: ra.AN (0.0)
|   |   |   second_pos_stack = GV: ra.AN (0.0)
|   |   |   second_pos_stack = FV: ra.AN (0.0)
|   |   |   second_pos_stack = PU: ra.AN (0.0)
|   |   |   second_pos_stack = SP: ra.AN (0.0)
|   |   |   second_pos_stack = XX: ra.AN (0.0)
|   |   |   second_pos_stack = I?: ra.AN (0.0)
|   |   |   second_pos_stack = IS: ra.AN (0.0)
|   |   |   second_pos_stack = IT: ra.AN (0.0)
|   |   |   second_pos_stack = IU: ra.AN (0.0)
|   |   |   second_pos_stack = YY: ra.AN (0.0)
|   first_pos_queue = UK: sh (623.0/16.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.DT (406.0/43.0)
|   |   can_do_leftarc = false: ra.CC (326.0/155.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (197.0/22.0)
|   |   |   can_do_leftarc = false: ra.ET (3.0/1.0)
|   |   second_pos_stack = ++: la.SS (21.0/3.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (5.0)
|   |   |   can_do_leftarc = false: re (54.0/13.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: ra.ET (19.0/10.0)
|   |   second_pos_stack = AJ: re (4.0/2.0)
|   |   second_pos_stack = IK: la.SS (6.0/3.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (11.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = VV: ra.ET (63.0/29.0)
|   |   second_pos_stack = AB: la.SS (15.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (238.0/32.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.SS (8.0/1.0)
|   |   |   can_do_leftarc = false: re (10.0/3.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (3.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (65.0/3.0)
|   |   second_pos_stack = VN: re (4.0/1.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (1.0)
|   |   second_pos_stack = SV: sh (6.0/1.0)
|   |   second_pos_stack = HV: re (7.0/1.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: ra.ET (3.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (3.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (1.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (1.0)
|   |   second_pos_stack = IT: la.SS (4.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = WV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (25.0/9.0)
|   |   second_pos_stack = ++: la.SS (4.0/2.0)
|   |   second_pos_stack = NN: re (5.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.ET (8.0/4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (2.0/1.0)
|   |   second_pos_stack = VV: re (12.0/2.0)
|   |   second_pos_stack = AB: la.SS (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (32.0/9.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.ET (4.0/2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (10.0/2.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: ra.ET (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (3.0)
|   |   |   can_do_leftarc = false: ra.IQ (36.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (11.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (12.0/3.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (39.0/14.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (115.0/36.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.IQ (2.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: sh (2.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: ra.IQ (2.0)
|   |   second_pos_stack = IR: sh (1.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (2.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (106.0/11.0)
|   |   second_pos_stack = ++: la.SS (15.0/1.0)
|   |   second_pos_stack = NN: re (51.0/6.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (22.0/12.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (8.0/1.0)
|   |   second_pos_stack = IP: la.SS (1.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (8.0/1.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = VV: re (47.0/17.0)
|   |   second_pos_stack = AB: la.SS (31.0/1.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (180.0/31.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: la.SS (31.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (2.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (144.0/5.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (1.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: re (9.0/3.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (1.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (319.0/34.0)
|   |   |   can_do_leftarc = false: ra.ET (2.0)
|   |   second_pos_stack = ++: la.SS (40.0/4.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (7.0/1.0)
|   |   |   can_do_leftarc = false: re (83.0/6.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (26.0/13.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.OO (2.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = IK: la.SS (5.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (13.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.OO (2.0)
|   |   |   can_do_leftarc = false: re (54.0/25.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.SS (23.0/2.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (329.0/44.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.SS (9.0/2.0)
|   |   |   can_do_leftarc = false: re (7.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: la.SS (5.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: la.SS (89.0/4.0)
|   |   second_pos_stack = VN: re (9.0/1.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: re (3.0)
|   |   second_pos_stack = IQ: la.SS (2.0/1.0)
|   |   second_pos_stack = SV: re (4.0/1.0)
|   |   second_pos_stack = HV: re (11.0/1.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: ra.ET (1.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: la.OO (1.0)
|   |   second_pos_stack = BV: ra.ET (2.0/1.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: ra.TA (1.0)
|   |   second_pos_stack = FV: re (5.0/2.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (1.0)
|   |   second_pos_stack = IT: la.SS (7.0/2.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IR (33.0/17.0)
|   |   second_pos_stack = ++: ra.IR (2.0/1.0)
|   |   second_pos_stack = NN: re (99.0/26.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (17.0/7.0)
|   |   second_pos_stack = AJ: ra.JR (4.0/1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (3.0/1.0)
|   |   second_pos_stack = VV: re (38.0/19.0)
|   |   second_pos_stack = AB: sh (4.0/2.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (113.0/49.0)
|   |   second_pos_stack = RO: re (2.0)
|   |   second_pos_stack = ID: re (13.0/3.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.IR (5.0/3.0)
|   |   second_pos_stack = VN: re (7.0/2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: ra.IR (8.0/5.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: ra.IR (2.0/1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.JR (4.0/2.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: ra.JR (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (1.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IG
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (3.0/1.0)
|   |   |   can_do_leftarc = false: ra.IG (5.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (7.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (5.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (13.0/2.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (12.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.IG (1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.IG (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.IG (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: sh (1.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.DT (81.0/10.0)
|   |   can_do_leftarc = false: ra.CC (178.0/63.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (63.0/4.0)
|   |   |   can_do_leftarc = false: ra.MS (3.0/1.0)
|   |   second_pos_stack = ++: la.SS (5.0)
|   |   second_pos_stack = NN: re (27.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (7.0/4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.SS (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (3.0)
|   |   second_pos_stack = VV: re (19.0/8.0)
|   |   second_pos_stack = AB: la.SS (5.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (73.0/10.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (18.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (4.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.ET (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IM: sh (386.0/3.0)
|   first_pos_queue = BV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (83.0/12.0)
|   |   second_pos_stack = ++: la.SS (10.0/4.0)
|   |   second_pos_stack = NN: re (15.0/1.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (7.0/2.0)
|   |   second_pos_stack = AJ: la.SS (2.0/1.0)
|   |   second_pos_stack = IK: la.SS (3.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (3.0/1.0)
|   |   second_pos_stack = VV: re (22.0/3.0)
|   |   second_pos_stack = AB: la.SS (10.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (109.0/3.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.SS (5.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (51.0/1.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (3.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.ET (1.0)
|   |   second_pos_stack = HV: re (15.0/2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.ET (3.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.SS (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: ra.VG (1.0)
|   first_pos_queue = KV
|   |   can_do_leftarc = true: la.SS (68.0/2.0)
|   |   can_do_leftarc = false: re (62.0/11.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (15.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (5.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.EF (9.0/4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (4.0)
|   |   second_pos_stack = VV: re (12.0/6.0)
|   |   second_pos_stack = AB: la.SS (2.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (40.0/7.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.ET (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (10.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: ra.ET (3.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.ET (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (65.0/9.0)
|   |   |   can_do_leftarc = false: ra.ET (3.0/1.0)
|   |   second_pos_stack = ++: la.SS (6.0/2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (2.0)
|   |   |   can_do_leftarc = false: re (24.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.ET (10.0/6.0)
|   |   second_pos_stack = AJ: ra.ET (1.0)
|   |   second_pos_stack = IK: la.SS (3.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (3.0/1.0)
|   |   second_pos_stack = VV: re (34.0/11.0)
|   |   second_pos_stack = AB: la.SS (10.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (117.0/20.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.SS (5.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (38.0/1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (4.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: sh (1.0)
|   |   second_pos_stack = HV: re (10.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (4.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: sh (24.0/3.0)
|   first_pos_queue = SP
|   |   can_do_leftarc = true: la.DT (6.0/3.0)
|   |   can_do_leftarc = false: re (27.0/12.0)
|   first_pos_queue = XX: sh (11.0/1.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.I? (14.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (61.0/7.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (32.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (70.0)
|   |   second_pos_stack = AB: re (6.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (151.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (3.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (11.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (3.0)
|   |   second_pos_stack = FV: re (5.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IS: re (41.0/2.0)
|   first_pos_queue = IT
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IT (38.0/19.0)
|   |   second_pos_stack = ++: ra.IT (4.0/2.0)
|   |   second_pos_stack = NN: re (65.0/20.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (7.0/2.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: sh (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (45.0/15.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (102.0/31.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (10.0/4.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: sh (1.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (8.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (4.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: sh (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IU: re (57.0/3.0)
|   first_pos_queue = YY: re (6.0/3.0)
top_pos_stack = EN
|   first_pos_queue = nil: re (2.0)
|   first_pos_queue = ROOT: la.DT (0.0)
|   first_pos_queue = ++: sh (31.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (3134.0/27.0)
|   |   can_do_leftarc = false: ra.HD (30.0/16.0)
|   first_pos_queue = EN: sh (14.0/4.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: la.SP (0.0)
|   |   second_pos_stack = ROOT: la.SP (5.0/1.0)
|   |   second_pos_stack = ++: la.SP (0.0)
|   |   second_pos_stack = NN: la.SP (0.0)
|   |   second_pos_stack = EN: la.SP (0.0)
|   |   second_pos_stack = AV: la.SP (0.0)
|   |   second_pos_stack = AJ: la.SP (0.0)
|   |   second_pos_stack = IK: la.SP (0.0)
|   |   second_pos_stack = IP: la.SP (0.0)
|   |   second_pos_stack = PO: la.SP (0.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: la.SP (0.0)
|   |   second_pos_stack = TP: la.SP (0.0)
|   |   second_pos_stack = PR: ra.ET (2.0/1.0)
|   |   second_pos_stack = RO: la.SP (0.0)
|   |   second_pos_stack = ID: la.SP (0.0)
|   |   second_pos_stack = PN: la.SP (0.0)
|   |   second_pos_stack = IC: la.SP (0.0)
|   |   second_pos_stack = MN: la.SP (0.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: la.SP (0.0)
|   |   second_pos_stack = QV: la.SP (0.0)
|   |   second_pos_stack = WV: la.SP (0.0)
|   |   second_pos_stack = IQ: la.SP (0.0)
|   |   second_pos_stack = SV: la.SP (0.0)
|   |   second_pos_stack = HV: la.SP (0.0)
|   |   second_pos_stack = IR: la.SP (0.0)
|   |   second_pos_stack = IG: la.SP (0.0)
|   |   second_pos_stack = AN: la.SP (0.0)
|   |   second_pos_stack = MV: la.SP (0.0)
|   |   second_pos_stack = IM: la.SP (0.0)
|   |   second_pos_stack = BV: la.SP (0.0)
|   |   second_pos_stack = KV: la.SP (0.0)
|   |   second_pos_stack = GV: la.SP (0.0)
|   |   second_pos_stack = FV: la.SP (0.0)
|   |   second_pos_stack = PU: la.SP (0.0)
|   |   second_pos_stack = SP: la.SP (0.0)
|   |   second_pos_stack = XX: la.SP (0.0)
|   |   second_pos_stack = I?: la.SP (0.0)
|   |   second_pos_stack = IS: la.SP (0.0)
|   |   second_pos_stack = IT: la.SP (0.0)
|   |   second_pos_stack = IU: la.SP (0.0)
|   |   second_pos_stack = YY: la.SP (0.0)
|   first_pos_queue = AJ: sh (1339.0/41.0)
|   first_pos_queue = IK: sh (12.0/7.0)
|   first_pos_queue = IP: re (24.0/2.0)
|   first_pos_queue = PO: sh (377.0/45.0)
|   first_pos_queue = VV: re (18.0/11.0)
|   first_pos_queue = AB: sh (154.0/3.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: sh (129.0/2.0)
|   |   can_do_leftarc = false: ra.MD (2.0/1.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true: la.DT (77.0/19.0)
|   |   can_do_leftarc = false: re (22.0/12.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: ra.CC (0.0)
|   |   second_pos_stack = ROOT: sh (5.0/2.0)
|   |   second_pos_stack = ++: ra.CC (0.0)
|   |   second_pos_stack = NN: ra.CC (1.0)
|   |   second_pos_stack = EN: ra.CC (0.0)
|   |   second_pos_stack = AV: ra.CC (0.0)
|   |   second_pos_stack = AJ: ra.CC (0.0)
|   |   second_pos_stack = IK: ra.CC (0.0)
|   |   second_pos_stack = IP: ra.CC (0.0)
|   |   second_pos_stack = PO: ra.CC (0.0)
|   |   second_pos_stack = VV: la.DT (4.0/3.0)
|   |   second_pos_stack = AB: ra.CC (0.0)
|   |   second_pos_stack = TP: ra.CC (0.0)
|   |   second_pos_stack = PR: ra.CC (5.0/1.0)
|   |   second_pos_stack = RO: ra.CC (0.0)
|   |   second_pos_stack = ID: ra.CC (0.0)
|   |   second_pos_stack = PN: ra.CC (0.0)
|   |   second_pos_stack = IC: ra.CC (0.0)
|   |   second_pos_stack = MN: ra.CC (0.0)
|   |   second_pos_stack = UK: ra.CC (0.0)
|   |   second_pos_stack = VN: ra.CC (0.0)
|   |   second_pos_stack = QV: ra.CC (0.0)
|   |   second_pos_stack = WV: ra.CC (0.0)
|   |   second_pos_stack = IQ: ra.CC (0.0)
|   |   second_pos_stack = SV: ra.CC (0.0)
|   |   second_pos_stack = HV: sh (1.0)
|   |   second_pos_stack = IR: ra.CC (0.0)
|   |   second_pos_stack = IG: ra.CC (0.0)
|   |   second_pos_stack = AN: ra.CC (0.0)
|   |   second_pos_stack = MV: ra.CC (0.0)
|   |   second_pos_stack = IM: ra.CC (0.0)
|   |   second_pos_stack = BV: ra.CC (0.0)
|   |   second_pos_stack = KV: ra.CC (0.0)
|   |   second_pos_stack = GV: ra.CC (0.0)
|   |   second_pos_stack = FV: ra.CC (0.0)
|   |   second_pos_stack = PU: ra.CC (0.0)
|   |   second_pos_stack = SP: ra.CC (0.0)
|   |   second_pos_stack = XX: ra.CC (0.0)
|   |   second_pos_stack = I?: ra.CC (0.0)
|   |   second_pos_stack = IS: ra.CC (0.0)
|   |   second_pos_stack = IT: ra.CC (0.0)
|   |   second_pos_stack = IU: ra.CC (0.0)
|   |   second_pos_stack = YY: ra.CC (0.0)
|   first_pos_queue = ID: la.DT (0.0)
|   first_pos_queue = PN: la.DT (2.0)
|   first_pos_queue = IC: sh (28.0)
|   first_pos_queue = MN: la.DT (3.0/1.0)
|   first_pos_queue = UK: la.DT (0.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.DT (610.0/1.0)
|   |   can_do_leftarc = false: ra.HD (4.0/1.0)
|   first_pos_queue = QV: la.SS (2.0)
|   first_pos_queue = WV: la.SS (1.0)
|   first_pos_queue = IQ: re (1.0)
|   first_pos_queue = SV: re (1.0)
|   first_pos_queue = HV: la.SS (2.0/1.0)
|   first_pos_queue = IR: re (2.0)
|   first_pos_queue = IG: la.DT (0.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.DT (73.0)
|   |   can_do_leftarc = false: ra.CC (2.0/1.0)
|   first_pos_queue = MV: la.DT (0.0)
|   first_pos_queue = IM: la.DT (0.0)
|   first_pos_queue = BV: re (2.0)
|   first_pos_queue = KV: la.DT (0.0)
|   first_pos_queue = GV: la.DT (0.0)
|   first_pos_queue = FV: la.DT (0.0)
|   first_pos_queue = PU: la.DT (0.0)
|   first_pos_queue = SP: sh (17.0/2.0)
|   first_pos_queue = XX: la.DT (0.0)
|   first_pos_queue = I?: re (1.0)
|   first_pos_queue = IS: re (3.0/1.0)
|   first_pos_queue = IT: la.DT (0.0)
|   first_pos_queue = IU: la.DT (0.0)
|   first_pos_queue = YY: la.DT (0.0)
top_pos_stack = AV
|   first_pos_queue = nil: re (1987.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (8.0)
|   first_pos_queue = NN: ra.SP (1459.0/564.0)
|   first_pos_queue = EN: sh (417.0/9.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (9.0/3.0)
|   |   |   can_do_leftarc = false: ra.MS (123.0/57.0)
|   |   second_pos_stack = ++: la.SS (1.0)
|   |   second_pos_stack = NN: re (16.0/5.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: re (12.0/7.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (25.0/19.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.KA (2.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0/1.0)
|   |   second_pos_stack = TP: ra.+F (1.0)
|   |   second_pos_stack = PR: re (5.0/2.0)
|   |   second_pos_stack = RO: la.AA (1.0)
|   |   second_pos_stack = ID: re (3.0/1.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.MS (0.0)
|   |   second_pos_stack = QV: re (9.0/5.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: re (12.0/5.0)
|   |   second_pos_stack = HV: ra.KA (6.0/3.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.+F (1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.TA (2.0/1.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.SP (1.0)
|   first_pos_queue = AJ: ra.SP (1632.0/229.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (357.0/3.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: re (20.0/7.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (20.0/7.0)
|   |   second_pos_stack = AJ: ra.IK (1.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (3.0/1.0)
|   |   second_pos_stack = VV: re (95.0/41.0)
|   |   second_pos_stack = AB: re (4.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: re (12.0/3.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.IK (15.0/7.0)
|   |   second_pos_stack = WV: ra.IK (2.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (27.0/13.0)
|   |   second_pos_stack = HV: re (17.0/7.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: re (4.0/1.0)
|   |   second_pos_stack = MV: ra.IK (11.0/4.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: ra.IK (2.0/1.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (2.0/1.0)
|   |   second_pos_stack = FV: re (5.0/1.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: re (3.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: ra.IP (0.0)
|   |   second_pos_stack = ROOT: ra.IP (1653.0/2.0)
|   |   second_pos_stack = ++: ra.IP (0.0)
|   |   second_pos_stack = NN: re (127.0/3.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (132.0/14.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (1.0)
|   |   second_pos_stack = IP: ra.IP (0.0)
|   |   second_pos_stack = PO: re (36.0)
|   |   second_pos_stack = VV: re (562.0/21.0)
|   |   second_pos_stack = AB: re (14.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (68.0)
|   |   second_pos_stack = RO: ra.IP (0.0)
|   |   second_pos_stack = ID: re (7.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: ra.IP (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: ra.IP (0.0)
|   |   second_pos_stack = VN: re (21.0/1.0)
|   |   second_pos_stack = QV: re (81.0/4.0)
|   |   second_pos_stack = WV: re (8.0/2.0)
|   |   second_pos_stack = IQ: ra.IP (0.0)
|   |   second_pos_stack = SV: re (98.0)
|   |   second_pos_stack = HV: re (60.0/5.0)
|   |   second_pos_stack = IR: ra.IP (0.0)
|   |   second_pos_stack = IG: ra.IP (0.0)
|   |   second_pos_stack = AN: re (5.0)
|   |   second_pos_stack = MV: re (46.0)
|   |   second_pos_stack = IM: ra.IP (0.0)
|   |   second_pos_stack = BV: re (7.0)
|   |   second_pos_stack = KV: re (5.0)
|   |   second_pos_stack = GV: re (2.0)
|   |   second_pos_stack = FV: re (10.0)
|   |   second_pos_stack = PU: ra.IP (0.0)
|   |   second_pos_stack = SP: ra.IP (0.0)
|   |   second_pos_stack = XX: ra.IP (0.0)
|   |   second_pos_stack = I?: ra.IP (0.0)
|   |   second_pos_stack = IS: ra.IP (0.0)
|   |   second_pos_stack = IT: ra.IP (0.0)
|   |   second_pos_stack = IU: ra.IP (0.0)
|   |   second_pos_stack = YY: re (9.0/1.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.SS (441.0/284.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (17.0/5.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: ra.SS (37.0/23.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: ra.SP (9.0/5.0)
|   |   second_pos_stack = VV: sh (137.0/85.0)
|   |   second_pos_stack = AB: ra.SP (1.0)
|   |   second_pos_stack = TP: ra.SP (1.0)
|   |   second_pos_stack = PR: ra.SP (11.0/8.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: ra.OO (1.0)
|   |   second_pos_stack = QV: sh (17.0/10.0)
|   |   second_pos_stack = WV: ra.SP (1.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (16.0/5.0)
|   |   second_pos_stack = HV: sh (19.0/11.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: ra.SP (7.0/4.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: ra.SP (2.0/1.0)
|   |   second_pos_stack = KV: sh (1.0)
|   |   second_pos_stack = GV: ra.KA (2.0/1.0)
|   |   second_pos_stack = FV: sh (5.0/2.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: ra.SS (1.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: ra.SP (2.0/1.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: ra.ES (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (43.0/26.0)
|   |   |   can_do_leftarc = false: ra.ES (492.0/381.0)
|   |   second_pos_stack = ++: la.AA (5.0/4.0)
|   |   second_pos_stack = NN: re (39.0/25.0)
|   |   second_pos_stack = EN: ra.ES (0.0)
|   |   second_pos_stack = AV: ra.ES (31.0/24.0)
|   |   second_pos_stack = AJ: ra.CC (1.0)
|   |   second_pos_stack = IK: la.SS (1.0)
|   |   second_pos_stack = IP: ra.ES (0.0)
|   |   second_pos_stack = PO: re (11.0/3.0)
|   |   second_pos_stack = VV: ra.ES (124.0/98.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.KA (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.+F (3.0/2.0)
|   |   second_pos_stack = TP: ra.ES (0.0)
|   |   second_pos_stack = PR: re (11.0/7.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (4.0/1.0)
|   |   second_pos_stack = PN: ra.ES (0.0)
|   |   second_pos_stack = IC: la.AA (4.0)
|   |   second_pos_stack = MN: ra.TA (1.0)
|   |   second_pos_stack = UK: ra.ES (0.0)
|   |   second_pos_stack = VN: ra.CC (3.0/2.0)
|   |   second_pos_stack = QV: ra.ES (27.0/17.0)
|   |   second_pos_stack = WV: re (4.0/1.0)
|   |   second_pos_stack = IQ: ra.ES (0.0)
|   |   second_pos_stack = SV: re (37.0/23.0)
|   |   second_pos_stack = HV: re (17.0/10.0)
|   |   second_pos_stack = IR: ra.ES (0.0)
|   |   second_pos_stack = IG: ra.ES (0.0)
|   |   second_pos_stack = AN: ra.AA (2.0/1.0)
|   |   second_pos_stack = MV: ra.ES (16.0/11.0)
|   |   second_pos_stack = IM: la.AA (1.0)
|   |   second_pos_stack = BV: ra.SP (1.0)
|   |   second_pos_stack = KV: ra.OO (1.0)
|   |   second_pos_stack = GV: ra.ES (0.0)
|   |   second_pos_stack = FV: ra.AN (2.0/1.0)
|   |   second_pos_stack = PU: ra.+F (1.0)
|   |   second_pos_stack = SP: ra.ES (0.0)
|   |   second_pos_stack = XX: ra.ES (0.0)
|   |   second_pos_stack = I?: ra.ES (0.0)
|   |   second_pos_stack = IS: ra.ES (0.0)
|   |   second_pos_stack = IT: la.AA (2.0/1.0)
|   |   second_pos_stack = IU: ra.ES (0.0)
|   |   second_pos_stack = YY: ra.OA (2.0/1.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (21.0/15.0)
|   |   |   can_do_leftarc = false: ra.MA (822.0/654.0)
|   |   second_pos_stack = ++: ra.DB (5.0/3.0)
|   |   second_pos_stack = NN: sh (41.0/15.0)
|   |   second_pos_stack = EN: sh (1.0)
|   |   second_pos_stack = AV: ra.NA (65.0/52.0)
|   |   second_pos_stack = AJ: ra.MA (1.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (9.0/5.0)
|   |   second_pos_stack = VV: sh (156.0/106.0)
|   |   second_pos_stack = AB: sh (9.0/5.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (23.0/14.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: ra.+F (2.0/1.0)
|   |   second_pos_stack = PN: sh (1.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: ra.DB (2.0/1.0)
|   |   second_pos_stack = VN: sh (7.0/2.0)
|   |   second_pos_stack = QV: sh (26.0/16.0)
|   |   second_pos_stack = WV: ra.PL (7.0/4.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (40.0/21.0)
|   |   second_pos_stack = HV: sh (36.0/20.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (3.0/1.0)
|   |   second_pos_stack = MV: sh (13.0/5.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: ra.MA (2.0/1.0)
|   |   second_pos_stack = KV: ra.MA (2.0/1.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: ra.RA (5.0/3.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: ra.MA (6.0/4.0)
|   first_pos_queue = TP: ra.SP (357.0/20.0)
|   first_pos_queue = PR: ra.OA (1147.0/588.0)
|   first_pos_queue = RO: sh (73.0/37.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN
|   |   second_pos_stack = nil: ra.SS (0.0)
|   |   second_pos_stack = ROOT: ra.SS (29.0/15.0)
|   |   second_pos_stack = ++: ra.SS (0.0)
|   |   second_pos_stack = NN: ra.SP (1.0)
|   |   second_pos_stack = EN: ra.SS (0.0)
|   |   second_pos_stack = AV: sh (1.0)
|   |   second_pos_stack = AJ: ra.SS (0.0)
|   |   second_pos_stack = IK: ra.SS (0.0)
|   |   second_pos_stack = IP: ra.SS (0.0)
|   |   second_pos_stack = PO: ra.SS (0.0)
|   |   second_pos_stack = VV: ra.SP (2.0/1.0)
|   |   second_pos_stack = AB: ra.SS (0.0)
|   |   second_pos_stack = TP: ra.SS (0.0)
|   |   second_pos_stack = PR: ra.SS (0.0)
|   |   second_pos_stack = RO: ra.SS (0.0)
|   |   second_pos_stack = ID: ra.SS (0.0)
|   |   second_pos_stack = PN: ra.SS (0.0)
|   |   second_pos_stack = IC: ra.SS (0.0)
|   |   second_pos_stack = MN: ra.SS (0.0)
|   |   second_pos_stack = UK: ra.SS (0.0)
|   |   second_pos_stack = VN: ra.SS (0.0)
|   |   second_pos_stack = QV: ra.SS (0.0)
|   |   second_pos_stack = WV: ra.SS (0.0)
|   |   second_pos_stack = IQ: ra.SS (0.0)
|   |   second_pos_stack = SV: ra.SS (0.0)
|   |   second_pos_stack = HV: ra.SS (0.0)
|   |   second_pos_stack = IR: ra.SS (0.0)
|   |   second_pos_stack = IG: ra.SS (0.0)
|   |   second_pos_stack = AN: ra.SS (0.0)
|   |   second_pos_stack = MV: ra.SS (0.0)
|   |   second_pos_stack = IM: ra.SS (0.0)
|   |   second_pos_stack = BV: ra.SS (0.0)
|   |   second_pos_stack = KV: ra.SS (0.0)
|   |   second_pos_stack = GV: ra.SS (0.0)
|   |   second_pos_stack = FV: ra.SS (0.0)
|   |   second_pos_stack = PU: ra.SS (0.0)
|   |   second_pos_stack = SP: ra.SS (0.0)
|   |   second_pos_stack = XX: ra.SS (0.0)
|   |   second_pos_stack = I?: ra.SS (0.0)
|   |   second_pos_stack = IS: ra.SS (0.0)
|   |   second_pos_stack = IT: ra.SS (0.0)
|   |   second_pos_stack = IU: ra.SS (0.0)
|   |   second_pos_stack = YY: ra.SS (0.0)
|   first_pos_queue = IC: ra.JC (166.0/58.0)
|   first_pos_queue = MN: ra.SP (5.0/2.0)
|   first_pos_queue = UK: sh (117.0/2.0)
|   first_pos_queue = VN: ra.SP (174.0/68.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (3.0/2.0)
|   |   |   can_do_leftarc = false: ra.MS (44.0/22.0)
|   |   second_pos_stack = ++: la.TA (3.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.+F (2.0/1.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: la.AA (1.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: re (6.0/2.0)
|   |   second_pos_stack = VV: re (8.0/4.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.AA (2.0/1.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.MS (0.0)
|   |   second_pos_stack = QV: re (2.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.AA (3.0/1.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.+F (1.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: re (1.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = WV: re (20.0/15.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (31.0/1.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: ra.IQ (0.0)
|   |   second_pos_stack = AV: ra.IQ (0.0)
|   |   second_pos_stack = AJ: ra.IQ (0.0)
|   |   second_pos_stack = IK: ra.IQ (0.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: ra.IQ (0.0)
|   |   second_pos_stack = VV: ra.IQ (6.0/3.0)
|   |   second_pos_stack = AB: ra.IQ (0.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IQ (0.0)
|   |   second_pos_stack = ID: ra.IQ (0.0)
|   |   second_pos_stack = PN: ra.IQ (0.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (0.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: ra.IQ (0.0)
|   |   second_pos_stack = QV: ra.IQ (1.0)
|   |   second_pos_stack = WV: ra.IQ (0.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: ra.IQ (0.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: ra.IQ (0.0)
|   |   second_pos_stack = MV: ra.IQ (0.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: ra.IQ (0.0)
|   |   second_pos_stack = KV: ra.IQ (0.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: ra.IQ (0.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: ra.IQ (0.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: ra.ES (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   |   can_do_leftarc = false: ra.ES (49.0/33.0)
|   |   second_pos_stack = ++: ra.ES (0.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: ra.ES (0.0)
|   |   second_pos_stack = AV: re (3.0)
|   |   second_pos_stack = AJ: ra.ES (0.0)
|   |   second_pos_stack = IK: ra.ES (0.0)
|   |   second_pos_stack = IP: ra.ES (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: ra.ES (13.0/9.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: ra.ES (0.0)
|   |   second_pos_stack = PR: ra.AN (2.0/1.0)
|   |   second_pos_stack = RO: ra.ES (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.ES (0.0)
|   |   second_pos_stack = IC: ra.ES (0.0)
|   |   second_pos_stack = MN: ra.ES (0.0)
|   |   second_pos_stack = UK: ra.ES (0.0)
|   |   second_pos_stack = VN: ra.AA (2.0)
|   |   second_pos_stack = QV: ra.ES (1.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.ES (0.0)
|   |   second_pos_stack = SV: re (11.0/6.0)
|   |   second_pos_stack = HV: ra.SS (2.0/1.0)
|   |   second_pos_stack = IR: ra.ES (0.0)
|   |   second_pos_stack = IG: ra.ES (0.0)
|   |   second_pos_stack = AN: ra.ES (0.0)
|   |   second_pos_stack = MV: ra.AA (2.0/1.0)
|   |   second_pos_stack = IM: ra.ES (0.0)
|   |   second_pos_stack = BV: ra.ES (0.0)
|   |   second_pos_stack = KV: ra.ES (0.0)
|   |   second_pos_stack = GV: ra.ES (0.0)
|   |   second_pos_stack = FV: ra.ES (0.0)
|   |   second_pos_stack = PU: ra.ES (0.0)
|   |   second_pos_stack = SP: ra.ES (0.0)
|   |   second_pos_stack = XX: ra.ES (0.0)
|   |   second_pos_stack = I?: ra.ES (0.0)
|   |   second_pos_stack = IS: ra.ES (0.0)
|   |   second_pos_stack = IT: ra.ES (0.0)
|   |   second_pos_stack = IU: ra.ES (0.0)
|   |   second_pos_stack = YY: ra.ES (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (7.0/5.0)
|   |   |   can_do_leftarc = false: ra.MS (52.0/31.0)
|   |   second_pos_stack = ++: la.XA (1.0)
|   |   second_pos_stack = NN: ra.+F (3.0/2.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.+F (5.0/3.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: re (5.0/2.0)
|   |   second_pos_stack = VV: ra.+F (16.0/13.0)
|   |   second_pos_stack = AB: ra.OA (1.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: re (3.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.+F (1.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: ra.CC (2.0/1.0)
|   |   second_pos_stack = QV: ra.SS (4.0/1.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.MS (0.0)
|   |   second_pos_stack = HV: re (6.0/1.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.+F (1.0)
|   |   second_pos_stack = MV: ra.KA (1.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = IR: ra.JR (32.0/17.0)
|   first_pos_queue = IG: ra.IG (24.0/6.0)
|   first_pos_queue = AN: ra.SP (36.0/11.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (4.0/2.0)
|   |   |   can_do_leftarc = false: ra.MS (17.0/5.0)
|   |   second_pos_stack = ++: la.MA (1.0)
|   |   second_pos_stack = NN: ra.MS (0.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.MS (0.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: ra.MS (0.0)
|   |   second_pos_stack = VV: ra.AA (2.0/1.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: re (3.0/1.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.CC (2.0/1.0)
|   |   second_pos_stack = QV: re (2.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.MS (0.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.ES (1.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = IM: sh (46.0/3.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.AA (11.0/2.0)
|   |   can_do_leftarc = false: ra.ES (39.0/30.0)
|   first_pos_queue = KV: ra.ES (10.0/7.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: ra.ES (0.0)
|   |   second_pos_stack = ROOT: ra.MS (6.0/3.0)
|   |   second_pos_stack = ++: ra.ES (0.0)
|   |   second_pos_stack = NN: ra.ES (0.0)
|   |   second_pos_stack = EN: ra.ES (0.0)
|   |   second_pos_stack = AV: ra.ES (0.0)
|   |   second_pos_stack = AJ: ra.ES (0.0)
|   |   second_pos_stack = IK: ra.ES (0.0)
|   |   second_pos_stack = IP: ra.ES (0.0)
|   |   second_pos_stack = PO: ra.OA (1.0)
|   |   second_pos_stack = VV: re (7.0/5.0)
|   |   second_pos_stack = AB: ra.ES (0.0)
|   |   second_pos_stack = TP: ra.ES (0.0)
|   |   second_pos_stack = PR: ra.ES (0.0)
|   |   second_pos_stack = RO: ra.ES (0.0)
|   |   second_pos_stack = ID: ra.ES (0.0)
|   |   second_pos_stack = PN: ra.ES (0.0)
|   |   second_pos_stack = IC: ra.ES (0.0)
|   |   second_pos_stack = MN: ra.ES (0.0)
|   |   second_pos_stack = UK: ra.ES (0.0)
|   |   second_pos_stack = VN: ra.ES (0.0)
|   |   second_pos_stack = QV: ra.ES (1.0)
|   |   second_pos_stack = WV: ra.ES (0.0)
|   |   second_pos_stack = IQ: ra.ES (0.0)
|   |   second_pos_stack = SV: ra.ES (0.0)
|   |   second_pos_stack = HV: ra.ES (0.0)
|   |   second_pos_stack = IR: ra.ES (0.0)
|   |   second_pos_stack = IG: ra.ES (0.0)
|   |   second_pos_stack = AN: ra.ES (0.0)
|   |   second_pos_stack = MV: ra.ES (0.0)
|   |   second_pos_stack = IM: ra.ES (0.0)
|   |   second_pos_stack = BV: ra.ES (0.0)
|   |   second_pos_stack = KV: ra.ES (0.0)
|   |   second_pos_stack = GV: ra.ES (0.0)
|   |   second_pos_stack = FV: ra.ES (0.0)
|   |   second_pos_stack = PU: ra.ES (0.0)
|   |   second_pos_stack = SP: ra.ES (0.0)
|   |   second_pos_stack = XX: ra.ES (0.0)
|   |   second_pos_stack = I?: ra.ES (0.0)
|   |   second_pos_stack = IS: ra.ES (0.0)
|   |   second_pos_stack = IT: ra.ES (0.0)
|   |   second_pos_stack = IU: ra.ES (0.0)
|   |   second_pos_stack = YY: ra.ES (0.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: ra.ES (0.0)
|   |   second_pos_stack = ROOT: ra.ES (34.0/18.0)
|   |   second_pos_stack = ++: la.AA (1.0)
|   |   second_pos_stack = NN: ra.ES (3.0/2.0)
|   |   second_pos_stack = EN: ra.ES (0.0)
|   |   second_pos_stack = AV: ra.TA (1.0)
|   |   second_pos_stack = AJ: ra.ES (0.0)
|   |   second_pos_stack = IK: ra.ES (0.0)
|   |   second_pos_stack = IP: ra.ES (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: ra.ES (10.0/5.0)
|   |   second_pos_stack = AB: ra.ES (0.0)
|   |   second_pos_stack = TP: ra.ES (0.0)
|   |   second_pos_stack = PR: ra.ES (0.0)
|   |   second_pos_stack = RO: ra.ES (0.0)
|   |   second_pos_stack = ID: ra.ES (0.0)
|   |   second_pos_stack = PN: ra.ES (0.0)
|   |   second_pos_stack = IC: ra.ES (0.0)
|   |   second_pos_stack = MN: ra.ES (0.0)
|   |   second_pos_stack = UK: ra.ES (0.0)
|   |   second_pos_stack = VN: ra.ES (0.0)
|   |   second_pos_stack = QV: ra.ES (0.0)
|   |   second_pos_stack = WV: ra.ES (0.0)
|   |   second_pos_stack = IQ: ra.ES (0.0)
|   |   second_pos_stack = SV: re (4.0/2.0)
|   |   second_pos_stack = HV: ra.ES (0.0)
|   |   second_pos_stack = IR: ra.ES (0.0)
|   |   second_pos_stack = IG: ra.ES (0.0)
|   |   second_pos_stack = AN: ra.ES (0.0)
|   |   second_pos_stack = MV: ra.ES (0.0)
|   |   second_pos_stack = IM: ra.ES (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.ES (0.0)
|   |   second_pos_stack = GV: ra.ES (0.0)
|   |   second_pos_stack = FV: ra.ES (0.0)
|   |   second_pos_stack = PU: ra.ES (0.0)
|   |   second_pos_stack = SP: ra.ES (0.0)
|   |   second_pos_stack = XX: ra.ES (0.0)
|   |   second_pos_stack = I?: ra.ES (0.0)
|   |   second_pos_stack = IS: ra.ES (0.0)
|   |   second_pos_stack = IT: ra.ES (0.0)
|   |   second_pos_stack = IU: ra.ES (0.0)
|   |   second_pos_stack = YY: ra.ES (0.0)
|   first_pos_queue = PU: ra.XX (2.0)
|   first_pos_queue = SP: ra.SP (9.0)
|   first_pos_queue = XX: ra.SP (4.0/2.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (79.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: ra.I? (2.0/1.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: la.MS (1.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (7.0/1.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: ra.I? (2.0/1.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: re (5.0)
|   |   second_pos_stack = WV: ra.I? (0.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: re (4.0)
|   |   second_pos_stack = HV: re (3.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: ra.I? (2.0/1.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (1.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS
|   |   second_pos_stack = nil: ra.IS (0.0)
|   |   second_pos_stack = ROOT: ra.IS (6.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: re (4.0)
|   |   second_pos_stack = EN: ra.IS (0.0)
|   |   second_pos_stack = AV: ra.IS (0.0)
|   |   second_pos_stack = AJ: ra.IS (0.0)
|   |   second_pos_stack = IK: ra.IS (0.0)
|   |   second_pos_stack = IP: ra.IS (0.0)
|   |   second_pos_stack = PO: ra.IS (0.0)
|   |   second_pos_stack = VV: ra.IS (2.0)
|   |   second_pos_stack = AB: ra.IS (0.0)
|   |   second_pos_stack = TP: ra.IS (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IS (0.0)
|   |   second_pos_stack = ID: ra.IS (0.0)
|   |   second_pos_stack = PN: ra.IS (0.0)
|   |   second_pos_stack = IC: ra.IS (0.0)
|   |   second_pos_stack = MN: ra.IS (0.0)
|   |   second_pos_stack = UK: ra.IS (0.0)
|   |   second_pos_stack = VN: ra.IS (0.0)
|   |   second_pos_stack = QV: ra.IS (0.0)
|   |   second_pos_stack = WV: ra.IS (0.0)
|   |   second_pos_stack = IQ: ra.IS (0.0)
|   |   second_pos_stack = SV: ra.IS (0.0)
|   |   second_pos_stack = HV: ra.IS (0.0)
|   |   second_pos_stack = IR: ra.IS (0.0)
|   |   second_pos_stack = IG: ra.IS (0.0)
|   |   second_pos_stack = AN: ra.IS (0.0)
|   |   second_pos_stack = MV: ra.IS (0.0)
|   |   second_pos_stack = IM: ra.IS (0.0)
|   |   second_pos_stack = BV: ra.IS (0.0)
|   |   second_pos_stack = KV: ra.IS (0.0)
|   |   second_pos_stack = GV: ra.IS (0.0)
|   |   second_pos_stack = FV: ra.IS (0.0)
|   |   second_pos_stack = PU: ra.IS (0.0)
|   |   second_pos_stack = SP: ra.IS (0.0)
|   |   second_pos_stack = XX: ra.IS (0.0)
|   |   second_pos_stack = I?: ra.IS (0.0)
|   |   second_pos_stack = IS: ra.IS (0.0)
|   |   second_pos_stack = IT: ra.IS (0.0)
|   |   second_pos_stack = IU: ra.IS (0.0)
|   |   second_pos_stack = YY: ra.IS (0.0)
|   first_pos_queue = IT: ra.IT (55.0/20.0)
|   first_pos_queue = IU
|   |   second_pos_stack = nil: ra.IU (0.0)
|   |   second_pos_stack = ROOT: ra.IU (24.0)
|   |   second_pos_stack = ++: ra.IU (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.IU (0.0)
|   |   second_pos_stack = AV: re (4.0)
|   |   second_pos_stack = AJ: ra.IU (0.0)
|   |   second_pos_stack = IK: ra.IU (0.0)
|   |   second_pos_stack = IP: ra.IU (0.0)
|   |   second_pos_stack = PO: ra.IU (0.0)
|   |   second_pos_stack = VV: re (2.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: ra.IU (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IU (0.0)
|   |   second_pos_stack = ID: ra.IU (0.0)
|   |   second_pos_stack = PN: ra.IU (0.0)
|   |   second_pos_stack = IC: ra.IU (0.0)
|   |   second_pos_stack = MN: ra.IU (0.0)
|   |   second_pos_stack = UK: ra.IU (0.0)
|   |   second_pos_stack = VN: ra.IU (0.0)
|   |   second_pos_stack = QV: ra.IU (0.0)
|   |   second_pos_stack = WV: ra.IU (0.0)
|   |   second_pos_stack = IQ: ra.IU (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: ra.IU (0.0)
|   |   second_pos_stack = IR: ra.IU (0.0)
|   |   second_pos_stack = IG: ra.IU (0.0)
|   |   second_pos_stack = AN: ra.IU (0.0)
|   |   second_pos_stack = MV: ra.IU (0.0)
|   |   second_pos_stack = IM: ra.IU (0.0)
|   |   second_pos_stack = BV: ra.IU (0.0)
|   |   second_pos_stack = KV: ra.IU (0.0)
|   |   second_pos_stack = GV: ra.IU (0.0)
|   |   second_pos_stack = FV: ra.IU (0.0)
|   |   second_pos_stack = PU: ra.IU (0.0)
|   |   second_pos_stack = SP: ra.IU (0.0)
|   |   second_pos_stack = XX: ra.IU (0.0)
|   |   second_pos_stack = I?: ra.IU (0.0)
|   |   second_pos_stack = IS: ra.IU (0.0)
|   |   second_pos_stack = IT: ra.IU (0.0)
|   |   second_pos_stack = IU: ra.IU (0.0)
|   |   second_pos_stack = YY: ra.IU (0.0)
|   first_pos_queue = YY: ra.MS (2.0/1.0)
top_pos_stack = AJ
|   first_pos_queue = nil: re (65.0)
|   first_pos_queue = ROOT: la.AT (0.0)
|   first_pos_queue = ++: sh (666.0/1.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.AT (4626.0/69.0)
|   |   can_do_leftarc = false: re (421.0/86.0)
|   first_pos_queue = EN: sh (15.0/1.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.SP (113.0/31.0)
|   |   can_do_leftarc = false: re (113.0/2.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true
|   |   |   second_pos_stack = nil: ra.CC (0.0)
|   |   |   second_pos_stack = ROOT: ra.CC (15.0/5.0)
|   |   |   second_pos_stack = ++: la.AA (19.0/9.0)
|   |   |   second_pos_stack = NN: ra.CC (43.0/27.0)
|   |   |   second_pos_stack = EN: ra.CC (148.0/83.0)
|   |   |   second_pos_stack = AV: la.AA (53.0/3.0)
|   |   |   second_pos_stack = AJ: ra.CC (11.0/4.0)
|   |   |   second_pos_stack = IK: la.AA (18.0/10.0)
|   |   |   second_pos_stack = IP: la.AA (1.0)
|   |   |   second_pos_stack = PO: sh (135.0/80.0)
|   |   |   second_pos_stack = VV: ra.CC (43.0/25.0)
|   |   |   second_pos_stack = AB: la.AA (27.0/9.0)
|   |   |   second_pos_stack = TP: sh (3.0/1.0)
|   |   |   second_pos_stack = PR: ra.CC (99.0/48.0)
|   |   |   second_pos_stack = RO: ra.CC (8.0/2.0)
|   |   |   second_pos_stack = ID: ra.CC (9.0/4.0)
|   |   |   second_pos_stack = PN: ra.CC (0.0)
|   |   |   second_pos_stack = IC: sh (1.0)
|   |   |   second_pos_stack = MN: ra.CC (0.0)
|   |   |   second_pos_stack = UK: sh (16.0/10.0)
|   |   |   second_pos_stack = VN: sh (3.0)
|   |   |   second_pos_stack = QV: sh (1.0)
|   |   |   second_pos_stack = WV: ra.CC (0.0)
|   |   |   second_pos_stack = IQ: ra.CC (0.0)
|   |   |   second_pos_stack = SV: ra.CC (0.0)
|   |   |   second_pos_stack = HV: la.AA (13.0/6.0)
|   |   |   second_pos_stack = IR: ra.CC (1.0)
|   |   |   second_pos_stack = IG: ra.CC (1.0)
|   |   |   second_pos_stack = AN: sh (1.0)
|   |   |   second_pos_stack = MV: ra.CC (0.0)
|   |   |   second_pos_stack = IM: ra.CC (0.0)
|   |   |   second_pos_stack = BV: la.AA (12.0/3.0)
|   |   |   second_pos_stack = KV: ra.CC (0.0)
|   |   |   second_pos_stack = GV: la.AA (2.0)
|   |   |   second_pos_stack = FV: la.AA (2.0/1.0)
|   |   |   second_pos_stack = PU: ra.CC (0.0)
|   |   |   second_pos_stack = SP: ra.CC (0.0)
|   |   |   second_pos_stack = XX: ra.CC (0.0)
|   |   |   second_pos_stack = I?: ra.CC (0.0)
|   |   |   second_pos_stack = IS: ra.CC (0.0)
|   |   |   second_pos_stack = IT: ra.CC (0.0)
|   |   |   second_pos_stack = IU: ra.CC (0.0)
|   |   |   second_pos_stack = YY: ra.CC (0.0)
|   |   can_do_leftarc = false: ra.CC (320.0/88.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (11.0/5.0)
|   |   second_pos_stack = ++: sh (2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: sh (3.0)
|   |   |   can_do_leftarc = false: re (21.0/10.0)
|   |   second_pos_stack = EN: sh (17.0)
|   |   second_pos_stack = AV: re (189.0/53.0)
|   |   second_pos_stack = AJ: sh (34.0/17.0)
|   |   second_pos_stack = IK: sh (3.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (20.0/2.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: sh (3.0)
|   |   |   can_do_leftarc = false: re (93.0/23.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: sh (2.0)
|   |   |   can_do_leftarc = false: re (3.0/1.0)
|   |   second_pos_stack = TP: sh (2.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: sh (8.0)
|   |   |   can_do_leftarc = false: re (23.0/13.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: ra.IK (2.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: sh (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.IK (6.0/2.0)
|   |   second_pos_stack = VN: ra.IK (3.0/2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.IK (3.0/2.0)
|   |   second_pos_stack = HV: re (6.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (34.0/11.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (4.0/2.0)
|   |   second_pos_stack = FV: re (2.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (969.0/21.0)
|   first_pos_queue = PO: sh (138.0/63.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (30.0/14.0)
|   |   |   can_do_leftarc = false: ra.AA (5.0/3.0)
|   |   second_pos_stack = ++: la.AA (12.0/6.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.AA (15.0/3.0)
|   |   |   can_do_leftarc = false: re (14.0/8.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (276.0/13.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.KA (3.0/1.0)
|   |   |   can_do_leftarc = false: re (29.0)
|   |   second_pos_stack = IK: la.SS (6.0/3.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.AA (37.0/12.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = VV: re (81.0/7.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.AA (14.0/7.0)
|   |   |   can_do_leftarc = false: re (4.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: la.AA (2.0/1.0)
|   |   |   can_do_leftarc = false: re (33.0/7.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.MA (3.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (10.0/1.0)
|   |   second_pos_stack = VN: la.AA (4.0/2.0)
|   |   second_pos_stack = QV: re (15.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (8.0)
|   |   second_pos_stack = HV: re (40.0)
|   |   second_pos_stack = IR: la.AA (1.0)
|   |   second_pos_stack = IG: la.TA (1.0)
|   |   second_pos_stack = AN: ra.OA (1.0)
|   |   second_pos_stack = MV: re (3.0)
|   |   second_pos_stack = IM: la.AA (15.0/2.0)
|   |   second_pos_stack = BV: re (51.0/2.0)
|   |   second_pos_stack = KV: re (3.0)
|   |   second_pos_stack = GV: re (5.0)
|   |   second_pos_stack = FV: re (5.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (2.0/1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB
|   |   can_do_leftarc = true: la.AA (44.0/16.0)
|   |   can_do_leftarc = false: re (180.0/71.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: la.AA (181.0/38.0)
|   |   can_do_leftarc = false: ra.CC (33.0/16.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.ET (15.0/6.0)
|   |   |   can_do_leftarc = false: ra.OA (6.0/2.0)
|   |   second_pos_stack = ++: ra.ET (2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   |   can_do_leftarc = false: ra.OA (15.0/8.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (337.0/13.0)
|   |   second_pos_stack = AJ: re (37.0/6.0)
|   |   second_pos_stack = IK: la.AA (2.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (5.0/2.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (2.0)
|   |   |   can_do_leftarc = false: re (176.0/18.0)
|   |   second_pos_stack = AB: la.TA (3.0/2.0)
|   |   second_pos_stack = TP: re (4.0/1.0)
|   |   second_pos_stack = PR: re (37.0/14.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.ET (3.0/2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.AN (3.0/2.0)
|   |   second_pos_stack = VN: ra.AA (3.0/2.0)
|   |   second_pos_stack = QV: ra.ET (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.AN (2.0/1.0)
|   |   second_pos_stack = HV: re (17.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: ra.PA (1.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (78.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (24.0/2.0)
|   |   second_pos_stack = FV: re (8.0/4.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = RO: sh (18.0/9.0)
|   first_pos_queue = ID: ra.HD (3.0/1.0)
|   first_pos_queue = PN: la.AT (19.0/5.0)
|   first_pos_queue = IC
|   |   can_do_leftarc = true: sh (42.0/10.0)
|   |   can_do_leftarc = false
|   |   |   second_pos_stack = nil: ra.JC (0.0)
|   |   |   second_pos_stack = ROOT: ra.JC (2.0)
|   |   |   second_pos_stack = ++: ra.JC (0.0)
|   |   |   second_pos_stack = NN: ra.JC (5.0/1.0)
|   |   |   second_pos_stack = EN: ra.JC (0.0)
|   |   |   second_pos_stack = AV: re (21.0/7.0)
|   |   |   second_pos_stack = AJ: ra.JC (8.0/3.0)
|   |   |   second_pos_stack = IK: ra.JC (0.0)
|   |   |   second_pos_stack = IP: ra.JC (0.0)
|   |   |   second_pos_stack = PO: ra.JC (0.0)
|   |   |   second_pos_stack = VV: ra.JC (14.0/7.0)
|   |   |   second_pos_stack = AB: ra.JC (0.0)
|   |   |   second_pos_stack = TP: ra.JC (0.0)
|   |   |   second_pos_stack = PR: ra.JC (8.0/3.0)
|   |   |   second_pos_stack = RO: ra.JC (0.0)
|   |   |   second_pos_stack = ID: ra.JC (0.0)
|   |   |   second_pos_stack = PN: ra.JC (0.0)
|   |   |   second_pos_stack = IC: ra.JC (0.0)
|   |   |   second_pos_stack = MN: ra.JC (0.0)
|   |   |   second_pos_stack = UK: ra.JC (0.0)
|   |   |   second_pos_stack = VN: ra.JC (0.0)
|   |   |   second_pos_stack = QV: ra.JC (0.0)
|   |   |   second_pos_stack = WV: ra.JC (0.0)
|   |   |   second_pos_stack = IQ: ra.JC (0.0)
|   |   |   second_pos_stack = SV: ra.JC (0.0)
|   |   |   second_pos_stack = HV: ra.JC (0.0)
|   |   |   second_pos_stack = IR: ra.JC (0.0)
|   |   |   second_pos_stack = IG: ra.JC (0.0)
|   |   |   second_pos_stack = AN: ra.JC (0.0)
|   |   |   second_pos_stack = MV: ra.JC (0.0)
|   |   |   second_pos_stack = IM: ra.JC (0.0)
|   |   |   second_pos_stack = BV: re (1.0)
|   |   |   second_pos_stack = KV: ra.JC (0.0)
|   |   |   second_pos_stack = GV: re (1.0)
|   |   |   second_pos_stack = FV: ra.JC (0.0)
|   |   |   second_pos_stack = PU: ra.JC (0.0)
|   |   |   second_pos_stack = SP: ra.JC (0.0)
|   |   |   second_pos_stack = XX: ra.JC (0.0)
|   |   |   second_pos_stack = I?: ra.JC (0.0)
|   |   |   second_pos_stack = IS: ra.JC (0.0)
|   |   |   second_pos_stack = IT: ra.JC (0.0)
|   |   |   second_pos_stack = IU: ra.JC (0.0)
|   |   |   second_pos_stack = YY: ra.JC (0.0)
|   first_pos_queue = MN: la.AT (9.0/2.0)
|   first_pos_queue = UK: sh (302.0/3.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.AT (1058.0/10.0)
|   |   can_do_leftarc = false: re (67.0/10.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (9.0/5.0)
|   |   second_pos_stack = ++: la.AA (2.0/1.0)
|   |   second_pos_stack = NN: re (4.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (16.0/2.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: la.AA (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.AA (8.0/5.0)
|   |   second_pos_stack = VV: re (5.0/1.0)
|   |   second_pos_stack = AB: la.AA (2.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (5.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.AA (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: sh (2.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: sh (1.0)
|   |   second_pos_stack = BV: re (8.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (3.0)
|   |   second_pos_stack = AJ: ra.EF (2.0/1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: ra.ET (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.ET (1.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IQ: re (11.0/1.0)
|   first_pos_queue = SV: re (53.0/17.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (14.0/7.0)
|   |   |   can_do_leftarc = false: ra.ET (4.0/3.0)
|   |   second_pos_stack = ++: la.SP (1.0)
|   |   second_pos_stack = NN: la.AA (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (30.0)
|   |   second_pos_stack = AJ: re (7.0)
|   |   second_pos_stack = IK: la.SP (2.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.MA (4.0/3.0)
|   |   second_pos_stack = VV: re (9.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (5.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (2.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (2.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IR: re (36.0/25.0)
|   first_pos_queue = IG: re (7.0/1.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.AT (198.0/3.0)
|   |   can_do_leftarc = false: re (36.0/6.0)
|   first_pos_queue = MV: re (19.0/4.0)
|   first_pos_queue = IM: sh (243.0/2.0)
|   first_pos_queue = BV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SP (3.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: la.AA (3.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (14.0)
|   |   second_pos_stack = AJ: re (7.0)
|   |   second_pos_stack = IK: la.SP (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.AA (3.0)
|   |   second_pos_stack = VV: re (8.0)
|   |   second_pos_stack = AB: la.SS (1.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (3.0/1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = KV
|   |   can_do_leftarc = true: la.SS (2.0/1.0)
|   |   can_do_leftarc = false: re (4.0)
|   first_pos_queue = GV: re (11.0/2.0)
|   first_pos_queue = FV: re (50.0/11.0)
|   first_pos_queue = PU: sh (1.0)
|   first_pos_queue = SP: la.AA (24.0/14.0)
|   first_pos_queue = XX: la.AT (0.0)
|   first_pos_queue = I?: re (34.0/4.0)
|   first_pos_queue = IS: re (4.0)
|   first_pos_queue = IT: re (35.0/8.0)
|   first_pos_queue = IU
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IU (5.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (7.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = YY: ra.MS (2.0/1.0)
top_pos_stack = IK
|   can_do_leftarc = true
|   |   first_pos_queue = nil: la.IK (0.0)
|   |   first_pos_queue = ROOT: la.IK (0.0)
|   |   first_pos_queue = ++: sh (82.0/1.0)
|   |   first_pos_queue = NN: la.IK (644.0/51.0)
|   |   first_pos_queue = EN: sh (25.0/2.0)
|   |   first_pos_queue = AV: la.IK (125.0/5.0)
|   |   first_pos_queue = AJ
|   |   |   second_pos_stack = nil: la.IK (0.0)
|   |   |   second_pos_stack = ROOT: la.IK (0.0)
|   |   |   second_pos_stack = ++: la.IK (2.0/1.0)
|   |   |   second_pos_stack = NN: sh (47.0/13.0)
|   |   |   second_pos_stack = EN: la.IK (2.0/1.0)
|   |   |   second_pos_stack = AV: la.IK (0.0)
|   |   |   second_pos_stack = AJ: la.IK (97.0/12.0)
|   |   |   second_pos_stack = IK: la.IK (0.0)
|   |   |   second_pos_stack = IP: la.IK (0.0)
|   |   |   second_pos_stack = PO: la.IK (6.0/3.0)
|   |   |   second_pos_stack = VV: la.IK (0.0)
|   |   |   second_pos_stack = AB: la.IK (0.0)
|   |   |   second_pos_stack = TP: la.IK (4.0)
|   |   |   second_pos_stack = PR: la.IK (0.0)
|   |   |   second_pos_stack = RO: la.IK (0.0)
|   |   |   second_pos_stack = ID: la.IK (1.0)
|   |   |   second_pos_stack = PN: la.IK (0.0)
|   |   |   second_pos_stack = IC: la.IK (1.0)
|   |   |   second_pos_stack = MN: la.IK (3.0/1.0)
|   |   |   second_pos_stack = UK: la.IK (0.0)
|   |   |   second_pos_stack = VN: sh (10.0/1.0)
|   |   |   second_pos_stack = QV: la.IK (0.0)
|   |   |   second_pos_stack = WV: la.IK (0.0)
|   |   |   second_pos_stack = IQ: la.IK (0.0)
|   |   |   second_pos_stack = SV: la.IK (0.0)
|   |   |   second_pos_stack = HV: la.IK (0.0)
|   |   |   second_pos_stack = IR: la.IK (1.0)
|   |   |   second_pos_stack = IG: la.IK (0.0)
|   |   |   second_pos_stack = AN: sh (9.0)
|   |   |   second_pos_stack = MV: la.IK (0.0)
|   |   |   second_pos_stack = IM: la.IK (0.0)
|   |   |   second_pos_stack = BV: sh (1.0)
|   |   |   second_pos_stack = KV: la.IK (0.0)
|   |   |   second_pos_stack = GV: la.IK (0.0)
|   |   |   second_pos_stack = FV: la.IK (0.0)
|   |   |   second_pos_stack = PU: la.IK (0.0)
|   |   |   second_pos_stack = SP: la.IK (0.0)
|   |   |   second_pos_stack = XX: la.IK (0.0)
|   |   |   second_pos_stack = I?: la.IK (0.0)
|   |   |   second_pos_stack = IS: la.IK (0.0)
|   |   |   second_pos_stack = IT: la.IK (0.0)
|   |   |   second_pos_stack = IU: la.IK (0.0)
|   |   |   second_pos_stack = YY: la.IK (0.0)
|   |   first_pos_queue = IK: la.IK (0.0)
|   |   first_pos_queue = IP: la.IK (0.0)
|   |   first_pos_queue = PO: sh (100.0/16.0)
|   |   first_pos_queue = VV: la.IK (375.0/19.0)
|   |   first_pos_queue = AB: sh (91.0/8.0)
|   |   first_pos_queue = TP
|   |   |   second_pos_stack = nil: la.IK (0.0)
|   |   |   second_pos_stack = ROOT: la.IK (0.0)
|   |   |   second_pos_stack = ++: la.IK (0.0)
|   |   |   second_pos_stack = NN: sh (11.0/1.0)
|   |   |   second_pos_stack = EN: la.IK (0.0)
|   |   |   second_pos_stack = AV: la.IK (0.0)
|   |   |   second_pos_stack = AJ: la.IK (17.0/3.0)
|   |   |   second_pos_stack = IK: la.IK (0.0)
|   |   |   second_pos_stack = IP: la.IK (0.0)
|   |   |   second_pos_stack = PO: la.IK (0.0)
|   |   |   second_pos_stack = VV: la.IK (0.0)
|   |   |   second_pos_stack = AB: la.IK (0.0)
|   |   |   second_pos_stack = TP: la.IK (5.0)
|   |   |   second_pos_stack = PR: la.IK (0.0)
|   |   |   second_pos_stack = RO: la.IK (0.0)
|   |   |   second_pos_stack = ID: la.IK (0.0)
|   |   |   second_pos_stack = PN: la.IK (0.0)
|   |   |   second_pos_stack = IC: la.IK (0.0)
|   |   |   second_pos_stack = MN: sh (1.0)
|   |   |   second_pos_stack = UK: la.IK (0.0)
|   |   |   second_pos_stack = VN: la.IK (0.0)
|   |   |   second_pos_stack = QV: la.IK (0.0)
|   |   |   second_pos_stack = WV: la.IK (0.0)
|   |   |   second_pos_stack = IQ: la.IK (0.0)
|   |   |   second_pos_stack = SV: la.IK (0.0)
|   |   |   second_pos_stack = HV: la.IK (0.0)
|   |   |   second_pos_stack = IR: la.IK (2.0)
|   |   |   second_pos_stack = IG: la.IK (0.0)
|   |   |   second_pos_stack = AN: la.IK (0.0)
|   |   |   second_pos_stack = MV: la.IK (0.0)
|   |   |   second_pos_stack = IM: la.IK (0.0)
|   |   |   second_pos_stack = BV: la.IK (0.0)
|   |   |   second_pos_stack = KV: la.IK (0.0)
|   |   |   second_pos_stack = GV: la.IK (0.0)
|   |   |   second_pos_stack = FV: la.IK (0.0)
|   |   |   second_pos_stack = PU: la.IK (0.0)
|   |   |   second_pos_stack = SP: la.IK (0.0)
|   |   |   second_pos_stack = XX: la.IK (0.0)
|   |   |   second_pos_stack = I?: la.IK (0.0)
|   |   |   second_pos_stack = IS: la.IK (0.0)
|   |   |   second_pos_stack = IT: la.IK (0.0)
|   |   |   second_pos_stack = IU: la.IK (0.0)
|   |   |   second_pos_stack = YY: la.IK (0.0)
|   |   first_pos_queue = PR
|   |   |   second_pos_stack = nil: la.IK (0.0)
|   |   |   second_pos_stack = ROOT: la.IK (0.0)
|   |   |   second_pos_stack = ++: sh (2.0)
|   |   |   second_pos_stack = NN: la.IK (50.0/13.0)
|   |   |   second_pos_stack = EN: sh (2.0)
|   |   |   second_pos_stack = AV: la.IK (0.0)
|   |   |   second_pos_stack = AJ: sh (4.0/1.0)
|   |   |   second_pos_stack = IK: la.IK (0.0)
|   |   |   second_pos_stack = IP: la.IK (0.0)
|   |   |   second_pos_stack = PO: sh (8.0/2.0)
|   |   |   second_pos_stack = VV: la.IK (2.0/1.0)
|   |   |   second_pos_stack = AB: la.IK (7.0/2.0)
|   |   |   second_pos_stack = TP: sh (2.0)
|   |   |   second_pos_stack = PR: la.IK (0.0)
|   |   |   second_pos_stack = RO: la.IK (1.0)
|   |   |   second_pos_stack = ID: la.IK (2.0)
|   |   |   second_pos_stack = PN: la.IK (1.0)
|   |   |   second_pos_stack = IC: la.IK (1.0)
|   |   |   second_pos_stack = MN: sh (1.0)
|   |   |   second_pos_stack = UK: la.IK (0.0)
|   |   |   second_pos_stack = VN: la.IK (5.0)
|   |   |   second_pos_stack = QV: la.IK (0.0)
|   |   |   second_pos_stack = WV: la.IK (0.0)
|   |   |   second_pos_stack = IQ: la.IK (0.0)
|   |   |   second_pos_stack = SV: la.IK (0.0)
|   |   |   second_pos_stack = HV: la.IK (0.0)
|   |   |   second_pos_stack = IR: la.IK (0.0)
|   |   |   second_pos_stack = IG: la.IK (0.0)
|   |   |   second_pos_stack = AN: la.IK (0.0)
|   |   |   second_pos_stack = MV: la.IK (0.0)
|   |   |   second_pos_stack = IM: sh (2.0)
|   |   |   second_pos_stack = BV: la.IK (0.0)
|   |   |   second_pos_stack = KV: la.IK (0.0)
|   |   |   second_pos_stack = GV: la.IK (0.0)
|   |   |   second_pos_stack = FV: la.IK (0.0)
|   |   |   second_pos_stack = PU: la.IK (0.0)
|   |   |   second_pos_stack = SP: la.IK (0.0)
|   |   |   second_pos_stack = XX: la.IK (0.0)
|   |   |   second_pos_stack = I?: la.IK (0.0)
|   |   |   second_pos_stack = IS: la.IK (0.0)
|   |   |   second_pos_stack = IT: la.IK (0.0)
|   |   |   second_pos_stack = IU: la.IK (0.0)
|   |   |   second_pos_stack = YY: la.IK (0.0)
|   |   first_pos_queue = RO
|   |   |   second_pos_stack = nil: sh (0.0)
|   |   |   second_pos_stack = ROOT: sh (0.0)
|   |   |   second_pos_stack = ++: sh (0.0)
|   |   |   second_pos_stack = NN: sh (12.0)
|   |   |   second_pos_stack = EN: sh (0.0)
|   |   |   second_pos_stack = AV: sh (0.0)
|   |   |   second_pos_stack = AJ: sh (0.0)
|   |   |   second_pos_stack = IK: sh (0.0)
|   |   |   second_pos_stack = IP: sh (0.0)
|   |   |   second_pos_stack = PO: sh (0.0)
|   |   |   second_pos_stack = VV: sh (0.0)
|   |   |   second_pos_stack = AB: sh (0.0)
|   |   |   second_pos_stack = TP: sh (0.0)
|   |   |   second_pos_stack = PR: sh (0.0)
|   |   |   second_pos_stack = RO: la.IK (7.0/2.0)
|   |   |   second_pos_stack = ID: sh (0.0)
|   |   |   second_pos_stack = PN: sh (0.0)
|   |   |   second_pos_stack = IC: sh (1.0)
|   |   |   second_pos_stack = MN: sh (0.0)
|   |   |   second_pos_stack = UK: sh (0.0)
|   |   |   second_pos_stack = VN: sh (0.0)
|   |   |   second_pos_stack = QV: sh (0.0)
|   |   |   second_pos_stack = WV: sh (0.0)
|   |   |   second_pos_stack = IQ: sh (0.0)
|   |   |   second_pos_stack = SV: sh (0.0)
|   |   |   second_pos_stack = HV: sh (0.0)
|   |   |   second_pos_stack = IR: sh (0.0)
|   |   |   second_pos_stack = IG: sh (0.0)
|   |   |   second_pos_stack = AN: sh (0.0)
|   |   |   second_pos_stack = MV: sh (0.0)
|   |   |   second_pos_stack = IM: sh (0.0)
|   |   |   second_pos_stack = BV: sh (0.0)
|   |   |   second_pos_stack = KV: sh (0.0)
|   |   |   second_pos_stack = GV: sh (0.0)
|   |   |   second_pos_stack = FV: sh (0.0)
|   |   |   second_pos_stack = PU: sh (0.0)
|   |   |   second_pos_stack = SP: sh (0.0)
|   |   |   second_pos_stack = XX: sh (0.0)
|   |   |   second_pos_stack = I?: sh (0.0)
|   |   |   second_pos_stack = IS: sh (0.0)
|   |   |   second_pos_stack = IT: sh (0.0)
|   |   |   second_pos_stack = IU: sh (0.0)
|   |   |   second_pos_stack = YY: sh (0.0)
|   |   first_pos_queue = ID: la.IK (0.0)
|   |   first_pos_queue = PN: la.IK (67.0/2.0)
|   |   first_pos_queue = IC: sh (7.0)
|   |   first_pos_queue = MN: la.IK (11.0)
|   |   first_pos_queue = UK: sh (53.0/3.0)
|   |   first_pos_queue = VN: la.IK (92.0/5.0)
|   |   first_pos_queue = QV: la.IK (54.0/3.0)
|   |   first_pos_queue = WV: la.IK (7.0)
|   |   first_pos_queue = IQ: la.IK (1.0)
|   |   first_pos_queue = SV: la.IK (45.0/2.0)
|   |   first_pos_queue = HV: la.IK (45.0/1.0)
|   |   first_pos_queue = IR: la.IK (0.0)
|   |   first_pos_queue = IG: la.IK (0.0)
|   |   first_pos_queue = AN: la.IK (58.0/3.0)
|   |   first_pos_queue = MV: la.IK (30.0)
|   |   first_pos_queue = IM: sh (18.0)
|   |   first_pos_queue = BV: la.IK (36.0)
|   |   first_pos_queue = KV: la.IK (12.0)
|   |   first_pos_queue = GV: la.IK (3.0)
|   |   first_pos_queue = FV: la.IK (22.0/1.0)
|   |   first_pos_queue = PU: la.IK (0.0)
|   |   first_pos_queue = SP: la.IK (3.0/1.0)
|   |   first_pos_queue = XX: sh (1.0)
|   |   first_pos_queue = I?: la.IK (0.0)
|   |   first_pos_queue = IS: la.IK (0.0)
|   |   first_pos_queue = IT: la.IK (0.0)
|   |   first_pos_queue = IU: la.IK (0.0)
|   |   first_pos_queue = YY: sh (2.0)
|   can_do_leftarc = false
|   |   first_pos_queue = nil: re (29.0)
|   |   first_pos_queue = ROOT: re (0.0)
|   |   first_pos_queue = ++: sh (544.0/1.0)
|   |   first_pos_queue = NN
|   |   |   second_pos_stack = nil: re (0.0)
|   |   |   second_pos_stack = ROOT: re (0.0)
|   |   |   second_pos_stack = ++: re (0.0)
|   |   |   second_pos_stack = NN: re (148.0/16.0)
|   |   |   second_pos_stack = EN: sh (1.0)
|   |   |   second_pos_stack = AV: sh (31.0/12.0)
|   |   |   second_pos_stack = AJ: re (4.0/1.0)
|   |   |   second_pos_stack = IK: re (0.0)
|   |   |   second_pos_stack = IP: re (0.0)
|   |   |   second_pos_stack = PO: re (5.0/2.0)
|   |   |   second_pos_stack = VV: re (78.0/33.0)
|   |   |   second_pos_stack = AB: re (0.0)
|   |   |   second_pos_stack = TP: re (1.0)
|   |   |   second_pos_stack = PR: re (7.0/2.0)
|   |   |   second_pos_stack = RO: sh (12.0/1.0)
|   |   |   second_pos_stack = ID: re (28.0/11.0)
|   |   |   second_pos_stack = PN: sh (23.0/6.0)
|   |   |   second_pos_stack = IC: re (0.0)
|   |   |   second_pos_stack = MN: sh (1.0)
|   |   |   second_pos_stack = UK: re (0.0)
|   |   |   second_pos_stack = VN: re (14.0/1.0)
|   |   |   second_pos_stack = QV: sh (1.0)
|   |   |   second_pos_stack = WV: re (0.0)
|   |   |   second_pos_stack = IQ: re (0.0)
|   |   |   second_pos_stack = SV: sh (1.0)
|   |   |   second_pos_stack = HV: re (13.0/3.0)
|   |   |   second_pos_stack = IR: re (0.0)
|   |   |   second_pos_stack = IG: re (0.0)
|   |   |   second_pos_stack = AN: re (4.0)
|   |   |   second_pos_stack = MV: sh (1.0)
|   |   |   second_pos_stack = IM: re (0.0)
|   |   |   second_pos_stack = BV: re (4.0/2.0)
|   |   |   second_pos_stack = KV: re (0.0)
|   |   |   second_pos_stack = GV: re (4.0)
|   |   |   second_pos_stack = FV: re (1.0)
|   |   |   second_pos_stack = PU: re (0.0)
|   |   |   second_pos_stack = SP: re (0.0)
|   |   |   second_pos_stack = XX: re (0.0)
|   |   |   second_pos_stack = I?: re (0.0)
|   |   |   second_pos_stack = IS: re (0.0)
|   |   |   second_pos_stack = IT: re (0.0)
|   |   |   second_pos_stack = IU: re (0.0)
|   |   |   second_pos_stack = YY: sh (6.0/1.0)
|   |   first_pos_queue = EN: sh (60.0/7.0)
|   |   first_pos_queue = AV: re (379.0/3.0)
|   |   first_pos_queue = AJ: re (104.0/31.0)
|   |   first_pos_queue = IK: re (0.0)
|   |   first_pos_queue = IP: ra.IP (5.0/2.0)
|   |   first_pos_queue = PO: sh (748.0/44.0)
|   |   first_pos_queue = VV: re (1340.0/14.0)
|   |   first_pos_queue = AB: sh (555.0/105.0)
|   |   first_pos_queue = TP: re (34.0/2.0)
|   |   first_pos_queue = PR: re (336.0/36.0)
|   |   first_pos_queue = RO: re (80.0/30.0)
|   |   first_pos_queue = ID: re (2.0)
|   |   first_pos_queue = PN: re (47.0/7.0)
|   |   first_pos_queue = IC
|   |   |   second_pos_stack = nil: sh (0.0)
|   |   |   second_pos_stack = ROOT: sh (0.0)
|   |   |   second_pos_stack = ++: sh (0.0)
|   |   |   second_pos_stack = NN: sh (7.0/1.0)
|   |   |   second_pos_stack = EN: sh (1.0)
|   |   |   second_pos_stack = AV: re (2.0)
|   |   |   second_pos_stack = AJ: sh (0.0)
|   |   |   second_pos_stack = IK: sh (0.0)
|   |   |   second_pos_stack = IP: sh (0.0)
|   |   |   second_pos_stack = PO: sh (0.0)
|   |   |   second_pos_stack = VV: re (5.0/1.0)
|   |   |   second_pos_stack = AB: sh (0.0)
|   |   |   second_pos_stack = TP: sh (0.0)
|   |   |   second_pos_stack = PR: sh (0.0)
|   |   |   second_pos_stack = RO: sh (0.0)
|   |   |   second_pos_stack = ID: sh (0.0)
|   |   |   second_pos_stack = PN: sh (0.0)
|   |   |   second_pos_stack = IC: sh (0.0)
|   |   |   second_pos_stack = MN: sh (0.0)
|   |   |   second_pos_stack = UK: sh (0.0)
|   |   |   second_pos_stack = VN: sh (0.0)
|   |   |   second_pos_stack = QV: sh (0.0)
|   |   |   second_pos_stack = WV: sh (0.0)
|   |   |   second_pos_stack = IQ: sh (0.0)
|   |   |   second_pos_stack = SV: sh (0.0)
|   |   |   second_pos_stack = HV: sh (0.0)
|   |   |   second_pos_stack = IR: sh (0.0)
|   |   |   second_pos_stack = IG: sh (0.0)
|   |   |   second_pos_stack = AN: sh (0.0)
|   |   |   second_pos_stack = MV: sh (0.0)
|   |   |   second_pos_stack = IM: sh (0.0)
|   |   |   second_pos_stack = BV: sh (0.0)
|   |   |   second_pos_stack = KV: sh (0.0)
|   |   |   second_pos_stack = GV: sh (1.0)
|   |   |   second_pos_stack = FV: sh (0.0)
|   |   |   second_pos_stack = PU: sh (0.0)
|   |   |   second_pos_stack = SP: sh (0.0)
|   |   |   second_pos_stack = XX: sh (0.0)
|   |   |   second_pos_stack = I?: sh (0.0)
|   |   |   second_pos_stack = IS: sh (0.0)
|   |   |   second_pos_stack = IT: sh (0.0)
|   |   |   second_pos_stack = IU: sh (0.0)
|   |   |   second_pos_stack = YY: sh (0.0)
|   |   first_pos_queue = MN: re (21.0)
|   |   first_pos_queue = UK: sh (635.0/2.0)
|   |   first_pos_queue = VN: re (63.0/12.0)
|   |   first_pos_queue = QV: re (165.0/2.0)
|   |   first_pos_queue = WV: re (37.0/1.0)
|   |   first_pos_queue = IQ: re (1.0)
|   |   first_pos_queue = SV: re (143.0/2.0)
|   |   first_pos_queue = HV: re (178.0/1.0)
|   |   first_pos_queue = IR: sh (3.0)
|   |   first_pos_queue = IG: re (2.0)
|   |   first_pos_queue = AN: re (13.0/1.0)
|   |   first_pos_queue = MV: re (49.0)
|   |   first_pos_queue = IM: sh (37.0/1.0)
|   |   first_pos_queue = BV: re (59.0/1.0)
|   |   first_pos_queue = KV: re (24.0)
|   |   first_pos_queue = GV: re (30.0)
|   |   first_pos_queue = FV: re (53.0/1.0)
|   |   first_pos_queue = PU: sh (9.0)
|   |   first_pos_queue = SP: re (5.0)
|   |   first_pos_queue = XX: re (0.0)
|   |   first_pos_queue = I?: re (1.0)
|   |   first_pos_queue = IS: re (0.0)
|   |   first_pos_queue = IT: re (0.0)
|   |   first_pos_queue = IU: re (0.0)
|   |   first_pos_queue = YY: re (12.0/1.0)
top_pos_stack = IP: re (8657.0/12.0)
top_pos_stack = PO
|   first_pos_queue = nil: re (48.0)
|   first_pos_queue = ROOT: la.DT (0.0)
|   first_pos_queue = ++: sh (205.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (6432.0/246.0)
|   |   can_do_leftarc = false: re (583.0/111.0)
|   first_pos_queue = EN: sh (114.0/2.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.SS (1247.0/263.0)
|   |   can_do_leftarc = false: re (281.0/61.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true: sh (2217.0/436.0)
|   |   can_do_leftarc = false: re (343.0/74.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (11.0/2.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: ra.IK (3.0/1.0)
|   |   |   can_do_leftarc = false: re (15.0/4.0)
|   |   second_pos_stack = EN: sh (1.0)
|   |   second_pos_stack = AV: re (24.0/9.0)
|   |   second_pos_stack = AJ: sh (3.0/1.0)
|   |   second_pos_stack = IK: sh (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: sh (3.0)
|   |   |   can_do_leftarc = false: re (15.0/5.0)
|   |   second_pos_stack = VV: re (153.0/39.0)
|   |   second_pos_stack = AB: sh (4.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (103.0/29.0)
|   |   second_pos_stack = RO: re (2.0/1.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: re (2.0/1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: sh (7.0/2.0)
|   |   second_pos_stack = VN: ra.IK (1.0)
|   |   second_pos_stack = QV: sh (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (8.0/2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (8.0/3.0)
|   |   second_pos_stack = FV: re (4.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (876.0/10.0)
|   first_pos_queue = PO: sh (1753.0/523.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.SS (3743.0/534.0)
|   |   can_do_leftarc = false: re (1060.0/238.0)
|   first_pos_queue = AB
|   |   can_do_leftarc = true: sh (807.0/11.0)
|   |   can_do_leftarc = false: re (987.0/182.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: sh (204.0/40.0)
|   |   can_do_leftarc = false: re (42.0/6.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true: sh (263.0/91.0)
|   |   can_do_leftarc = false: re (784.0/58.0)
|   first_pos_queue = RO: sh (233.0/49.0)
|   first_pos_queue = ID: ra.HD (293.0/2.0)
|   first_pos_queue = PN
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (5.0/1.0)
|   |   second_pos_stack = ++: la.DT (3.0/1.0)
|   |   second_pos_stack = NN: sh (9.0)
|   |   second_pos_stack = EN: la.XT (1.0)
|   |   second_pos_stack = AV: re (5.0/1.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (6.0/2.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.DT (2.0)
|   |   |   can_do_leftarc = false: re (3.0/1.0)
|   |   second_pos_stack = AB: la.DT (1.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: la.DT (7.0)
|   |   second_pos_stack = RO: sh (2.0)
|   |   second_pos_stack = ID: la.DT (2.0)
|   |   second_pos_stack = PN: ra.CC (1.0)
|   |   second_pos_stack = IC: sh (1.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: la.DT (2.0)
|   |   second_pos_stack = VN: sh (3.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (3.0/1.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = IC
|   |   can_do_leftarc = true: sh (70.0/4.0)
|   |   can_do_leftarc = false: re (68.0/11.0)
|   first_pos_queue = MN
|   |   can_do_leftarc = true: la.DT (16.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = UK: sh (257.0/3.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.DT (1001.0/30.0)
|   |   can_do_leftarc = false: re (78.0/10.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (174.0/24.0)
|   |   second_pos_stack = ++: la.SS (47.0/1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (51.0/9.0)
|   |   |   can_do_leftarc = false: re (6.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (11.0/4.0)
|   |   second_pos_stack = AJ: la.SS (4.0/2.0)
|   |   second_pos_stack = IK: la.SS (54.0/9.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (28.0/2.0)
|   |   |   can_do_leftarc = false: re (8.0/1.0)
|   |   second_pos_stack = VV: re (23.0/5.0)
|   |   second_pos_stack = AB: la.SS (27.0/3.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: la.OO (2.0/1.0)
|   |   |   can_do_leftarc = false: re (25.0/5.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: la.SS (8.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (4.0/1.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (82.0)
|   |   second_pos_stack = VN: la.SS (7.0/3.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: sh (10.0/2.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.OO (3.0/1.0)
|   |   second_pos_stack = MV: sh (5.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: ra.ET (1.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (1.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = WV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (42.0/9.0)
|   |   second_pos_stack = ++: la.SS (13.0/3.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (23.0/4.0)
|   |   |   can_do_leftarc = false: ra.ET (2.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: ra.ET (4.0/2.0)
|   |   second_pos_stack = AJ: la.SS (2.0)
|   |   second_pos_stack = IK: la.SS (9.0/3.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (32.0/2.0)
|   |   |   can_do_leftarc = false: re (5.0/2.0)
|   |   second_pos_stack = VV: re (10.0/4.0)
|   |   second_pos_stack = AB: la.SS (13.0/1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: ra.ET (12.0/5.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (47.0/1.0)
|   |   second_pos_stack = VN: la.SS (3.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: sh (4.0)
|   |   second_pos_stack = HV: ra.ET (1.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: ra.ET (2.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = IQ: re (37.0/9.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (105.0/17.0)
|   |   second_pos_stack = ++: la.SS (20.0/1.0)
|   |   second_pos_stack = NN: la.SS (33.0/3.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (4.0/1.0)
|   |   second_pos_stack = AJ: la.SS (1.0)
|   |   second_pos_stack = IK: la.SS (36.0/7.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (22.0)
|   |   |   can_do_leftarc = false: re (8.0/1.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.SS (2.0)
|   |   |   can_do_leftarc = false: re (26.0/2.0)
|   |   second_pos_stack = AB: la.SS (28.0/1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: la.OO (2.0)
|   |   |   can_do_leftarc = false: re (28.0/5.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (14.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (11.0/1.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (126.0/10.0)
|   |   second_pos_stack = VN: la.SS (4.0)
|   |   second_pos_stack = QV: ra.ET (1.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: la.SS (1.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (1.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (2.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.SS (498.0/63.0)
|   |   can_do_leftarc = false: re (114.0/28.0)
|   first_pos_queue = IR: re (17.0/11.0)
|   first_pos_queue = IG: re (12.0/4.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.DT (202.0/1.0)
|   |   can_do_leftarc = false: re (18.0/3.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (71.0/11.0)
|   |   second_pos_stack = ++: la.SS (26.0/3.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (9.0/1.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (24.0/5.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (8.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = VV: re (9.0)
|   |   second_pos_stack = AB: la.SS (4.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: ra.ET (4.0/2.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (18.0/3.0)
|   |   second_pos_stack = VN: la.OO (3.0/1.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: la.SS (0.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.FS (1.0)
|   |   second_pos_stack = IT: la.SS (1.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = IM: sh (113.0)
|   first_pos_queue = BV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (43.0/12.0)
|   |   second_pos_stack = ++: la.SS (6.0/1.0)
|   |   second_pos_stack = NN: la.SS (8.0/1.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: la.SS (2.0/1.0)
|   |   second_pos_stack = IK: la.SS (11.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (6.0/2.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = VV: re (15.0/1.0)
|   |   second_pos_stack = AB: la.SS (7.0/1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (11.0/1.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (2.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (0.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (43.0/3.0)
|   |   second_pos_stack = VN: la.SS (0.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: re (4.0)
|   |   second_pos_stack = HV: re (7.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: re (2.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = KV: la.SS (64.0/23.0)
|   first_pos_queue = GV: la.SS (124.0/42.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (64.0/7.0)
|   |   second_pos_stack = ++: la.SS (14.0/1.0)
|   |   second_pos_stack = NN: la.SS (15.0/5.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (2.0)
|   |   second_pos_stack = AJ: la.SS (1.0)
|   |   second_pos_stack = IK: la.SS (9.0/3.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (9.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = VV: re (19.0/1.0)
|   |   second_pos_stack = AB: la.SS (11.0/3.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (6.0/1.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (8.0/1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (0.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (45.0/1.0)
|   |   second_pos_stack = VN: la.SS (1.0)
|   |   second_pos_stack = QV: re (8.0/2.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: re (5.0/2.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: sh (1.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: re (3.0)
|   |   second_pos_stack = FV: ra.ET (1.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = PU: sh (1.0)
|   first_pos_queue = SP
|   |   can_do_leftarc = true: sh (57.0/11.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = XX: sh (19.0)
|   first_pos_queue = I?: re (46.0/2.0)
|   first_pos_queue = IS: re (5.0)
|   first_pos_queue = IT: re (24.0/9.0)
|   first_pos_queue = IU: re (6.0/1.0)
|   first_pos_queue = YY: ra.MA (2.0/1.0)
top_pos_stack = VV
|   first_pos_queue = nil: re (4658.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (290.0/5.0)
|   first_pos_queue = NN: ra.OO (4853.0/1708.0)
|   first_pos_queue = EN: sh (507.0/12.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (72.0/38.0)
|   |   |   can_do_leftarc = false: ra.OO (448.0/246.0)
|   |   second_pos_stack = ++: la.AA (17.0/11.0)
|   |   second_pos_stack = NN: re (88.0/22.0)
|   |   second_pos_stack = EN: re (2.0)
|   |   second_pos_stack = AV: re (38.0/25.0)
|   |   second_pos_stack = AJ: ra.VG (2.0/1.0)
|   |   second_pos_stack = IK: la.SS (9.0/7.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.IV (2.0/1.0)
|   |   |   can_do_leftarc = false: re (46.0/9.0)
|   |   second_pos_stack = VV: re (146.0/86.0)
|   |   second_pos_stack = AB: re (4.0/2.0)
|   |   second_pos_stack = TP: la.OA (1.0)
|   |   second_pos_stack = PR: re (38.0/16.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: ra.OO (2.0/1.0)
|   |   second_pos_stack = PN: ra.OO (0.0)
|   |   second_pos_stack = IC: ra.OO (0.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: la.AA (6.0/3.0)
|   |   second_pos_stack = VN: re (8.0/3.0)
|   |   second_pos_stack = QV: re (61.0/31.0)
|   |   second_pos_stack = WV: re (13.0/5.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: re (44.0/23.0)
|   |   second_pos_stack = HV: re (35.0/13.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: re (5.0/1.0)
|   |   second_pos_stack = MV: re (17.0/7.0)
|   |   second_pos_stack = IM: ra.OO (0.0)
|   |   second_pos_stack = BV: ra.AA (3.0/2.0)
|   |   second_pos_stack = KV: ra.AA (5.0/4.0)
|   |   second_pos_stack = GV: ra.+F (4.0/3.0)
|   |   second_pos_stack = FV: re (10.0/7.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: ra.OO (0.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.OO (3.0/1.0)
|   first_pos_queue = AJ
|   |   second_pos_stack = nil: ra.AA (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (17.0/11.0)
|   |   |   can_do_leftarc = false: ra.AA (311.0/195.0)
|   |   second_pos_stack = ++: ra.OO (5.0/2.0)
|   |   second_pos_stack = NN: sh (74.0/46.0)
|   |   second_pos_stack = EN: ra.AA (0.0)
|   |   second_pos_stack = AV: sh (55.0/38.0)
|   |   second_pos_stack = AJ: ra.AA (3.0/1.0)
|   |   second_pos_stack = IK: la.XA (2.0/1.0)
|   |   second_pos_stack = IP: ra.AA (0.0)
|   |   second_pos_stack = PO: ra.OO (8.0/5.0)
|   |   second_pos_stack = VV: ra.AA (193.0/113.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: ra.AA (0.0)
|   |   second_pos_stack = PR: sh (45.0/20.0)
|   |   second_pos_stack = RO: ra.AA (0.0)
|   |   second_pos_stack = ID: sh (2.0)
|   |   second_pos_stack = PN: ra.AA (0.0)
|   |   second_pos_stack = IC: ra.AA (0.0)
|   |   second_pos_stack = MN: ra.AA (0.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: ra.AA (14.0/10.0)
|   |   second_pos_stack = QV: sh (58.0/38.0)
|   |   second_pos_stack = WV: ra.OO (5.0/2.0)
|   |   second_pos_stack = IQ: ra.AA (0.0)
|   |   second_pos_stack = SV: ra.AA (45.0/31.0)
|   |   second_pos_stack = HV: sh (68.0/45.0)
|   |   second_pos_stack = IR: ra.AA (0.0)
|   |   second_pos_stack = IG: ra.AA (0.0)
|   |   second_pos_stack = AN: ra.AA (6.0/3.0)
|   |   second_pos_stack = MV: sh (24.0/16.0)
|   |   second_pos_stack = IM: ra.AA (0.0)
|   |   second_pos_stack = BV: ra.AA (3.0/2.0)
|   |   second_pos_stack = KV: ra.AA (16.0/10.0)
|   |   second_pos_stack = GV: sh (3.0/1.0)
|   |   second_pos_stack = FV: ra.SP (16.0/11.0)
|   |   second_pos_stack = PU: ra.AA (0.0)
|   |   second_pos_stack = SP: ra.AA (0.0)
|   |   second_pos_stack = XX: ra.AA (0.0)
|   |   second_pos_stack = I?: ra.AA (0.0)
|   |   second_pos_stack = IS: ra.AA (0.0)
|   |   second_pos_stack = IT: ra.AA (0.0)
|   |   second_pos_stack = IU: ra.AA (0.0)
|   |   second_pos_stack = YY: ra.AA (3.0/2.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (748.0/30.0)
|   |   second_pos_stack = ++: sh (2.0)
|   |   second_pos_stack = NN: re (140.0/47.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: ra.IK (123.0/63.0)
|   |   second_pos_stack = AJ: re (9.0/5.0)
|   |   second_pos_stack = IK: sh (5.0/1.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (38.0/13.0)
|   |   second_pos_stack = VV: re (345.0/165.0)
|   |   second_pos_stack = AB: ra.IK (4.0/2.0)
|   |   second_pos_stack = TP: ra.IK (2.0/1.0)
|   |   second_pos_stack = PR: re (58.0/23.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: re (8.0)
|   |   second_pos_stack = PN: re (4.0/1.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: ra.IK (1.0)
|   |   second_pos_stack = VN: re (25.0/6.0)
|   |   second_pos_stack = QV: ra.IK (136.0/60.0)
|   |   second_pos_stack = WV: re (25.0/12.0)
|   |   second_pos_stack = IQ: la.MS (1.0)
|   |   second_pos_stack = SV: re (118.0/58.0)
|   |   second_pos_stack = HV: re (89.0/46.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: re (13.0/3.0)
|   |   second_pos_stack = MV: ra.IK (52.0/18.0)
|   |   second_pos_stack = IM: sh (1.0)
|   |   second_pos_stack = BV: re (14.0/6.0)
|   |   second_pos_stack = KV: ra.IK (21.0/8.0)
|   |   second_pos_stack = GV: ra.IK (6.0/3.0)
|   |   second_pos_stack = FV: ra.IK (22.0/11.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.AA (1.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: re (6.0/2.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (3727.0/6.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (717.0/4.0)
|   |   second_pos_stack = EN: re (3.0)
|   |   second_pos_stack = AV: re (566.0/24.0)
|   |   second_pos_stack = AJ: re (29.0/1.0)
|   |   second_pos_stack = IK: re (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (141.0/1.0)
|   |   second_pos_stack = VV: re (2028.0/77.0)
|   |   second_pos_stack = AB: re (27.0)
|   |   second_pos_stack = TP: re (3.0/1.0)
|   |   second_pos_stack = PR: re (451.0/2.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: re (30.0)
|   |   second_pos_stack = PN: re (9.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (2.0)
|   |   second_pos_stack = VN: re (116.0/1.0)
|   |   second_pos_stack = QV: re (716.0/10.0)
|   |   second_pos_stack = WV: re (103.0/1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (520.0/10.0)
|   |   second_pos_stack = HV: re (615.0/13.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (81.0)
|   |   second_pos_stack = MV: re (246.0)
|   |   second_pos_stack = IM: re (1.0)
|   |   second_pos_stack = BV: re (79.0/6.0)
|   |   second_pos_stack = KV: re (112.0/1.0)
|   |   second_pos_stack = GV: re (39.0/1.0)
|   |   second_pos_stack = FV: re (170.0/5.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: ra.IP (12.0/5.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT: ra.SS (1276.0/748.0)
|   |   second_pos_stack = ++: ra.OO (17.0/10.0)
|   |   second_pos_stack = NN: ra.OO (196.0/92.0)
|   |   second_pos_stack = EN: ra.OO (1.0)
|   |   second_pos_stack = AV: ra.OO (170.0/98.0)
|   |   second_pos_stack = AJ: sh (6.0/3.0)
|   |   second_pos_stack = IK: ra.SS (10.0/5.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO: ra.OO (71.0/31.0)
|   |   second_pos_stack = VV: ra.OO (694.0/360.0)
|   |   second_pos_stack = AB: ra.OO (14.0/8.0)
|   |   second_pos_stack = TP: ra.FS (2.0/1.0)
|   |   second_pos_stack = PR: ra.OO (149.0/68.0)
|   |   second_pos_stack = RO: ra.OO (0.0)
|   |   second_pos_stack = ID: sh (12.0/6.0)
|   |   second_pos_stack = PN: ra.OO (2.0/1.0)
|   |   second_pos_stack = IC: ra.OO (2.0/1.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: ra.OO (14.0/6.0)
|   |   second_pos_stack = VN: ra.OO (29.0/13.0)
|   |   second_pos_stack = QV: ra.OO (225.0/124.0)
|   |   second_pos_stack = WV: ra.OO (49.0/16.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: ra.OO (187.0/98.0)
|   |   second_pos_stack = HV: ra.OO (173.0/92.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: sh (30.0/15.0)
|   |   second_pos_stack = MV: sh (61.0/34.0)
|   |   second_pos_stack = IM: ra.OO (1.0)
|   |   second_pos_stack = BV: ra.OO (19.0/9.0)
|   |   second_pos_stack = KV: ra.OO (28.0/15.0)
|   |   second_pos_stack = GV: ra.OO (9.0/6.0)
|   |   second_pos_stack = FV: ra.OO (58.0/35.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: ra.SS (1.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.OO (5.0/3.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (194.0/129.0)
|   |   |   can_do_leftarc = false: ra.OO (1212.0/906.0)
|   |   second_pos_stack = ++: la.AA (32.0/17.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.IV (3.0/1.0)
|   |   |   can_do_leftarc = false: re (260.0/161.0)
|   |   second_pos_stack = EN: ra.OO (0.0)
|   |   second_pos_stack = AV: ra.OO (175.0/137.0)
|   |   second_pos_stack = AJ: re (13.0/6.0)
|   |   second_pos_stack = IK: la.MS (12.0/10.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.AA (3.0/2.0)
|   |   |   can_do_leftarc = false: re (67.0/39.0)
|   |   second_pos_stack = VV: re (686.0/517.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.IV (13.0/2.0)
|   |   |   can_do_leftarc = false: re (8.0/4.0)
|   |   second_pos_stack = TP: ra.VG (2.0/1.0)
|   |   second_pos_stack = PR: re (181.0/118.0)
|   |   second_pos_stack = RO: ra.OO (2.0/1.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.AA (3.0/2.0)
|   |   |   can_do_leftarc = false: re (14.0/5.0)
|   |   second_pos_stack = PN: re (4.0/1.0)
|   |   second_pos_stack = IC: la.AA (2.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: la.AA (11.0/7.0)
|   |   second_pos_stack = VN: re (35.0/22.0)
|   |   second_pos_stack = QV
|   |   |   can_do_leftarc = true: la.IV (2.0)
|   |   |   can_do_leftarc = false: re (188.0/131.0)
|   |   second_pos_stack = WV: re (26.0/12.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV
|   |   |   can_do_leftarc = true: la.IV (4.0)
|   |   |   can_do_leftarc = false: re (187.0/114.0)
|   |   second_pos_stack = HV: re (174.0/110.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: ra.+F (20.0/13.0)
|   |   second_pos_stack = MV: ra.OO (69.0/50.0)
|   |   second_pos_stack = IM: la.IV (10.0/2.0)
|   |   second_pos_stack = BV: ra.+F (25.0/20.0)
|   |   second_pos_stack = KV: re (17.0/11.0)
|   |   second_pos_stack = GV: ra.+F (12.0/7.0)
|   |   second_pos_stack = FV: re (50.0/33.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: la.AA (4.0/3.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: la.MS (5.0/4.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: ra.PL (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.PL (102.0/71.0)
|   |   |   can_do_leftarc = false: ra.+A (1837.0/1500.0)
|   |   second_pos_stack = ++: ra.DB (17.0/11.0)
|   |   second_pos_stack = NN: ra.PL (224.0/109.0)
|   |   second_pos_stack = EN: ra.RA (1.0)
|   |   second_pos_stack = AV: ra.PL (171.0/114.0)
|   |   second_pos_stack = AJ
|   |   |   can_do_leftarc = true: la.IV (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.PL (6.0/2.0)
|   |   second_pos_stack = IK: la.IV (7.0/5.0)
|   |   second_pos_stack = IP: ra.PL (0.0)
|   |   second_pos_stack = PO: ra.PL (67.0/32.0)
|   |   second_pos_stack = VV: ra.PL (668.0/389.0)
|   |   second_pos_stack = AB: ra.MA (13.0/8.0)
|   |   second_pos_stack = TP: ra.+A (3.0/2.0)
|   |   second_pos_stack = PR: ra.PL (115.0/48.0)
|   |   second_pos_stack = RO: ra.PL (2.0/1.0)
|   |   second_pos_stack = ID: ra.PL (9.0/5.0)
|   |   second_pos_stack = PN: ra.PL (4.0/2.0)
|   |   second_pos_stack = IC: ra.DB (1.0)
|   |   second_pos_stack = MN: ra.PL (0.0)
|   |   second_pos_stack = UK: ra.DB (11.0/5.0)
|   |   second_pos_stack = VN: ra.PL (33.0/18.0)
|   |   second_pos_stack = QV: ra.PL (193.0/107.0)
|   |   second_pos_stack = WV: ra.PL (36.0/22.0)
|   |   second_pos_stack = IQ: ra.PL (0.0)
|   |   second_pos_stack = SV: ra.PL (197.0/116.0)
|   |   second_pos_stack = HV: ra.PL (180.0/101.0)
|   |   second_pos_stack = IR: ra.PL (0.0)
|   |   second_pos_stack = IG: ra.PL (0.0)
|   |   second_pos_stack = AN: ra.PL (15.0/7.0)
|   |   second_pos_stack = MV: ra.PL (64.0/26.0)
|   |   second_pos_stack = IM: sh (2.0)
|   |   second_pos_stack = BV: ra.PL (33.0/23.0)
|   |   second_pos_stack = KV: sh (44.0/34.0)
|   |   second_pos_stack = GV: ra.PL (15.0/7.0)
|   |   second_pos_stack = FV: ra.PL (54.0/29.0)
|   |   second_pos_stack = PU: ra.PL (0.0)
|   |   second_pos_stack = SP: ra.PL (0.0)
|   |   second_pos_stack = XX: ra.PL (0.0)
|   |   second_pos_stack = I?: ra.PL (0.0)
|   |   second_pos_stack = IS: ra.PL (0.0)
|   |   second_pos_stack = IT: ra.DB (2.0/1.0)
|   |   second_pos_stack = IU: ra.PL (0.0)
|   |   second_pos_stack = YY: ra.PL (13.0/9.0)
|   first_pos_queue = TP: ra.SP (91.0/63.0)
|   first_pos_queue = PR: ra.OA (6449.0/3772.0)
|   first_pos_queue = RO: sh (178.0/74.0)
|   first_pos_queue = ID: ra.+A (4.0/3.0)
|   first_pos_queue = PN: ra.SS (207.0/77.0)
|   first_pos_queue = IC: ra.JC (348.0/159.0)
|   first_pos_queue = MN: ra.OO (48.0/15.0)
|   first_pos_queue = UK: sh (784.0/8.0)
|   first_pos_queue = VN: ra.OO (728.0/199.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (31.0/15.0)
|   |   |   can_do_leftarc = false: ra.OO (109.0/68.0)
|   |   second_pos_stack = ++: la.AA (4.0/2.0)
|   |   second_pos_stack = NN: re (21.0/4.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.OO (12.0/4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (10.0/2.0)
|   |   second_pos_stack = VV: re (43.0/23.0)
|   |   second_pos_stack = AB: re (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (8.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.TA (1.0)
|   |   second_pos_stack = VN: ra.+F (3.0/2.0)
|   |   second_pos_stack = QV: re (20.0/4.0)
|   |   second_pos_stack = WV: re (5.0/2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (9.0/5.0)
|   |   second_pos_stack = HV: ra.OO (15.0/8.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.OO (7.0/4.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.EF (3.0/2.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.OO (17.0/12.0)
|   |   second_pos_stack = ++: la.AA (2.0/1.0)
|   |   second_pos_stack = NN: re (7.0/4.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.AA (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (4.0)
|   |   second_pos_stack = VV: ra.AA (10.0/7.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (5.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.AA (5.0/3.0)
|   |   second_pos_stack = WV: re (4.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (8.0/5.0)
|   |   second_pos_stack = HV: ra.OO (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: ra.OO (1.0)
|   |   second_pos_stack = MV: ra.AA (2.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: ra.OO (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.KA (2.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (103.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: re (14.0/3.0)
|   |   second_pos_stack = EN: ra.IQ (0.0)
|   |   second_pos_stack = AV: ra.IQ (4.0/2.0)
|   |   second_pos_stack = AJ: ra.IQ (1.0)
|   |   second_pos_stack = IK: la.MS (1.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: re (5.0)
|   |   second_pos_stack = VV: re (19.0/5.0)
|   |   second_pos_stack = AB: ra.IQ (0.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: re (9.0/3.0)
|   |   second_pos_stack = RO: ra.IQ (0.0)
|   |   second_pos_stack = ID: ra.IQ (1.0)
|   |   second_pos_stack = PN: ra.IQ (0.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (0.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: re (4.0)
|   |   second_pos_stack = QV: ra.IQ (13.0/6.0)
|   |   second_pos_stack = WV: ra.IQ (1.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: ra.IQ (7.0/2.0)
|   |   second_pos_stack = HV: ra.IQ (11.0/4.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: ra.IQ (0.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.IQ (1.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (23.0/11.0)
|   |   |   can_do_leftarc = false: ra.OO (129.0/60.0)
|   |   second_pos_stack = ++: la.AA (3.0/1.0)
|   |   second_pos_stack = NN: re (21.0/8.0)
|   |   second_pos_stack = EN: ra.OO (0.0)
|   |   second_pos_stack = AV: re (11.0/6.0)
|   |   second_pos_stack = AJ: ra.OO (0.0)
|   |   second_pos_stack = IK: la.MS (3.0/1.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO: re (6.0/2.0)
|   |   second_pos_stack = VV: re (34.0/21.0)
|   |   second_pos_stack = AB: ra.OA (2.0/1.0)
|   |   second_pos_stack = TP: ra.OO (0.0)
|   |   second_pos_stack = PR: re (11.0/4.0)
|   |   second_pos_stack = RO: ra.OO (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: ra.OO (0.0)
|   |   second_pos_stack = IC: ra.OO (0.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: la.AA (3.0)
|   |   second_pos_stack = VN: ra.ES (1.0)
|   |   second_pos_stack = QV: ra.OO (14.0/5.0)
|   |   second_pos_stack = WV: ra.OO (2.0/1.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: re (31.0/8.0)
|   |   second_pos_stack = HV: ra.OO (13.0/7.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: re (4.0/1.0)
|   |   second_pos_stack = MV: ra.AA (8.0/1.0)
|   |   second_pos_stack = IM: ra.OO (0.0)
|   |   second_pos_stack = BV: ra.OO (0.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: ra.OO (0.0)
|   |   second_pos_stack = FV: ra.OO (7.0/4.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: ra.OO (0.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.OO (1.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (16.0/10.0)
|   |   |   can_do_leftarc = false: ra.OO (121.0/80.0)
|   |   second_pos_stack = ++: la.TA (1.0)
|   |   second_pos_stack = NN: re (32.0/14.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.OO (18.0/11.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.AA (2.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (5.0/1.0)
|   |   second_pos_stack = VV: ra.OO (48.0/36.0)
|   |   second_pos_stack = AB: ra.OO (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (13.0/5.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.TA (1.0)
|   |   second_pos_stack = VN: re (5.0/1.0)
|   |   second_pos_stack = QV: re (19.0/12.0)
|   |   second_pos_stack = WV: re (7.0/2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (11.0/4.0)
|   |   second_pos_stack = HV: re (31.0/12.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (3.0/1.0)
|   |   second_pos_stack = MV: ra.AA (4.0/3.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.+F (2.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: ra.JR (0.0)
|   |   second_pos_stack = ROOT: ra.JR (51.0/20.0)
|   |   second_pos_stack = ++: ra.JR (0.0)
|   |   second_pos_stack = NN: re (12.0/5.0)
|   |   second_pos_stack = EN: ra.JR (0.0)
|   |   second_pos_stack = AV: re (7.0/2.0)
|   |   second_pos_stack = AJ: ra.JR (0.0)
|   |   second_pos_stack = IK: ra.JR (0.0)
|   |   second_pos_stack = IP: ra.JR (0.0)
|   |   second_pos_stack = PO: ra.JR (0.0)
|   |   second_pos_stack = VV: re (21.0/12.0)
|   |   second_pos_stack = AB: ra.IR (2.0/1.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: ra.IR (6.0/4.0)
|   |   second_pos_stack = RO: ra.JR (0.0)
|   |   second_pos_stack = ID: ra.JR (0.0)
|   |   second_pos_stack = PN: ra.JR (0.0)
|   |   second_pos_stack = IC: ra.JR (0.0)
|   |   second_pos_stack = MN: ra.JR (0.0)
|   |   second_pos_stack = UK: ra.JR (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (5.0/2.0)
|   |   second_pos_stack = WV: ra.JR (0.0)
|   |   second_pos_stack = IQ: ra.JR (0.0)
|   |   second_pos_stack = SV: ra.JR (1.0)
|   |   second_pos_stack = HV: ra.IR (3.0/2.0)
|   |   second_pos_stack = IR: re (1.0)
|   |   second_pos_stack = IG: ra.JR (0.0)
|   |   second_pos_stack = AN: ra.JR (0.0)
|   |   second_pos_stack = MV: ra.JR (0.0)
|   |   second_pos_stack = IM: ra.JR (0.0)
|   |   second_pos_stack = BV: ra.IR (3.0/2.0)
|   |   second_pos_stack = KV: re (3.0)
|   |   second_pos_stack = GV: ra.JR (0.0)
|   |   second_pos_stack = FV: ra.IR (2.0/1.0)
|   |   second_pos_stack = PU: ra.JR (0.0)
|   |   second_pos_stack = SP: ra.JR (0.0)
|   |   second_pos_stack = XX: ra.JR (0.0)
|   |   second_pos_stack = I?: ra.JR (0.0)
|   |   second_pos_stack = IS: ra.JR (0.0)
|   |   second_pos_stack = IT: ra.JR (0.0)
|   |   second_pos_stack = IU: ra.JR (0.0)
|   |   second_pos_stack = YY: ra.JR (0.0)
|   first_pos_queue = IG
|   |   second_pos_stack = nil: ra.IG (0.0)
|   |   second_pos_stack = ROOT: ra.IG (14.0)
|   |   second_pos_stack = ++: ra.IG (0.0)
|   |   second_pos_stack = NN: re (5.0/1.0)
|   |   second_pos_stack = EN: ra.IG (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: ra.IG (0.0)
|   |   second_pos_stack = IK: ra.IG (0.0)
|   |   second_pos_stack = IP: ra.IG (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (13.0/5.0)
|   |   second_pos_stack = AB: ra.IG (1.0)
|   |   second_pos_stack = TP: ra.IG (0.0)
|   |   second_pos_stack = PR: re (3.0)
|   |   second_pos_stack = RO: ra.IG (0.0)
|   |   second_pos_stack = ID: ra.IG (0.0)
|   |   second_pos_stack = PN: ra.IG (0.0)
|   |   second_pos_stack = IC: ra.IG (0.0)
|   |   second_pos_stack = MN: ra.IG (0.0)
|   |   second_pos_stack = UK: ra.IG (0.0)
|   |   second_pos_stack = VN: ra.IG (0.0)
|   |   second_pos_stack = QV: ra.IG (3.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.IG (0.0)
|   |   second_pos_stack = SV: ra.IG (1.0)
|   |   second_pos_stack = HV: ra.IG (2.0)
|   |   second_pos_stack = IR: ra.IG (0.0)
|   |   second_pos_stack = IG: ra.IG (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.IG (0.0)
|   |   second_pos_stack = IM: ra.IG (0.0)
|   |   second_pos_stack = BV: ra.IG (0.0)
|   |   second_pos_stack = KV: ra.IG (0.0)
|   |   second_pos_stack = GV: ra.IG (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.IG (0.0)
|   |   second_pos_stack = SP: ra.IG (0.0)
|   |   second_pos_stack = XX: ra.IG (0.0)
|   |   second_pos_stack = I?: ra.IG (0.0)
|   |   second_pos_stack = IS: ra.IG (0.0)
|   |   second_pos_stack = IT: ra.IG (0.0)
|   |   second_pos_stack = IU: ra.IG (0.0)
|   |   second_pos_stack = YY: ra.IG (0.0)
|   first_pos_queue = AN: ra.OO (226.0/55.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (18.0/8.0)
|   |   |   can_do_leftarc = false: ra.OO (32.0/16.0)
|   |   second_pos_stack = ++: la.TA (2.0)
|   |   second_pos_stack = NN: re (16.0/3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: ra.+F (1.0)
|   |   second_pos_stack = IK: la.MA (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (3.0/1.0)
|   |   second_pos_stack = VV: re (9.0/3.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (9.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.SS (2.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.SS (4.0/2.0)
|   |   second_pos_stack = WV: re (3.0/1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (12.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: ra.AA (2.0/1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: ra.OO (2.0/1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IM: sh (118.0/1.0)
|   first_pos_queue = BV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (17.0/5.0)
|   |   |   can_do_leftarc = false: ra.MS (62.0/43.0)
|   |   second_pos_stack = ++: la.AA (1.0)
|   |   second_pos_stack = NN: re (15.0/7.0)
|   |   second_pos_stack = EN: ra.OO (0.0)
|   |   second_pos_stack = AV: ra.+F (8.0/5.0)
|   |   second_pos_stack = AJ: ra.+F (2.0/1.0)
|   |   second_pos_stack = IK: ra.OO (0.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO: re (5.0/2.0)
|   |   second_pos_stack = VV: re (25.0/16.0)
|   |   second_pos_stack = AB: la.IV (1.0)
|   |   second_pos_stack = TP: ra.OO (0.0)
|   |   second_pos_stack = PR: re (5.0/2.0)
|   |   second_pos_stack = RO: ra.OO (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.OO (0.0)
|   |   second_pos_stack = IC: la.AA (1.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: ra.OO (0.0)
|   |   second_pos_stack = QV: re (12.0/6.0)
|   |   second_pos_stack = WV: ra.OO (2.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: ra.AA (11.0/7.0)
|   |   second_pos_stack = HV: ra.KA (2.0/1.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: ra.+F (1.0)
|   |   second_pos_stack = MV: ra.OO (2.0/1.0)
|   |   second_pos_stack = IM: re (1.0)
|   |   second_pos_stack = BV: ra.OO (6.0/4.0)
|   |   second_pos_stack = KV: ra.TA (2.0/1.0)
|   |   second_pos_stack = GV: ra.+F (1.0)
|   |   second_pos_stack = FV: re (2.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: ra.OO (0.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.AA (1.0)
|   first_pos_queue = KV
|   |   can_do_leftarc = true: la.AA (8.0/3.0)
|   |   can_do_leftarc = false: ra.OO (44.0/23.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (6.0/2.0)
|   |   |   can_do_leftarc = false: ra.MS (29.0/20.0)
|   |   second_pos_stack = ++: la.TA (1.0)
|   |   second_pos_stack = NN: ra.+F (5.0/3.0)
|   |   second_pos_stack = EN: ra.OO (0.0)
|   |   second_pos_stack = AV: ra.AA (3.0/2.0)
|   |   second_pos_stack = AJ: ra.OO (0.0)
|   |   second_pos_stack = IK: ra.OO (1.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO: ra.+F (2.0/1.0)
|   |   second_pos_stack = VV: re (11.0/6.0)
|   |   second_pos_stack = AB: ra.OO (0.0)
|   |   second_pos_stack = TP: ra.OO (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: ra.OO (0.0)
|   |   second_pos_stack = ID: ra.OO (0.0)
|   |   second_pos_stack = PN: ra.OO (0.0)
|   |   second_pos_stack = IC: ra.OO (0.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: ra.OO (0.0)
|   |   second_pos_stack = QV: ra.OO (4.0/1.0)
|   |   second_pos_stack = WV: re (3.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: ra.OO (5.0/3.0)
|   |   second_pos_stack = HV: ra.OO (3.0/1.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.CC (3.0/2.0)
|   |   second_pos_stack = IM: ra.OO (0.0)
|   |   second_pos_stack = BV: ra.OO (0.0)
|   |   second_pos_stack = KV: ra.OO (0.0)
|   |   second_pos_stack = GV: ra.OO (0.0)
|   |   second_pos_stack = FV: ra.OO (0.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: ra.OO (0.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.ES (1.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (13.0/6.0)
|   |   |   can_do_leftarc = false: ra.OO (51.0/36.0)
|   |   second_pos_stack = ++: la.TA (1.0)
|   |   second_pos_stack = NN: re (16.0/3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.+F (7.0/4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.XA (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (7.0/2.0)
|   |   second_pos_stack = VV: ra.OO (23.0/19.0)
|   |   second_pos_stack = AB: ra.OO (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (7.0/5.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (13.0/4.0)
|   |   second_pos_stack = WV: ra.VG (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (8.0/4.0)
|   |   second_pos_stack = HV: re (13.0/8.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: ra.KA (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.OO (4.0/2.0)
|   |   second_pos_stack = KV: ra.AA (1.0)
|   |   second_pos_stack = GV: ra.OO (1.0)
|   |   second_pos_stack = FV: ra.OO (6.0/4.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: sh (7.0/4.0)
|   first_pos_queue = SP
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.SP (4.0/2.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: ra.SP (2.0/1.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (0.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: sh (6.0)
|   |   second_pos_stack = AB: sh (0.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (1.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: ra.PT (1.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = XX: ra.XX (2.0/1.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.I? (138.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (29.0/3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (15.0/2.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (7.0)
|   |   second_pos_stack = VV: re (60.0)
|   |   second_pos_stack = AB: ra.I? (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (12.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (23.0)
|   |   second_pos_stack = WV: re (5.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (52.0)
|   |   second_pos_stack = HV: re (19.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: re (7.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0)
|   |   second_pos_stack = KV: re (3.0)
|   |   second_pos_stack = GV: re (2.0)
|   |   second_pos_stack = FV: re (2.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: ra.I? (1.0)
|   first_pos_queue = IS
|   |   second_pos_stack = nil: ra.IS (0.0)
|   |   second_pos_stack = ROOT: ra.IS (24.0/1.0)
|   |   second_pos_stack = ++: ra.IS (0.0)
|   |   second_pos_stack = NN: ra.IS (2.0/1.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.IS (0.0)
|   |   second_pos_stack = IK: ra.IS (0.0)
|   |   second_pos_stack = IP: ra.IS (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (5.0/1.0)
|   |   second_pos_stack = AB: ra.IS (0.0)
|   |   second_pos_stack = TP: ra.IS (0.0)
|   |   second_pos_stack = PR: ra.IS (2.0)
|   |   second_pos_stack = RO: ra.IS (0.0)
|   |   second_pos_stack = ID: ra.IS (0.0)
|   |   second_pos_stack = PN: ra.IS (0.0)
|   |   second_pos_stack = IC: ra.IS (0.0)
|   |   second_pos_stack = MN: ra.IS (0.0)
|   |   second_pos_stack = UK: ra.IS (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: ra.IS (0.0)
|   |   second_pos_stack = IQ: ra.IS (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (4.0/1.0)
|   |   second_pos_stack = IR: ra.IS (0.0)
|   |   second_pos_stack = IG: ra.IS (0.0)
|   |   second_pos_stack = AN: ra.IS (0.0)
|   |   second_pos_stack = MV: ra.IS (1.0)
|   |   second_pos_stack = IM: ra.IS (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.IS (1.0)
|   |   second_pos_stack = GV: ra.IS (0.0)
|   |   second_pos_stack = FV: ra.IS (0.0)
|   |   second_pos_stack = PU: ra.IS (0.0)
|   |   second_pos_stack = SP: ra.IS (0.0)
|   |   second_pos_stack = XX: ra.IS (0.0)
|   |   second_pos_stack = I?: ra.IS (0.0)
|   |   second_pos_stack = IS: ra.IS (0.0)
|   |   second_pos_stack = IT: ra.IS (0.0)
|   |   second_pos_stack = IU: ra.IS (0.0)
|   |   second_pos_stack = YY: ra.IS (0.0)
|   first_pos_queue = IT
|   |   second_pos_stack = nil: ra.IT (0.0)
|   |   second_pos_stack = ROOT: ra.IT (55.0/3.0)
|   |   second_pos_stack = ++: ra.IT (1.0)
|   |   second_pos_stack = NN: re (16.0/4.0)
|   |   second_pos_stack = EN: ra.IT (0.0)
|   |   second_pos_stack = AV: re (10.0/2.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: ra.IT (0.0)
|   |   second_pos_stack = IP: ra.IT (0.0)
|   |   second_pos_stack = PO: ra.IT (1.0)
|   |   second_pos_stack = VV: re (27.0/9.0)
|   |   second_pos_stack = AB: re (2.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: ra.IT (4.0/1.0)
|   |   second_pos_stack = RO: ra.IT (0.0)
|   |   second_pos_stack = ID: ra.IT (0.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: ra.IT (0.0)
|   |   second_pos_stack = MN: ra.IT (0.0)
|   |   second_pos_stack = UK: ra.IT (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (9.0/2.0)
|   |   second_pos_stack = WV: ra.IT (1.0)
|   |   second_pos_stack = IQ: ra.IT (0.0)
|   |   second_pos_stack = SV: ra.IT (1.0)
|   |   second_pos_stack = HV: re (4.0/1.0)
|   |   second_pos_stack = IR: ra.IT (0.0)
|   |   second_pos_stack = IG: ra.IT (0.0)
|   |   second_pos_stack = AN: ra.IT (0.0)
|   |   second_pos_stack = MV: ra.IT (3.0/1.0)
|   |   second_pos_stack = IM: ra.IT (0.0)
|   |   second_pos_stack = BV: ra.IT (1.0)
|   |   second_pos_stack = KV: re (5.0/1.0)
|   |   second_pos_stack = GV: ra.IT (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.IT (0.0)
|   |   second_pos_stack = SP: ra.IT (0.0)
|   |   second_pos_stack = XX: ra.IT (0.0)
|   |   second_pos_stack = I?: ra.IT (0.0)
|   |   second_pos_stack = IS: ra.IT (0.0)
|   |   second_pos_stack = IT: sh (1.0)
|   |   second_pos_stack = IU: ra.IT (0.0)
|   |   second_pos_stack = YY: ra.IT (0.0)
|   first_pos_queue = IU
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IU (26.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (5.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (10.0/2.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (8.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (3.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.IU (2.0/1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = YY: ra.MS (7.0/3.0)
top_pos_stack = AB
|   first_pos_queue = nil: re (96.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (170.0/1.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true
|   |   |   second_pos_stack = nil: sh (0.0)
|   |   |   second_pos_stack = ROOT: sh (111.0/54.0)
|   |   |   second_pos_stack = ++: la.+A (83.0/59.0)
|   |   |   second_pos_stack = NN: sh (107.0/28.0)
|   |   |   second_pos_stack = EN: la.AA (2.0/1.0)
|   |   |   second_pos_stack = AV: la.CA (15.0/6.0)
|   |   |   second_pos_stack = AJ: sh (14.0/1.0)
|   |   |   second_pos_stack = IK: sh (144.0/68.0)
|   |   |   second_pos_stack = IP: la.CA (1.0)
|   |   |   second_pos_stack = PO: sh (32.0/12.0)
|   |   |   second_pos_stack = VV: sh (60.0/33.0)
|   |   |   second_pos_stack = AB: sh (72.0/41.0)
|   |   |   second_pos_stack = TP: sh (1.0)
|   |   |   second_pos_stack = PR: la.CA (102.0/54.0)
|   |   |   second_pos_stack = RO: sh (1.0)
|   |   |   second_pos_stack = ID: sh (14.0/4.0)
|   |   |   second_pos_stack = PN: sh (0.0)
|   |   |   second_pos_stack = IC: sh (7.0/3.0)
|   |   |   second_pos_stack = MN: sh (0.0)
|   |   |   second_pos_stack = UK: sh (67.0/36.0)
|   |   |   second_pos_stack = VN: sh (9.0/2.0)
|   |   |   second_pos_stack = QV: sh (0.0)
|   |   |   second_pos_stack = WV: la.AA (1.0)
|   |   |   second_pos_stack = IQ: sh (0.0)
|   |   |   second_pos_stack = SV: la.CA (2.0)
|   |   |   second_pos_stack = HV: la.+A (9.0/6.0)
|   |   |   second_pos_stack = IR: la.CA (8.0/3.0)
|   |   |   second_pos_stack = IG: sh (0.0)
|   |   |   second_pos_stack = AN: la.CA (3.0/2.0)
|   |   |   second_pos_stack = MV: sh (0.0)
|   |   |   second_pos_stack = IM: sh (0.0)
|   |   |   second_pos_stack = BV: la.AA (3.0/1.0)
|   |   |   second_pos_stack = KV: sh (0.0)
|   |   |   second_pos_stack = GV: sh (0.0)
|   |   |   second_pos_stack = FV: la.AA (3.0/2.0)
|   |   |   second_pos_stack = PU: sh (0.0)
|   |   |   second_pos_stack = SP: la.CA (1.0)
|   |   |   second_pos_stack = XX: sh (0.0)
|   |   |   second_pos_stack = I?: sh (0.0)
|   |   |   second_pos_stack = IS: sh (0.0)
|   |   |   second_pos_stack = IT: sh (23.0/15.0)
|   |   |   second_pos_stack = IU: sh (0.0)
|   |   |   second_pos_stack = YY: la.+A (1.0)
|   |   can_do_leftarc = false: re (1160.0/100.0)
|   first_pos_queue = EN: sh (372.0/37.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.TA (506.0/361.0)
|   |   can_do_leftarc = false: re (277.0/20.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true: la.AA (1132.0/190.0)
|   |   can_do_leftarc = false: re (488.0/115.0)
|   first_pos_queue = IK: re (310.0/66.0)
|   first_pos_queue = IP: re (784.0/20.0)
|   first_pos_queue = PO: sh (1355.0/432.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.TA (1918.0/1294.0)
|   |   can_do_leftarc = false: re (1209.0/48.0)
|   first_pos_queue = AB
|   |   can_do_leftarc = true
|   |   |   second_pos_stack = nil: sh (0.0)
|   |   |   second_pos_stack = ROOT: sh (77.0/37.0)
|   |   |   second_pos_stack = ++: sh (73.0/23.0)
|   |   |   second_pos_stack = NN: sh (81.0/35.0)
|   |   |   second_pos_stack = EN: la.AA (5.0/3.0)
|   |   |   second_pos_stack = AV: la.AA (30.0/4.0)
|   |   |   second_pos_stack = AJ: sh (3.0/1.0)
|   |   |   second_pos_stack = IK: sh (51.0/17.0)
|   |   |   second_pos_stack = IP: sh (0.0)
|   |   |   second_pos_stack = PO: sh (99.0/36.0)
|   |   |   second_pos_stack = VV: la.AA (45.0/10.0)
|   |   |   second_pos_stack = AB: la.AA (55.0/31.0)
|   |   |   second_pos_stack = TP: la.AA (4.0/1.0)
|   |   |   second_pos_stack = PR: sh (15.0/7.0)
|   |   |   second_pos_stack = RO: sh (0.0)
|   |   |   second_pos_stack = ID: sh (7.0/3.0)
|   |   |   second_pos_stack = PN: la.AA (3.0/2.0)
|   |   |   second_pos_stack = IC: la.AA (2.0/1.0)
|   |   |   second_pos_stack = MN: sh (0.0)
|   |   |   second_pos_stack = UK: sh (10.0/3.0)
|   |   |   second_pos_stack = VN: sh (12.0/5.0)
|   |   |   second_pos_stack = QV: la.AA (4.0)
|   |   |   second_pos_stack = WV: sh (0.0)
|   |   |   second_pos_stack = IQ: sh (0.0)
|   |   |   second_pos_stack = SV: la.AA (3.0/1.0)
|   |   |   second_pos_stack = HV: la.AA (1.0)
|   |   |   second_pos_stack = IR: sh (2.0)
|   |   |   second_pos_stack = IG: sh (0.0)
|   |   |   second_pos_stack = AN: la.AA (2.0/1.0)
|   |   |   second_pos_stack = MV: sh (0.0)
|   |   |   second_pos_stack = IM: sh (5.0/1.0)
|   |   |   second_pos_stack = BV: la.AA (7.0/1.0)
|   |   |   second_pos_stack = KV: la.AA (1.0)
|   |   |   second_pos_stack = GV: sh (0.0)
|   |   |   second_pos_stack = FV: sh (0.0)
|   |   |   second_pos_stack = PU: sh (0.0)
|   |   |   second_pos_stack = SP: sh (0.0)
|   |   |   second_pos_stack = XX: sh (1.0)
|   |   |   second_pos_stack = I?: sh (0.0)
|   |   |   second_pos_stack = IS: sh (0.0)
|   |   |   second_pos_stack = IT: sh (7.0/3.0)
|   |   |   second_pos_stack = IU: sh (0.0)
|   |   |   second_pos_stack = YY: sh (0.0)
|   |   can_do_leftarc = false: re (922.0/246.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: la.AA (136.0/28.0)
|   |   can_do_leftarc = false: re (67.0/9.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true
|   |   |   second_pos_stack = nil: la.CA (0.0)
|   |   |   second_pos_stack = ROOT: la.CA (73.0/50.0)
|   |   |   second_pos_stack = ++: la.+A (65.0/44.0)
|   |   |   second_pos_stack = NN: la.CA (62.0/40.0)
|   |   |   second_pos_stack = EN: la.CA (0.0)
|   |   |   second_pos_stack = AV: la.AA (3.0/1.0)
|   |   |   second_pos_stack = AJ: la.AA (13.0/9.0)
|   |   |   second_pos_stack = IK: la.CA (76.0/43.0)
|   |   |   second_pos_stack = IP: la.CA (0.0)
|   |   |   second_pos_stack = PO: la.CA (29.0/16.0)
|   |   |   second_pos_stack = VV: la.AA (44.0/19.0)
|   |   |   second_pos_stack = AB: la.CA (44.0/25.0)
|   |   |   second_pos_stack = TP: la.CA (11.0/3.0)
|   |   |   second_pos_stack = PR: la.CA (1.0)
|   |   |   second_pos_stack = RO: la.CA (1.0)
|   |   |   second_pos_stack = ID: la.CA (4.0/1.0)
|   |   |   second_pos_stack = PN: la.CA (0.0)
|   |   |   second_pos_stack = IC: la.VA (1.0)
|   |   |   second_pos_stack = MN: la.CA (0.0)
|   |   |   second_pos_stack = UK: sh (4.0/2.0)
|   |   |   second_pos_stack = VN: la.CA (12.0/7.0)
|   |   |   second_pos_stack = QV: la.CA (0.0)
|   |   |   second_pos_stack = WV: la.CA (0.0)
|   |   |   second_pos_stack = IQ: la.CA (1.0)
|   |   |   second_pos_stack = SV: la.CA (0.0)
|   |   |   second_pos_stack = HV: la.AA (3.0/1.0)
|   |   |   second_pos_stack = IR: la.+A (2.0/1.0)
|   |   |   second_pos_stack = IG: la.CA (0.0)
|   |   |   second_pos_stack = AN: la.AA (1.0)
|   |   |   second_pos_stack = MV: la.CA (0.0)
|   |   |   second_pos_stack = IM: sh (1.0)
|   |   |   second_pos_stack = BV: la.AA (1.0)
|   |   |   second_pos_stack = KV: la.CA (0.0)
|   |   |   second_pos_stack = GV: la.CA (0.0)
|   |   |   second_pos_stack = FV: la.CA (1.0)
|   |   |   second_pos_stack = PU: la.CA (0.0)
|   |   |   second_pos_stack = SP: la.CA (0.0)
|   |   |   second_pos_stack = XX: la.CA (0.0)
|   |   |   second_pos_stack = I?: la.CA (0.0)
|   |   |   second_pos_stack = IS: la.CA (0.0)
|   |   |   second_pos_stack = IT: la.CA (8.0/5.0)
|   |   |   second_pos_stack = IU: la.CA (0.0)
|   |   |   second_pos_stack = YY: la.CA (0.0)
|   |   can_do_leftarc = false: re (1319.0/179.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: la.AA (0.0)
|   |   second_pos_stack = ROOT: la.AA (25.0/12.0)
|   |   second_pos_stack = ++: la.AA (10.0/5.0)
|   |   second_pos_stack = NN: la.AA (25.0/5.0)
|   |   second_pos_stack = EN: la.AA (0.0)
|   |   second_pos_stack = AV
|   |   |   can_do_leftarc = true: la.AA (14.0/2.0)
|   |   |   can_do_leftarc = false: sh (8.0/3.0)
|   |   second_pos_stack = AJ: la.AA (3.0/2.0)
|   |   second_pos_stack = IK: la.AA (17.0/8.0)
|   |   second_pos_stack = IP: la.AA (0.0)
|   |   second_pos_stack = PO: la.AA (17.0/3.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (28.0/2.0)
|   |   |   can_do_leftarc = false: sh (31.0/9.0)
|   |   second_pos_stack = AB: la.AA (15.0/2.0)
|   |   second_pos_stack = TP: la.AA (1.0)
|   |   second_pos_stack = PR: la.AA (79.0/12.0)
|   |   second_pos_stack = RO: la.AA (2.0)
|   |   second_pos_stack = ID: la.AA (6.0/1.0)
|   |   second_pos_stack = PN: la.AA (5.0)
|   |   second_pos_stack = IC: la.AA (0.0)
|   |   second_pos_stack = MN: la.AA (0.0)
|   |   second_pos_stack = UK: la.AA (7.0/2.0)
|   |   second_pos_stack = VN: la.AA (6.0/1.0)
|   |   second_pos_stack = QV: sh (1.0)
|   |   second_pos_stack = WV: la.AA (0.0)
|   |   second_pos_stack = IQ: la.AA (0.0)
|   |   second_pos_stack = SV: sh (3.0/1.0)
|   |   second_pos_stack = HV
|   |   |   can_do_leftarc = true: la.AA (9.0)
|   |   |   can_do_leftarc = false: sh (3.0/1.0)
|   |   second_pos_stack = IR: la.AA (7.0/3.0)
|   |   second_pos_stack = IG: la.AA (0.0)
|   |   second_pos_stack = AN: la.AA (0.0)
|   |   second_pos_stack = MV: la.AA (0.0)
|   |   second_pos_stack = IM: la.AA (0.0)
|   |   second_pos_stack = BV: la.AA (5.0/2.0)
|   |   second_pos_stack = KV: la.AA (0.0)
|   |   second_pos_stack = GV: la.AA (0.0)
|   |   second_pos_stack = FV: la.AA (7.0/1.0)
|   |   second_pos_stack = PU: la.AA (0.0)
|   |   second_pos_stack = SP: la.AA (0.0)
|   |   second_pos_stack = XX: la.AA (0.0)
|   |   second_pos_stack = I?: la.AA (0.0)
|   |   second_pos_stack = IS: la.AA (0.0)
|   |   second_pos_stack = IT: sh (8.0/2.0)
|   |   second_pos_stack = IU: la.AA (0.0)
|   |   second_pos_stack = YY: la.AA (0.0)
|   first_pos_queue = ID: ra.HD (1631.0/9.0)
|   first_pos_queue = PN
|   |   can_do_leftarc = true: sh (60.0/37.0)
|   |   can_do_leftarc = false: re (40.0/6.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (4.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (2.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: sh (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (2.0)
|   |   second_pos_stack = VV: re (24.0/3.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: sh (3.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: sh (2.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (2.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = MN
|   |   second_pos_stack = nil: la.NA (0.0)
|   |   second_pos_stack = ROOT: la.NA (0.0)
|   |   second_pos_stack = ++: la.NA (18.0/1.0)
|   |   second_pos_stack = NN: la.NA (0.0)
|   |   second_pos_stack = EN: la.NA (0.0)
|   |   second_pos_stack = AV: la.NA (0.0)
|   |   second_pos_stack = AJ: la.NA (0.0)
|   |   second_pos_stack = IK: la.NA (0.0)
|   |   second_pos_stack = IP: la.NA (0.0)
|   |   second_pos_stack = PO: la.NA (0.0)
|   |   second_pos_stack = VV: re (9.0)
|   |   second_pos_stack = AB: la.MA (1.0)
|   |   second_pos_stack = TP: la.NA (0.0)
|   |   second_pos_stack = PR: la.NA (0.0)
|   |   second_pos_stack = RO: la.NA (0.0)
|   |   second_pos_stack = ID: la.NA (0.0)
|   |   second_pos_stack = PN: la.NA (0.0)
|   |   second_pos_stack = IC: la.NA (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: la.NA (0.0)
|   |   second_pos_stack = VN: la.CA (1.0)
|   |   second_pos_stack = QV: la.NA (0.0)
|   |   second_pos_stack = WV: la.NA (0.0)
|   |   second_pos_stack = IQ: la.NA (0.0)
|   |   second_pos_stack = SV: la.NA (0.0)
|   |   second_pos_stack = HV: la.NA (0.0)
|   |   second_pos_stack = IR: la.NA (0.0)
|   |   second_pos_stack = IG: la.NA (0.0)
|   |   second_pos_stack = AN: la.NA (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: la.NA (0.0)
|   |   second_pos_stack = BV: la.NA (0.0)
|   |   second_pos_stack = KV: la.NA (0.0)
|   |   second_pos_stack = GV: la.NA (0.0)
|   |   second_pos_stack = FV: la.NA (0.0)
|   |   second_pos_stack = PU: la.NA (0.0)
|   |   second_pos_stack = SP: la.NA (0.0)
|   |   second_pos_stack = XX: la.NA (0.0)
|   |   second_pos_stack = I?: la.NA (0.0)
|   |   second_pos_stack = IS: la.NA (0.0)
|   |   second_pos_stack = IT: la.NA (0.0)
|   |   second_pos_stack = IU: la.NA (0.0)
|   |   second_pos_stack = YY: la.NA (0.0)
|   first_pos_queue = UK: sh (399.0/50.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: sh (112.0/65.0)
|   |   can_do_leftarc = false: re (155.0/4.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: la.NA (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.TA (71.0/53.0)
|   |   |   can_do_leftarc = false: ra.BS (2.0/1.0)
|   |   second_pos_stack = ++: la.AA (28.0/21.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.NA (38.0/23.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = EN: la.NA (0.0)
|   |   second_pos_stack = AV: ra.EF (6.0/3.0)
|   |   second_pos_stack = AJ: la.NA (3.0/1.0)
|   |   second_pos_stack = IK: la.RA (16.0/7.0)
|   |   second_pos_stack = IP: la.NA (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.NA (60.0/31.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (4.0/2.0)
|   |   |   can_do_leftarc = false: re (24.0/3.0)
|   |   second_pos_stack = AB: la.+A (16.0/11.0)
|   |   second_pos_stack = TP: la.RA (1.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: la.NA (0.0)
|   |   second_pos_stack = ID: la.NA (0.0)
|   |   second_pos_stack = PN: la.+A (1.0)
|   |   second_pos_stack = IC: la.NA (0.0)
|   |   second_pos_stack = MN: la.NA (0.0)
|   |   second_pos_stack = UK: la.NA (4.0/1.0)
|   |   second_pos_stack = VN: la.MA (8.0/6.0)
|   |   second_pos_stack = QV: la.NA (0.0)
|   |   second_pos_stack = WV: la.NA (0.0)
|   |   second_pos_stack = IQ: la.NA (0.0)
|   |   second_pos_stack = SV: sh (6.0)
|   |   second_pos_stack = HV: sh (4.0/1.0)
|   |   second_pos_stack = IR: la.NA (0.0)
|   |   second_pos_stack = IG: la.NA (0.0)
|   |   second_pos_stack = AN: la.NA (2.0/1.0)
|   |   second_pos_stack = MV: sh (1.0)
|   |   second_pos_stack = IM: sh (2.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: la.NA (0.0)
|   |   second_pos_stack = FV: la.NA (0.0)
|   |   second_pos_stack = PU: la.NA (0.0)
|   |   second_pos_stack = SP: la.NA (0.0)
|   |   second_pos_stack = XX: la.+A (1.0)
|   |   second_pos_stack = I?: la.NA (0.0)
|   |   second_pos_stack = IS: la.MA (1.0)
|   |   second_pos_stack = IT: la.MA (3.0/1.0)
|   |   second_pos_stack = IU: la.NA (0.0)
|   |   second_pos_stack = YY: la.NA (0.0)
|   first_pos_queue = WV
|   |   second_pos_stack = nil: la.TA (0.0)
|   |   second_pos_stack = ROOT: la.AA (9.0/5.0)
|   |   second_pos_stack = ++: la.+A (1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.TA (5.0/2.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = EN: la.TA (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: la.TA (0.0)
|   |   second_pos_stack = IK: la.+A (3.0/2.0)
|   |   second_pos_stack = IP: la.TA (0.0)
|   |   second_pos_stack = PO: la.NA (12.0/9.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (4.0/2.0)
|   |   |   can_do_leftarc = false: re (5.0)
|   |   second_pos_stack = AB: la.AA (3.0/2.0)
|   |   second_pos_stack = TP: la.TA (0.0)
|   |   second_pos_stack = PR: la.TA (0.0)
|   |   second_pos_stack = RO: la.TA (0.0)
|   |   second_pos_stack = ID: la.AA (2.0/1.0)
|   |   second_pos_stack = PN: la.MA (1.0)
|   |   second_pos_stack = IC: la.TA (0.0)
|   |   second_pos_stack = MN: la.TA (0.0)
|   |   second_pos_stack = UK: la.MA (2.0/1.0)
|   |   second_pos_stack = VN: la.TA (0.0)
|   |   second_pos_stack = QV: la.TA (0.0)
|   |   second_pos_stack = WV: la.TA (0.0)
|   |   second_pos_stack = IQ: la.TA (0.0)
|   |   second_pos_stack = SV: sh (7.0/1.0)
|   |   second_pos_stack = HV: la.TA (0.0)
|   |   second_pos_stack = IR: la.TA (0.0)
|   |   second_pos_stack = IG: la.TA (0.0)
|   |   second_pos_stack = AN: la.TA (0.0)
|   |   second_pos_stack = MV: la.TA (0.0)
|   |   second_pos_stack = IM: la.TA (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: la.TA (0.0)
|   |   second_pos_stack = GV: la.TA (0.0)
|   |   second_pos_stack = FV: la.TA (0.0)
|   |   second_pos_stack = PU: la.TA (0.0)
|   |   second_pos_stack = SP: la.TA (1.0)
|   |   second_pos_stack = XX: la.TA (0.0)
|   |   second_pos_stack = I?: la.TA (0.0)
|   |   second_pos_stack = IS: la.TA (0.0)
|   |   second_pos_stack = IT: la.TA (0.0)
|   |   second_pos_stack = IU: la.TA (0.0)
|   |   second_pos_stack = YY: la.TA (0.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (5.0/1.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (17.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: la.AA (0.0)
|   |   second_pos_stack = ROOT: la.AA (74.0/32.0)
|   |   second_pos_stack = ++: la.AA (17.0/4.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.NA (26.0/16.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = EN: la.AA (0.0)
|   |   second_pos_stack = AV: re (8.0/3.0)
|   |   second_pos_stack = AJ: la.NA (2.0)
|   |   second_pos_stack = IK: la.AA (14.0/7.0)
|   |   second_pos_stack = IP: la.AA (0.0)
|   |   second_pos_stack = PO: la.AA (42.0/30.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (9.0/3.0)
|   |   |   can_do_leftarc = false: re (39.0/3.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.AA (9.0/6.0)
|   |   |   can_do_leftarc = false: re (5.0)
|   |   second_pos_stack = TP: la.AA (1.0)
|   |   second_pos_stack = PR: la.AA (14.0/2.0)
|   |   second_pos_stack = RO: la.AA (0.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.NA (5.0/1.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = PN: la.AA (0.0)
|   |   second_pos_stack = IC: la.AA (4.0/1.0)
|   |   second_pos_stack = MN: la.AA (0.0)
|   |   second_pos_stack = UK: la.AA (7.0/5.0)
|   |   second_pos_stack = VN: la.AA (8.0/5.0)
|   |   second_pos_stack = QV: la.AA (0.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: la.AA (2.0/1.0)
|   |   second_pos_stack = SV: la.AA (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: la.AA (0.0)
|   |   second_pos_stack = IG: la.AA (0.0)
|   |   second_pos_stack = AN: la.AA (0.0)
|   |   second_pos_stack = MV: la.AA (0.0)
|   |   second_pos_stack = IM: la.AA (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: la.AA (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (3.0/1.0)
|   |   second_pos_stack = PU: la.AA (0.0)
|   |   second_pos_stack = SP: la.AA (0.0)
|   |   second_pos_stack = XX: la.AA (1.0)
|   |   second_pos_stack = I?: la.AA (0.0)
|   |   second_pos_stack = IS: la.AA (0.0)
|   |   second_pos_stack = IT: la.AA (0.0)
|   |   second_pos_stack = IU: la.AA (0.0)
|   |   second_pos_stack = YY: la.AA (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: la.TA (0.0)
|   |   second_pos_stack = ROOT: la.TA (83.0/55.0)
|   |   second_pos_stack = ++: la.TA (27.0/18.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.RA (27.0/17.0)
|   |   |   can_do_leftarc = false: re (9.0/1.0)
|   |   second_pos_stack = EN: la.TA (0.0)
|   |   second_pos_stack = AV: re (5.0/3.0)
|   |   second_pos_stack = AJ: la.CA (4.0/3.0)
|   |   second_pos_stack = IK: la.RA (18.0/8.0)
|   |   second_pos_stack = IP: la.MA (1.0)
|   |   second_pos_stack = PO: la.NA (56.0/32.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (3.0)
|   |   |   can_do_leftarc = false: re (33.0/2.0)
|   |   second_pos_stack = AB: la.NA (10.0/6.0)
|   |   second_pos_stack = TP: la.TA (0.0)
|   |   second_pos_stack = PR: re (4.0/1.0)
|   |   second_pos_stack = RO: la.TA (0.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.MA (2.0/1.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = PN: la.TA (0.0)
|   |   second_pos_stack = IC: la.TA (5.0/3.0)
|   |   second_pos_stack = MN: la.TA (0.0)
|   |   second_pos_stack = UK: la.TA (8.0/5.0)
|   |   second_pos_stack = VN: re (4.0/1.0)
|   |   second_pos_stack = QV: re (5.0/2.0)
|   |   second_pos_stack = WV: re (3.0)
|   |   second_pos_stack = IQ: la.TA (0.0)
|   |   second_pos_stack = SV: re (9.0/4.0)
|   |   second_pos_stack = HV: re (3.0)
|   |   second_pos_stack = IR: la.TA (0.0)
|   |   second_pos_stack = IG: la.TA (0.0)
|   |   second_pos_stack = AN: la.NA (2.0/1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: la.NA (2.0)
|   |   second_pos_stack = BV: ra.BS (1.0)
|   |   second_pos_stack = KV: la.TA (0.0)
|   |   second_pos_stack = GV: la.TA (0.0)
|   |   second_pos_stack = FV: re (4.0)
|   |   second_pos_stack = PU: la.TA (0.0)
|   |   second_pos_stack = SP: la.TA (0.0)
|   |   second_pos_stack = XX: la.TA (0.0)
|   |   second_pos_stack = I?: la.TA (0.0)
|   |   second_pos_stack = IS: la.TA (0.0)
|   |   second_pos_stack = IT: la.+A (1.0)
|   |   second_pos_stack = IU: la.TA (0.0)
|   |   second_pos_stack = YY: la.TA (0.0)
|   first_pos_queue = IR: re (18.0/3.0)
|   first_pos_queue = IG: re (5.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: sh (38.0/17.0)
|   |   can_do_leftarc = false: re (53.0/4.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (29.0/23.0)
|   |   second_pos_stack = ++: la.AA (7.0/5.0)
|   |   second_pos_stack = NN: la.TA (7.0/4.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (4.0)
|   |   second_pos_stack = AJ: la.AA (1.0)
|   |   second_pos_stack = IK: la.RA (3.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.MA (9.0/5.0)
|   |   second_pos_stack = VV: re (11.0)
|   |   second_pos_stack = AB: la.AA (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: la.MA (3.0/2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IM: sh (128.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.TA (81.0/50.0)
|   |   can_do_leftarc = false: re (76.0/3.0)
|   first_pos_queue = KV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.MA (11.0/7.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: la.AA (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.AA (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.TA (11.0/7.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: la.AA (2.0)
|   |   |   can_do_leftarc = false: re (8.0)
|   |   second_pos_stack = AB: la.AA (3.0/2.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.TA (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: la.+A (1.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (3.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (5.0/1.0)
|   |   second_pos_stack = ++: la.AA (4.0/2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.RA (3.0/1.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.RA (4.0/2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.TA (8.0/5.0)
|   |   second_pos_stack = VV: re (16.0/1.0)
|   |   second_pos_stack = AB: la.NA (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.NA (2.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (5.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (4.0)
|   |   second_pos_stack = HV: re (7.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: la.AA (1.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.TA (23.0/15.0)
|   |   second_pos_stack = ++: la.AA (15.0/11.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.NA (9.0/6.0)
|   |   |   can_do_leftarc = false: re (4.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (3.0)
|   |   second_pos_stack = AJ: la.TA (1.0)
|   |   second_pos_stack = IK: la.RA (13.0/6.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.NA (21.0/15.0)
|   |   second_pos_stack = VV: re (16.0)
|   |   second_pos_stack = AB: la.+A (4.0/3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0/1.0)
|   |   second_pos_stack = PN: la.NA (1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.NA (2.0/1.0)
|   |   second_pos_stack = VN: la.CA (1.0)
|   |   second_pos_stack = QV: re (15.0/1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: la.TA (1.0)
|   |   second_pos_stack = SV: re (5.0/2.0)
|   |   second_pos_stack = HV: re (6.0/2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: la.TA (5.0/3.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: la.NA (1.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.MA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: ra.ST (1.0)
|   first_pos_queue = SP
|   |   second_pos_stack = nil: la.TA (0.0)
|   |   second_pos_stack = ROOT: la.TA (0.0)
|   |   second_pos_stack = ++: la.TA (2.0)
|   |   second_pos_stack = NN: sh (1.0)
|   |   second_pos_stack = EN: la.AA (2.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: la.TA (0.0)
|   |   second_pos_stack = IK: la.TA (0.0)
|   |   second_pos_stack = IP: la.TA (0.0)
|   |   second_pos_stack = PO: la.TA (4.0/1.0)
|   |   second_pos_stack = VV: la.AA (1.0)
|   |   second_pos_stack = AB: la.NA (3.0/2.0)
|   |   second_pos_stack = TP: la.TA (0.0)
|   |   second_pos_stack = PR: la.AA (3.0/2.0)
|   |   second_pos_stack = RO: la.TA (0.0)
|   |   second_pos_stack = ID: la.TA (0.0)
|   |   second_pos_stack = PN: la.TA (0.0)
|   |   second_pos_stack = IC: la.TA (0.0)
|   |   second_pos_stack = MN: la.TA (0.0)
|   |   second_pos_stack = UK: la.TA (0.0)
|   |   second_pos_stack = VN: la.TA (0.0)
|   |   second_pos_stack = QV: la.TA (0.0)
|   |   second_pos_stack = WV: la.TA (0.0)
|   |   second_pos_stack = IQ: la.TA (0.0)
|   |   second_pos_stack = SV: la.TA (0.0)
|   |   second_pos_stack = HV: la.TA (0.0)
|   |   second_pos_stack = IR: la.TA (0.0)
|   |   second_pos_stack = IG: la.TA (0.0)
|   |   second_pos_stack = AN: la.TA (0.0)
|   |   second_pos_stack = MV: la.TA (0.0)
|   |   second_pos_stack = IM: la.TA (0.0)
|   |   second_pos_stack = BV: la.TA (0.0)
|   |   second_pos_stack = KV: la.TA (0.0)
|   |   second_pos_stack = GV: la.TA (0.0)
|   |   second_pos_stack = FV: la.TA (0.0)
|   |   second_pos_stack = PU: la.TA (0.0)
|   |   second_pos_stack = SP: la.TA (0.0)
|   |   second_pos_stack = XX: la.TA (0.0)
|   |   second_pos_stack = I?: la.TA (0.0)
|   |   second_pos_stack = IS: la.TA (0.0)
|   |   second_pos_stack = IT: la.TA (0.0)
|   |   second_pos_stack = IU: la.TA (0.0)
|   |   second_pos_stack = YY: la.TA (0.0)
|   first_pos_queue = XX: la.AA (2.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.I? (11.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (5.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (10.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (18.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.I? (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: ra.I? (1.0)
|   first_pos_queue = IS: re (1.0)
|   first_pos_queue = IT: re (34.0/8.0)
|   first_pos_queue = IU
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IU (2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (3.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (4.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = TP
|   first_pos_queue = nil: re (20.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (74.0/1.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.AT (479.0/6.0)
|   |   can_do_leftarc = false: re (64.0/18.0)
|   first_pos_queue = EN: re (0.0)
|   first_pos_queue = AV: re (23.0/9.0)
|   first_pos_queue = AJ: sh (61.0/32.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (4.0/2.0)
|   |   second_pos_stack = EN: sh (1.0)
|   |   second_pos_stack = AV: re (21.0/2.0)
|   |   second_pos_stack = AJ: re (4.0/2.0)
|   |   second_pos_stack = IK: sh (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (10.0/3.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: sh (2.0)
|   |   second_pos_stack = PR: sh (4.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: sh (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: sh (3.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: sh (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (189.0/6.0)
|   first_pos_queue = PO: sh (11.0/4.0)
|   first_pos_queue = VV: re (73.0/20.0)
|   first_pos_queue = AB: sh (44.0/22.0)
|   first_pos_queue = TP: ra.CC (33.0/4.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.ET (3.0/1.0)
|   |   |   can_do_leftarc = false: ra.AG (6.0/3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.OA (44.0/28.0)
|   |   second_pos_stack = EN: ra.AG (1.0)
|   |   second_pos_stack = AV: re (193.0/12.0)
|   |   second_pos_stack = AJ: ra.OA (6.0/3.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (28.0/6.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (5.0/1.0)
|   |   second_pos_stack = PR: ra.ET (7.0/3.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.RA (2.0)
|   |   second_pos_stack = PN: ra.AG (1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: ra.AG (11.0/5.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.OA (1.0)
|   |   second_pos_stack = HV: re (3.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (45.0/2.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (2.0)
|   |   second_pos_stack = FV: re (6.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.TA (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (8.0/3.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (1.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.TA (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: ra.TA (2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.RA (2.0/1.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.IC (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (8.0/3.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (4.0/1.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.JC (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: sh (3.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: ra.IC (5.0/3.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = MN: ra.SP (3.0/1.0)
|   first_pos_queue = UK: sh (30.0/2.0)
|   first_pos_queue = VN: la.AT (88.0/11.0)
|   first_pos_queue = QV: re (11.0/1.0)
|   first_pos_queue = WV: re (2.0)
|   first_pos_queue = IQ: re (7.0/3.0)
|   first_pos_queue = SV: re (5.0/1.0)
|   first_pos_queue = HV: re (8.0/1.0)
|   first_pos_queue = IR: re (12.0/4.0)
|   first_pos_queue = IG: re (2.0/1.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.AT (22.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = MV: re (1.0)
|   first_pos_queue = IM: sh (21.0)
|   first_pos_queue = BV: re (12.0/3.0)
|   first_pos_queue = KV: re (0.0)
|   first_pos_queue = GV: re (4.0/1.0)
|   first_pos_queue = FV: re (2.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: ra.CC (1.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (7.0)
|   first_pos_queue = IS: re (1.0)
|   first_pos_queue = IT: re (9.0/3.0)
|   first_pos_queue = IU: re (0.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = PR
|   first_pos_queue = nil: re (284.0)
|   first_pos_queue = ROOT: ra.PA (0.0)
|   first_pos_queue = ++: sh (50.0/3.0)
|   first_pos_queue = NN: ra.PA (11526.0/1615.0)
|   first_pos_queue = EN: sh (1127.0/21.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.AA (218.0/150.0)
|   |   can_do_leftarc = false: re (687.0/100.0)
|   first_pos_queue = AJ: sh (1483.0/352.0)
|   first_pos_queue = IK: re (1184.0/57.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (47.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (1093.0/1.0)
|   |   second_pos_stack = EN: re (7.0)
|   |   second_pos_stack = AV: re (586.0)
|   |   second_pos_stack = AJ: re (37.0)
|   |   second_pos_stack = IK: re (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (21.0)
|   |   second_pos_stack = VV: re (3455.0)
|   |   second_pos_stack = AB: re (93.0)
|   |   second_pos_stack = TP: re (51.0)
|   |   second_pos_stack = PR: re (168.0)
|   |   second_pos_stack = RO: re (14.0)
|   |   second_pos_stack = ID: re (34.0)
|   |   second_pos_stack = PN: re (6.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (373.0)
|   |   second_pos_stack = QV: re (13.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (5.0)
|   |   second_pos_stack = HV: re (154.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (53.0)
|   |   second_pos_stack = MV: re (3.0)
|   |   second_pos_stack = IM: ra.HD (1.0)
|   |   second_pos_stack = BV: re (112.0)
|   |   second_pos_stack = KV: re (6.0)
|   |   second_pos_stack = GV: re (78.0)
|   |   second_pos_stack = FV: re (106.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (3.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PO: sh (3864.0/909.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true
|   |   |   second_pos_stack = nil: la.AA (0.0)
|   |   |   second_pos_stack = ROOT: la.RA (624.0/403.0)
|   |   |   second_pos_stack = ++: la.AA (54.0/36.0)
|   |   |   second_pos_stack = NN: la.AA (51.0/28.0)
|   |   |   second_pos_stack = EN: la.AA (0.0)
|   |   |   second_pos_stack = AV: la.AA (0.0)
|   |   |   second_pos_stack = AJ: la.AA (4.0/2.0)
|   |   |   second_pos_stack = IK: la.AA (26.0/14.0)
|   |   |   second_pos_stack = IP: la.AA (0.0)
|   |   |   second_pos_stack = PO: la.AA (94.0/51.0)
|   |   |   second_pos_stack = VV: la.OA (3.0/1.0)
|   |   |   second_pos_stack = AB: la.AA (18.0/12.0)
|   |   |   second_pos_stack = TP: la.AA (0.0)
|   |   |   second_pos_stack = PR: la.AA (1.0)
|   |   |   second_pos_stack = RO: la.AA (0.0)
|   |   |   second_pos_stack = ID: la.AA (6.0/3.0)
|   |   |   second_pos_stack = PN: la.AA (2.0/1.0)
|   |   |   second_pos_stack = IC: la.AA (4.0/2.0)
|   |   |   second_pos_stack = MN: la.AA (0.0)
|   |   |   second_pos_stack = UK: la.SS (10.0/6.0)
|   |   |   second_pos_stack = VN: la.AA (6.0/2.0)
|   |   |   second_pos_stack = QV: la.AA (0.0)
|   |   |   second_pos_stack = WV: la.AA (0.0)
|   |   |   second_pos_stack = IQ: la.RA (1.0)
|   |   |   second_pos_stack = SV: la.AA (0.0)
|   |   |   second_pos_stack = HV: la.AA (0.0)
|   |   |   second_pos_stack = IR: la.AA (2.0/1.0)
|   |   |   second_pos_stack = IG: la.AA (2.0)
|   |   |   second_pos_stack = AN: la.AA (0.0)
|   |   |   second_pos_stack = MV: la.AA (0.0)
|   |   |   second_pos_stack = IM: la.AA (43.0/17.0)
|   |   |   second_pos_stack = BV: la.AA (0.0)
|   |   |   second_pos_stack = KV: la.AA (0.0)
|   |   |   second_pos_stack = GV: la.AA (0.0)
|   |   |   second_pos_stack = FV: la.AA (0.0)
|   |   |   second_pos_stack = PU: la.AA (0.0)
|   |   |   second_pos_stack = SP: la.AA (0.0)
|   |   |   second_pos_stack = XX: la.AA (1.0)
|   |   |   second_pos_stack = I?: la.AA (0.0)
|   |   |   second_pos_stack = IS: la.AA (0.0)
|   |   |   second_pos_stack = IT: la.AA (5.0/4.0)
|   |   |   second_pos_stack = IU: la.AA (0.0)
|   |   |   second_pos_stack = YY: la.AA (0.0)
|   |   can_do_leftarc = false: re (2263.0/627.0)
|   first_pos_queue = AB: sh (641.0/285.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (9.0/2.0)
|   |   second_pos_stack = ++: sh (4.0/2.0)
|   |   second_pos_stack = NN: sh (54.0/20.0)
|   |   second_pos_stack = EN: la.AA (9.0/6.0)
|   |   second_pos_stack = AV
|   |   |   can_do_leftarc = true: la.AA (2.0)
|   |   |   can_do_leftarc = false: re (26.0/5.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: la.AG (4.0/2.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: la.AG (11.0/5.0)
|   |   second_pos_stack = VV: sh (43.0/8.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: sh (1.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: la.AA (2.0)
|   |   |   can_do_leftarc = false: sh (7.0)
|   |   second_pos_stack = RO: la.AA (1.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: la.RA (3.0/1.0)
|   |   second_pos_stack = IC: la.AG (1.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (8.0/2.0)
|   |   second_pos_stack = QV: la.RA (1.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: ra.AT (3.0/2.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: re (2.0/1.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (1.0)
|   |   second_pos_stack = FV: sh (1.0)
|   |   second_pos_stack = PU: la.TA (1.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true: ra.CC (29.0/13.0)
|   |   can_do_leftarc = false: re (1225.0/295.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (33.0/5.0)
|   |   |   can_do_leftarc = false: ra.PA (2.0)
|   |   second_pos_stack = ++: la.OA (4.0/2.0)
|   |   second_pos_stack = NN: sh (134.0/42.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (32.0/12.0)
|   |   second_pos_stack = AJ: ra.PA (2.0/1.0)
|   |   second_pos_stack = IK: la.RA (6.0/3.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (3.0)
|   |   second_pos_stack = VV
|   |   |   can_do_leftarc = true: ra.PA (2.0)
|   |   |   can_do_leftarc = false: sh (261.0/63.0)
|   |   second_pos_stack = AB: ra.PA (15.0/6.0)
|   |   second_pos_stack = TP: sh (4.0/1.0)
|   |   second_pos_stack = PR: ra.PA (12.0/6.0)
|   |   second_pos_stack = RO: ra.PA (56.0/2.0)
|   |   second_pos_stack = ID: ra.PA (6.0/3.0)
|   |   second_pos_stack = PN: ra.PA (5.0/1.0)
|   |   second_pos_stack = IC: ra.PA (1.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (40.0/13.0)
|   |   second_pos_stack = QV: ra.PA (2.0/1.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV
|   |   |   can_do_leftarc = true: ra.PA (3.0)
|   |   |   can_do_leftarc = false: sh (10.0/1.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (2.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (2.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (1.0)
|   |   second_pos_stack = FV: sh (4.0/1.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: ra.PA (2.0/1.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: ra.PA (4.0/2.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = ID: ra.HD (756.0/2.0)
|   first_pos_queue = PN: ra.PA (646.0/126.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (10.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (65.0/18.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (11.0/2.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (1.0)
|   |   second_pos_stack = VV: re (119.0/52.0)
|   |   second_pos_stack = AB: sh (3.0/1.0)
|   |   second_pos_stack = TP: re (3.0/1.0)
|   |   second_pos_stack = PR: re (10.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: sh (5.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (12.0/3.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: sh (4.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: ra.PA (1.0)
|   |   second_pos_stack = MV: sh (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = MN: ra.PA (200.0/6.0)
|   first_pos_queue = UK: sh (348.0/2.0)
|   first_pos_queue = VN: ra.PA (1615.0/136.0)
|   first_pos_queue = QV
|   |   can_do_leftarc = true: la.AA (125.0/65.0)
|   |   can_do_leftarc = false: re (220.0/19.0)
|   first_pos_queue = WV
|   |   can_do_leftarc = true: la.AA (11.0/6.0)
|   |   can_do_leftarc = false: re (35.0/8.0)
|   first_pos_queue = IQ: re (128.0/8.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (41.0/18.0)
|   |   second_pos_stack = ++: la.AA (6.0/3.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.AA (6.0/3.0)
|   |   |   can_do_leftarc = false: re (54.0/6.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (21.0/9.0)
|   |   second_pos_stack = AJ: ra.PA (4.0/2.0)
|   |   second_pos_stack = IK: la.AA (4.0/2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.AA (9.0/4.0)
|   |   second_pos_stack = VV: re (89.0/32.0)
|   |   second_pos_stack = AB: re (3.0/1.0)
|   |   second_pos_stack = TP: la.RA (1.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (4.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.OA (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.RA (3.0/2.0)
|   |   second_pos_stack = VN: re (22.0/7.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (3.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (4.0/1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (3.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (136.0/92.0)
|   |   second_pos_stack = ++: la.OA (10.0/7.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.TA (7.0/3.0)
|   |   |   can_do_leftarc = false: re (119.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (18.0/7.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: la.AA (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.AA (7.0/2.0)
|   |   |   can_do_leftarc = false: re (3.0)
|   |   second_pos_stack = VV: re (90.0/25.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.AA (2.0/1.0)
|   |   |   can_do_leftarc = false: re (5.0)
|   |   second_pos_stack = TP: re (2.0)
|   |   second_pos_stack = PR: re (6.0/1.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: re (5.0)
|   |   second_pos_stack = PN: re (5.0/1.0)
|   |   second_pos_stack = IC: la.RA (2.0/1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.AA (3.0/2.0)
|   |   second_pos_stack = VN: re (32.0/1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (4.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: la.RA (1.0)
|   |   second_pos_stack = AN: re (5.0/1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (3.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IR: re (120.0/16.0)
|   first_pos_queue = IG: re (23.0/1.0)
|   first_pos_queue = AN: ra.PA (320.0/31.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (28.0/15.0)
|   |   second_pos_stack = ++: la.AA (2.0)
|   |   second_pos_stack = NN: re (21.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (5.0/2.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.AA (5.0/3.0)
|   |   second_pos_stack = VV: re (33.0/3.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (3.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.RA (2.0)
|   |   second_pos_stack = VN: re (5.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.PA (2.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IM: sh (558.0/4.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.TA (36.0/24.0)
|   |   can_do_leftarc = false: re (141.0/24.0)
|   first_pos_queue = KV: re (48.0/14.0)
|   first_pos_queue = GV: re (60.0/28.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.AA (26.0/17.0)
|   |   second_pos_stack = ++: la.AA (4.0/2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.TA (4.0/1.0)
|   |   |   can_do_leftarc = false: re (25.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (7.0/2.0)
|   |   second_pos_stack = AJ: ra.PA (1.0)
|   |   second_pos_stack = IK: la.RA (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.MA (4.0/2.0)
|   |   |   can_do_leftarc = false: ra.PA (2.0/1.0)
|   |   second_pos_stack = VV: re (75.0/30.0)
|   |   second_pos_stack = AB: la.AA (2.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (6.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (5.0/1.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.RA (1.0)
|   |   second_pos_stack = VN: ra.PA (5.0/1.0)
|   |   second_pos_stack = QV: re (3.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (11.0/3.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: ra.PA (2.0)
|   |   second_pos_stack = FV: re (2.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.TA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: re (3.0/1.0)
|   first_pos_queue = SP: sh (49.0/19.0)
|   first_pos_queue = XX: ra.PA (0.0)
|   first_pos_queue = I?: re (236.0/1.0)
|   first_pos_queue = IS: re (20.0)
|   first_pos_queue = IT: re (112.0/1.0)
|   first_pos_queue = IU: re (35.0)
|   first_pos_queue = YY: ra.PA (0.0)
top_pos_stack = RO
|   first_pos_queue = nil: re (24.0)
|   first_pos_queue = ROOT: la.DT (0.0)
|   first_pos_queue = ++: sh (99.0/1.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (1142.0/23.0)
|   |   can_do_leftarc = false: re (144.0/30.0)
|   first_pos_queue = EN: ra.ET (4.0/2.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.TA (11.0/3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR
|   |   |   can_do_leftarc = true: sh (2.0)
|   |   |   can_do_leftarc = false: re (6.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.TA (3.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AJ: sh (107.0/19.0)
|   first_pos_queue = IK: re (86.0/37.0)
|   first_pos_queue = IP: re (188.0/8.0)
|   first_pos_queue = PO: sh (36.0/13.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.TA (25.0/10.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (15.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (5.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.TA (3.0/1.0)
|   |   second_pos_stack = VV: re (4.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (24.0/2.0)
|   |   second_pos_stack = RO: re (8.0)
|   |   second_pos_stack = ID: re (13.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (2.0)
|   |   second_pos_stack = UK: la.SS (4.0/1.0)
|   |   second_pos_stack = VN: la.TA (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (2.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.ET (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.AN (4.0/1.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: ra.ET (2.0/1.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: ra.CC (3.0/2.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: sh (0.0)
|   |   second_pos_stack = AB: sh (0.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (3.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: ra.AA (1.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (1.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: re (1.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.TA (4.0/2.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: sh (6.0/2.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true: sh (64.0/30.0)
|   |   can_do_leftarc = false: re (88.0/31.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: ra.CC (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.DT (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.+F (6.0/3.0)
|   |   second_pos_stack = ++: ra.HD (2.0/1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: ra.HD (5.0/2.0)
|   |   |   can_do_leftarc = false: sh (14.0/9.0)
|   |   second_pos_stack = EN: ra.CC (0.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: ra.CC (0.0)
|   |   second_pos_stack = IK: ra.CC (2.0/1.0)
|   |   second_pos_stack = IP: ra.CC (0.0)
|   |   second_pos_stack = PO: ra.CC (1.0)
|   |   second_pos_stack = VV: ra.CC (10.0/6.0)
|   |   second_pos_stack = AB: ra.CC (0.0)
|   |   second_pos_stack = TP: ra.CC (0.0)
|   |   second_pos_stack = PR: ra.CC (46.0/11.0)
|   |   second_pos_stack = RO
|   |   |   can_do_leftarc = true: la.TA (4.0)
|   |   |   can_do_leftarc = false: ra.ET (27.0/18.0)
|   |   second_pos_stack = ID: ra.ET (13.0/4.0)
|   |   second_pos_stack = PN: ra.ET (4.0)
|   |   second_pos_stack = IC: ra.CC (0.0)
|   |   second_pos_stack = MN: ra.ET (7.0/2.0)
|   |   second_pos_stack = UK: la.SS (3.0/2.0)
|   |   second_pos_stack = VN: ra.CC (2.0/1.0)
|   |   second_pos_stack = QV: ra.CC (0.0)
|   |   second_pos_stack = WV: ra.CC (0.0)
|   |   second_pos_stack = IQ: la.TA (1.0)
|   |   second_pos_stack = SV: ra.CC (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.CC (0.0)
|   |   second_pos_stack = IG: ra.ET (4.0)
|   |   second_pos_stack = AN: ra.CC (0.0)
|   |   second_pos_stack = MV: ra.CC (0.0)
|   |   second_pos_stack = IM: ra.CC (0.0)
|   |   second_pos_stack = BV: ra.PT (1.0)
|   |   second_pos_stack = KV: ra.CC (0.0)
|   |   second_pos_stack = GV: ra.CC (0.0)
|   |   second_pos_stack = FV: ra.CC (0.0)
|   |   second_pos_stack = PU: ra.CC (0.0)
|   |   second_pos_stack = SP: ra.CC (0.0)
|   |   second_pos_stack = XX: ra.CC (0.0)
|   |   second_pos_stack = I?: ra.CC (0.0)
|   |   second_pos_stack = IS: ra.CC (0.0)
|   |   second_pos_stack = IT: ra.CC (0.0)
|   |   second_pos_stack = IU: ra.CC (0.0)
|   |   second_pos_stack = YY: ra.CC (0.0)
|   first_pos_queue = ID: ra.HD (30.0)
|   first_pos_queue = PN
|   |   can_do_leftarc = true: la.AT (2.0/1.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (4.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: sh (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = MN: re (5.0)
|   first_pos_queue = UK: sh (4.0/1.0)
|   first_pos_queue = VN: la.DT (21.0/4.0)
|   first_pos_queue = QV: re (14.0/6.0)
|   first_pos_queue = WV: la.DT (0.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (0.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.IQ (0.0)
|   |   second_pos_stack = IK: ra.IQ (0.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: ra.IQ (0.0)
|   |   second_pos_stack = VV: ra.IQ (0.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: ra.IQ (0.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: ra.IQ (2.0/1.0)
|   |   second_pos_stack = PN: ra.IQ (3.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (3.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: ra.IQ (0.0)
|   |   second_pos_stack = QV: ra.IQ (0.0)
|   |   second_pos_stack = WV: ra.IQ (0.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: ra.IQ (0.0)
|   |   second_pos_stack = HV: ra.IQ (0.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: ra.IQ (0.0)
|   |   second_pos_stack = MV: ra.IQ (0.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: ra.IQ (0.0)
|   |   second_pos_stack = KV: ra.IQ (0.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: ra.IQ (0.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: ra.IQ (0.0)
|   first_pos_queue = SV: re (7.0)
|   first_pos_queue = HV: re (22.0/8.0)
|   first_pos_queue = IR: re (58.0/5.0)
|   first_pos_queue = IG: sh (28.0/7.0)
|   first_pos_queue = AN: la.DT (5.0)
|   first_pos_queue = MV: re (1.0)
|   first_pos_queue = IM: sh (1.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.SS (2.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = KV: re (3.0)
|   first_pos_queue = GV: la.TA (2.0/1.0)
|   first_pos_queue = FV: re (4.0/1.0)
|   first_pos_queue = PU: sh (1.0)
|   first_pos_queue = SP: sh (3.0/1.0)
|   first_pos_queue = XX: la.DT (0.0)
|   first_pos_queue = I?: re (4.0)
|   first_pos_queue = IS: re (9.0)
|   first_pos_queue = IT: ra.IT (28.0/12.0)
|   first_pos_queue = IU: re (1.0)
|   first_pos_queue = YY: la.DT (0.0)
top_pos_stack = ID
|   first_pos_queue = nil: re (93.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (52.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: la.++ (5.0/2.0)
|   |   second_pos_stack = NN: ra.CC (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (153.0)
|   |   second_pos_stack = VV: ra.KA (2.0/1.0)
|   |   second_pos_stack = AB: re (191.0/19.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.PA (222.0/31.0)
|   |   second_pos_stack = RO: re (7.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.++ (3.0)
|   |   |   can_do_leftarc = false: ra.PA (2.0/1.0)
|   |   second_pos_stack = PN: re (83.0/28.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (13.0/6.0)
|   |   second_pos_stack = UK: sh (126.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = EN: sh (82.0/6.0)
|   first_pos_queue = AV: re (207.0/18.0)
|   first_pos_queue = AJ
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (16.0/3.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (96.0/22.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: sh (29.0/8.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: sh (9.0/2.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.PT (2.0/1.0)
|   |   second_pos_stack = UK: sh (8.0/2.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.IK (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: ra.IK (4.0/2.0)
|   |   second_pos_stack = VV: ra.IK (1.0)
|   |   second_pos_stack = AB: re (56.0/24.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (28.0/2.0)
|   |   second_pos_stack = RO: re (2.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: ra.IK (89.0/44.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (45.0/23.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (514.0/37.0)
|   first_pos_queue = PO: sh (381.0/48.0)
|   first_pos_queue = VV: re (880.0/69.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (0.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (0.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (0.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (3.0/1.0)
|   |   second_pos_stack = VV: ra.AA (2.0/1.0)
|   |   second_pos_stack = AB: re (111.0/58.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (13.0/7.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (24.0/13.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: re (4.0)
|   |   second_pos_stack = UK: sh (12.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (4.0/1.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (11.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: sh (16.0/5.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.PT (5.0/2.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PR: re (319.0/94.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.ET (1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.ET (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (48.0/13.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.PA (6.0/1.0)
|   |   second_pos_stack = RO: ra.ET (3.0/1.0)
|   |   second_pos_stack = ID: ra.DT (1.0)
|   |   second_pos_stack = PN: ra.ET (3.0/2.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.ET (36.0/6.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = ID: re (1036.0/13.0)
|   first_pos_queue = PN
|   |   second_pos_stack = nil: ra.CC (0.0)
|   |   second_pos_stack = ROOT: ra.CC (0.0)
|   |   second_pos_stack = ++: ra.CC (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.CC (0.0)
|   |   second_pos_stack = AV: ra.CC (0.0)
|   |   second_pos_stack = AJ: ra.CC (0.0)
|   |   second_pos_stack = IK: ra.CC (0.0)
|   |   second_pos_stack = IP: ra.CC (0.0)
|   |   second_pos_stack = PO: re (2.0/1.0)
|   |   second_pos_stack = VV: ra.CC (0.0)
|   |   second_pos_stack = AB: re (20.0/3.0)
|   |   second_pos_stack = TP: ra.CC (0.0)
|   |   second_pos_stack = PR: sh (7.0/3.0)
|   |   second_pos_stack = RO: ra.CC (0.0)
|   |   second_pos_stack = ID: ra.CC (0.0)
|   |   second_pos_stack = PN: ra.CC (34.0/9.0)
|   |   second_pos_stack = IC: ra.CC (0.0)
|   |   second_pos_stack = MN: ra.ET (5.0/2.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: ra.CC (0.0)
|   |   second_pos_stack = QV: ra.CC (0.0)
|   |   second_pos_stack = WV: ra.CC (0.0)
|   |   second_pos_stack = IQ: ra.CC (0.0)
|   |   second_pos_stack = SV: ra.CC (0.0)
|   |   second_pos_stack = HV: ra.CC (0.0)
|   |   second_pos_stack = IR: ra.CC (0.0)
|   |   second_pos_stack = IG: ra.CC (0.0)
|   |   second_pos_stack = AN: ra.CC (0.0)
|   |   second_pos_stack = MV: ra.CC (0.0)
|   |   second_pos_stack = IM: ra.CC (0.0)
|   |   second_pos_stack = BV: ra.CC (0.0)
|   |   second_pos_stack = KV: ra.CC (0.0)
|   |   second_pos_stack = GV: ra.CC (0.0)
|   |   second_pos_stack = FV: ra.CC (0.0)
|   |   second_pos_stack = PU: ra.CC (0.0)
|   |   second_pos_stack = SP: ra.CC (0.0)
|   |   second_pos_stack = XX: ra.CC (0.0)
|   |   second_pos_stack = I?: ra.CC (0.0)
|   |   second_pos_stack = IS: ra.CC (0.0)
|   |   second_pos_stack = IT: ra.CC (0.0)
|   |   second_pos_stack = IU: ra.CC (0.0)
|   |   second_pos_stack = YY: ra.CC (0.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: ra.JC (0.0)
|   |   second_pos_stack = ROOT: ra.JC (0.0)
|   |   second_pos_stack = ++: ra.JC (0.0)
|   |   second_pos_stack = NN: ra.JC (3.0)
|   |   second_pos_stack = EN: ra.JC (0.0)
|   |   second_pos_stack = AV: ra.JC (0.0)
|   |   second_pos_stack = AJ: ra.JC (0.0)
|   |   second_pos_stack = IK: ra.JC (0.0)
|   |   second_pos_stack = IP: ra.JC (0.0)
|   |   second_pos_stack = PO: sh (4.0)
|   |   second_pos_stack = VV: ra.JC (0.0)
|   |   second_pos_stack = AB: re (10.0/4.0)
|   |   second_pos_stack = TP: ra.JC (0.0)
|   |   second_pos_stack = PR: re (11.0/1.0)
|   |   second_pos_stack = RO: ra.JC (0.0)
|   |   second_pos_stack = ID: ra.JC (0.0)
|   |   second_pos_stack = PN: sh (6.0/1.0)
|   |   second_pos_stack = IC: ra.JC (0.0)
|   |   second_pos_stack = MN: ra.JC (125.0/5.0)
|   |   second_pos_stack = UK: sh (2.0)
|   |   second_pos_stack = VN: ra.JC (0.0)
|   |   second_pos_stack = QV: ra.JC (0.0)
|   |   second_pos_stack = WV: ra.JC (0.0)
|   |   second_pos_stack = IQ: ra.JC (0.0)
|   |   second_pos_stack = SV: ra.JC (0.0)
|   |   second_pos_stack = HV: ra.JC (0.0)
|   |   second_pos_stack = IR: ra.JC (0.0)
|   |   second_pos_stack = IG: ra.JC (0.0)
|   |   second_pos_stack = AN: ra.JC (0.0)
|   |   second_pos_stack = MV: ra.JC (0.0)
|   |   second_pos_stack = IM: ra.JC (0.0)
|   |   second_pos_stack = BV: ra.JC (0.0)
|   |   second_pos_stack = KV: ra.JC (0.0)
|   |   second_pos_stack = GV: ra.JC (0.0)
|   |   second_pos_stack = FV: ra.JC (0.0)
|   |   second_pos_stack = PU: ra.JC (0.0)
|   |   second_pos_stack = SP: ra.JC (0.0)
|   |   second_pos_stack = XX: ra.JC (0.0)
|   |   second_pos_stack = I?: ra.JC (0.0)
|   |   second_pos_stack = IS: ra.JC (0.0)
|   |   second_pos_stack = IT: ra.JC (0.0)
|   |   second_pos_stack = IU: ra.JC (0.0)
|   |   second_pos_stack = YY: ra.JC (0.0)
|   first_pos_queue = MN
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.CC (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.PA (4.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (24.0/7.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.ET (8.0/4.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = UK: sh (84.0/7.0)
|   first_pos_queue = VN
|   |   second_pos_stack = nil: ra.PA (0.0)
|   |   second_pos_stack = ROOT: ra.PA (0.0)
|   |   second_pos_stack = ++: ra.PA (0.0)
|   |   second_pos_stack = NN: ra.PA (0.0)
|   |   second_pos_stack = EN: ra.PA (0.0)
|   |   second_pos_stack = AV: ra.PA (0.0)
|   |   second_pos_stack = AJ: ra.PA (0.0)
|   |   second_pos_stack = IK: ra.PA (0.0)
|   |   second_pos_stack = IP: ra.PA (0.0)
|   |   second_pos_stack = PO: re (17.0)
|   |   second_pos_stack = VV: ra.PA (0.0)
|   |   second_pos_stack = AB: re (31.0/1.0)
|   |   second_pos_stack = TP: ra.PA (0.0)
|   |   second_pos_stack = PR: ra.PA (70.0/3.0)
|   |   second_pos_stack = RO: ra.PA (0.0)
|   |   second_pos_stack = ID: ra.PA (0.0)
|   |   second_pos_stack = PN: re (13.0/3.0)
|   |   second_pos_stack = IC: ra.PA (0.0)
|   |   second_pos_stack = MN: re (5.0/1.0)
|   |   second_pos_stack = UK: sh (24.0)
|   |   second_pos_stack = VN: ra.PA (0.0)
|   |   second_pos_stack = QV: ra.PA (0.0)
|   |   second_pos_stack = WV: ra.PA (0.0)
|   |   second_pos_stack = IQ: ra.PA (0.0)
|   |   second_pos_stack = SV: ra.PA (0.0)
|   |   second_pos_stack = HV: ra.PA (0.0)
|   |   second_pos_stack = IR: ra.PA (0.0)
|   |   second_pos_stack = IG: ra.PA (0.0)
|   |   second_pos_stack = AN: ra.PA (0.0)
|   |   second_pos_stack = MV: ra.PA (0.0)
|   |   second_pos_stack = IM: ra.PA (0.0)
|   |   second_pos_stack = BV: ra.PA (0.0)
|   |   second_pos_stack = KV: ra.PA (0.0)
|   |   second_pos_stack = GV: ra.PA (0.0)
|   |   second_pos_stack = FV: ra.PA (0.0)
|   |   second_pos_stack = PU: ra.PA (0.0)
|   |   second_pos_stack = SP: ra.PA (0.0)
|   |   second_pos_stack = XX: ra.PA (0.0)
|   |   second_pos_stack = I?: ra.PA (0.0)
|   |   second_pos_stack = IS: ra.PA (0.0)
|   |   second_pos_stack = IT: ra.PA (0.0)
|   |   second_pos_stack = IU: ra.PA (0.0)
|   |   second_pos_stack = YY: ra.PA (0.0)
|   first_pos_queue = QV: re (78.0/3.0)
|   first_pos_queue = WV: re (15.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (14.0/4.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: ra.IQ (8.0/3.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (5.0/1.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = SV: re (91.0/4.0)
|   first_pos_queue = HV: re (123.0/8.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.JR (1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: ra.IC (2.0/1.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (5.0/2.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (4.0)
|   |   second_pos_stack = RO: re (2.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: ra.JR (30.0/18.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.JR (34.0/21.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IG: ra.IG (1.0)
|   first_pos_queue = AN
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (11.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.PA (11.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: sh (7.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = MV: re (16.0/1.0)
|   first_pos_queue = IM: sh (39.0)
|   first_pos_queue = BV: re (30.0/4.0)
|   first_pos_queue = KV: re (7.0)
|   first_pos_queue = GV: re (17.0/2.0)
|   first_pos_queue = FV: re (54.0/7.0)
|   first_pos_queue = PU: sh (2.0)
|   first_pos_queue = SP: sh (3.0/1.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (15.0/1.0)
|   first_pos_queue = IS: re (3.0)
|   first_pos_queue = IT: re (17.0/8.0)
|   first_pos_queue = IU: re (2.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = PN
|   first_pos_queue = nil: re (96.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (130.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (155.0/8.0)
|   |   can_do_leftarc = false: re (74.0/37.0)
|   first_pos_queue = EN: sh (18.0/3.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (24.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.+F (1.0)
|   |   second_pos_stack = VV: re (8.0/1.0)
|   |   second_pos_stack = AB: la.SS (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (32.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (9.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (3.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: la.XX (1.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true: sh (18.0/2.0)
|   |   can_do_leftarc = false: re (11.0/2.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (7.0/3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (20.0/9.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.IK (6.0/4.0)
|   |   second_pos_stack = AJ: sh (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: ra.IK (34.0/14.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (87.0/40.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (4.0)
|   |   second_pos_stack = PN: sh (39.0/15.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: ra.IK (1.0)
|   |   second_pos_stack = UK: sh (2.0)
|   |   second_pos_stack = VN: sh (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: sh (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (318.0/10.0)
|   first_pos_queue = PO: sh (20.0/8.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (206.0/1.0)
|   |   second_pos_stack = ++: la.SS (6.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (3.0)
|   |   |   can_do_leftarc = false: re (7.0/2.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (5.0/2.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (6.0/2.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (15.0)
|   |   second_pos_stack = VV: re (16.0/2.0)
|   |   second_pos_stack = AB: la.SS (15.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (104.0/7.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: re (5.0/1.0)
|   |   second_pos_stack = PN: re (38.0/1.0)
|   |   second_pos_stack = IC: la.SS (3.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (58.0/1.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (5.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: re (2.0)
|   |   second_pos_stack = HV: re (4.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = AB: re (63.0/33.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (25.0/1.0)
|   first_pos_queue = PR: re (147.0/32.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT: ra.ET (5.0/1.0)
|   |   second_pos_stack = ++: ra.ET (0.0)
|   |   second_pos_stack = NN: ra.ET (2.0/1.0)
|   |   second_pos_stack = EN: ra.ET (0.0)
|   |   second_pos_stack = AV: ra.ET (0.0)
|   |   second_pos_stack = AJ: ra.ET (0.0)
|   |   second_pos_stack = IK: ra.ET (0.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO: ra.OO (1.0)
|   |   second_pos_stack = VV: ra.ET (8.0/3.0)
|   |   second_pos_stack = AB: ra.ET (0.0)
|   |   second_pos_stack = TP: ra.ET (1.0)
|   |   second_pos_stack = PR: re (14.0/6.0)
|   |   second_pos_stack = RO: ra.ET (0.0)
|   |   second_pos_stack = ID: ra.ET (1.0)
|   |   second_pos_stack = PN: sh (8.0/1.0)
|   |   second_pos_stack = IC: ra.ET (0.0)
|   |   second_pos_stack = MN: ra.AA (1.0)
|   |   second_pos_stack = UK: ra.ET (0.0)
|   |   second_pos_stack = VN: ra.ET (0.0)
|   |   second_pos_stack = QV: ra.ET (0.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   second_pos_stack = SV: ra.ET (0.0)
|   |   second_pos_stack = HV: ra.ET (0.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (0.0)
|   |   second_pos_stack = AN: ra.ET (0.0)
|   |   second_pos_stack = MV: ra.ET (0.0)
|   |   second_pos_stack = IM: ra.ET (0.0)
|   |   second_pos_stack = BV: ra.ET (0.0)
|   |   second_pos_stack = KV: ra.ET (0.0)
|   |   second_pos_stack = GV: ra.ET (0.0)
|   |   second_pos_stack = FV: ra.ET (0.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (0.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (0.0)
|   |   second_pos_stack = IT: ra.ET (0.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: ra.ET (0.0)
|   first_pos_queue = ID: ra.HD (683.0/1.0)
|   first_pos_queue = PN: ra.CC (180.0/27.0)
|   first_pos_queue = IC
|   |   can_do_leftarc = true: sh (3.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   first_pos_queue = MN
|   |   can_do_leftarc = true: la.DT (17.0/1.0)
|   |   can_do_leftarc = false: ra.ET (11.0/3.0)
|   first_pos_queue = UK: sh (11.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.DT (38.0/1.0)
|   |   can_do_leftarc = false: re (12.0/1.0)
|   first_pos_queue = QV
|   |   can_do_leftarc = true: la.SS (7.0)
|   |   can_do_leftarc = false: re (5.0)
|   first_pos_queue = WV: la.SS (14.0/2.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (3.0)
|   |   |   can_do_leftarc = false: ra.IQ (18.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: ra.IQ (0.0)
|   |   second_pos_stack = EN: ra.IQ (0.0)
|   |   second_pos_stack = AV: ra.IQ (0.0)
|   |   second_pos_stack = AJ: ra.IQ (0.0)
|   |   second_pos_stack = IK: ra.IQ (0.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: ra.IQ (0.0)
|   |   second_pos_stack = VV: re (3.0)
|   |   second_pos_stack = AB: ra.IQ (0.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: re (8.0)
|   |   second_pos_stack = RO: ra.IQ (0.0)
|   |   second_pos_stack = ID: ra.IQ (0.0)
|   |   second_pos_stack = PN: ra.IQ (0.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (0.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: ra.IQ (0.0)
|   |   second_pos_stack = QV: ra.IQ (0.0)
|   |   second_pos_stack = WV: ra.IQ (0.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: ra.IQ (0.0)
|   |   second_pos_stack = HV: ra.IQ (0.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: ra.IQ (0.0)
|   |   second_pos_stack = MV: ra.IQ (0.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: ra.IQ (0.0)
|   |   second_pos_stack = KV: ra.IQ (0.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: ra.IQ (0.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: ra.IQ (0.0)
|   first_pos_queue = SV
|   |   can_do_leftarc = true: la.SS (4.0)
|   |   can_do_leftarc = false: re (5.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.SS (55.0)
|   |   can_do_leftarc = false: re (39.0/3.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.JR (9.0)
|   |   second_pos_stack = ++: ra.IR (4.0/2.0)
|   |   second_pos_stack = NN: re (7.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: ra.IR (2.0/1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.IR (2.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (7.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (6.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IG: sh (1.0)
|   first_pos_queue = AN: la.DT (2.0)
|   first_pos_queue = MV: re (5.0/1.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.SS (2.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = KV: re (3.0/1.0)
|   first_pos_queue = GV
|   |   can_do_leftarc = true: la.SS (5.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (6.0/1.0)
|   |   second_pos_stack = ++: la.SS (1.0)
|   |   second_pos_stack = NN: la.SS (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.SS (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (1.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: la.SS (2.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (11.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (3.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: sh (5.0)
|   first_pos_queue = SP: sh (2.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (9.0)
|   first_pos_queue = IS: re (12.0/1.0)
|   first_pos_queue = IT: re (23.0/11.0)
|   first_pos_queue = IU: re (2.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = IC
|   can_do_leftarc = true
|   |   first_pos_queue = nil: la.IC (0.0)
|   |   first_pos_queue = ROOT: la.IC (0.0)
|   |   first_pos_queue = ++: sh (4.0)
|   |   first_pos_queue = NN
|   |   |   second_pos_stack = nil: la.IC (0.0)
|   |   |   second_pos_stack = ROOT: sh (79.0/11.0)
|   |   |   second_pos_stack = ++: la.IC (11.0/1.0)
|   |   |   second_pos_stack = NN: la.IC (18.0/5.0)
|   |   |   second_pos_stack = EN: la.IC (22.0)
|   |   |   second_pos_stack = AV: la.IC (5.0)
|   |   |   second_pos_stack = AJ: la.IC (26.0/12.0)
|   |   |   second_pos_stack = IK: la.IC (7.0/3.0)
|   |   |   second_pos_stack = IP: la.IC (0.0)
|   |   |   second_pos_stack = PO: la.IC (34.0/3.0)
|   |   |   second_pos_stack = VV: la.IC (11.0/3.0)
|   |   |   second_pos_stack = AB: la.IC (1.0)
|   |   |   second_pos_stack = TP: la.JC (5.0/2.0)
|   |   |   second_pos_stack = PR: la.IC (63.0/8.0)
|   |   |   second_pos_stack = RO: sh (1.0)
|   |   |   second_pos_stack = ID: la.IC (8.0/3.0)
|   |   |   second_pos_stack = PN: la.IC (0.0)
|   |   |   second_pos_stack = IC: sh (1.0)
|   |   |   second_pos_stack = MN: la.IC (0.0)
|   |   |   second_pos_stack = UK: sh (33.0/9.0)
|   |   |   second_pos_stack = VN: la.IC (0.0)
|   |   |   second_pos_stack = QV: la.IC (0.0)
|   |   |   second_pos_stack = WV: la.IC (0.0)
|   |   |   second_pos_stack = IQ: sh (12.0/3.0)
|   |   |   second_pos_stack = SV: la.IC (0.0)
|   |   |   second_pos_stack = HV: la.IC (2.0)
|   |   |   second_pos_stack = IR: la.IC (1.0)
|   |   |   second_pos_stack = IG: la.IC (0.0)
|   |   |   second_pos_stack = AN: la.IC (1.0)
|   |   |   second_pos_stack = MV: la.IC (0.0)
|   |   |   second_pos_stack = IM: la.IC (0.0)
|   |   |   second_pos_stack = BV: la.IC (1.0)
|   |   |   second_pos_stack = KV: la.IC (0.0)
|   |   |   second_pos_stack = GV: la.IC (0.0)
|   |   |   second_pos_stack = FV: la.IC (1.0)
|   |   |   second_pos_stack = PU: la.IC (0.0)
|   |   |   second_pos_stack = SP: la.IC (0.0)
|   |   |   second_pos_stack = XX: la.IC (1.0)
|   |   |   second_pos_stack = I?: la.IC (0.0)
|   |   |   second_pos_stack = IS: sh (1.0)
|   |   |   second_pos_stack = IT: la.IC (0.0)
|   |   |   second_pos_stack = IU: la.IC (0.0)
|   |   |   second_pos_stack = YY: la.IC (0.0)
|   |   first_pos_queue = EN: sh (23.0)
|   |   first_pos_queue = AV: la.IC (108.0/7.0)
|   |   first_pos_queue = AJ
|   |   |   second_pos_stack = nil: sh (0.0)
|   |   |   second_pos_stack = ROOT: sh (4.0)
|   |   |   second_pos_stack = ++: la.IC (5.0/1.0)
|   |   |   second_pos_stack = NN: sh (4.0/1.0)
|   |   |   second_pos_stack = EN: sh (12.0/1.0)
|   |   |   second_pos_stack = AV: la.IC (4.0)
|   |   |   second_pos_stack = AJ: la.IC (6.0/3.0)
|   |   |   second_pos_stack = IK: la.IC (2.0)
|   |   |   second_pos_stack = IP: sh (0.0)
|   |   |   second_pos_stack = PO: sh (24.0/10.0)
|   |   |   second_pos_stack = VV: sh (1.0)
|   |   |   second_pos_stack = AB: la.IC (6.0)
|   |   |   second_pos_stack = TP: sh (0.0)
|   |   |   second_pos_stack = PR: sh (7.0)
|   |   |   second_pos_stack = RO: la.IC (2.0/1.0)
|   |   |   second_pos_stack = ID: sh (0.0)
|   |   |   second_pos_stack = PN: sh (0.0)
|   |   |   second_pos_stack = IC: sh (0.0)
|   |   |   second_pos_stack = MN: sh (0.0)
|   |   |   second_pos_stack = UK: la.IC (7.0/2.0)
|   |   |   second_pos_stack = VN: sh (0.0)
|   |   |   second_pos_stack = QV: sh (0.0)
|   |   |   second_pos_stack = WV: sh (0.0)
|   |   |   second_pos_stack = IQ: sh (0.0)
|   |   |   second_pos_stack = SV: sh (0.0)
|   |   |   second_pos_stack = HV: sh (1.0)
|   |   |   second_pos_stack = IR: sh (0.0)
|   |   |   second_pos_stack = IG: sh (0.0)
|   |   |   second_pos_stack = AN: sh (0.0)
|   |   |   second_pos_stack = MV: sh (0.0)
|   |   |   second_pos_stack = IM: sh (0.0)
|   |   |   second_pos_stack = BV: sh (0.0)
|   |   |   second_pos_stack = KV: sh (0.0)
|   |   |   second_pos_stack = GV: sh (0.0)
|   |   |   second_pos_stack = FV: sh (1.0)
|   |   |   second_pos_stack = PU: sh (0.0)
|   |   |   second_pos_stack = SP: sh (0.0)
|   |   |   second_pos_stack = XX: sh (0.0)
|   |   |   second_pos_stack = I?: sh (0.0)
|   |   |   second_pos_stack = IS: sh (0.0)
|   |   |   second_pos_stack = IT: sh (0.0)
|   |   |   second_pos_stack = IU: sh (0.0)
|   |   |   second_pos_stack = YY: sh (0.0)
|   |   first_pos_queue = IK: sh (1.0)
|   |   first_pos_queue = IP: la.IC (0.0)
|   |   first_pos_queue = PO: sh (96.0/9.0)
|   |   first_pos_queue = VV: la.IC (149.0/10.0)
|   |   first_pos_queue = AB: sh (19.0/1.0)
|   |   first_pos_queue = TP: sh (10.0/2.0)
|   |   first_pos_queue = PR: sh (18.0/9.0)
|   |   first_pos_queue = RO: sh (2.0)
|   |   first_pos_queue = ID: la.IC (0.0)
|   |   first_pos_queue = PN: la.IC (7.0/4.0)
|   |   first_pos_queue = IC: la.IC (0.0)
|   |   first_pos_queue = MN: la.IC (140.0/3.0)
|   |   first_pos_queue = UK: sh (7.0)
|   |   first_pos_queue = VN: la.IC (28.0/10.0)
|   |   first_pos_queue = QV
|   |   |   second_pos_stack = nil: la.IC (0.0)
|   |   |   second_pos_stack = ROOT: la.IC (5.0)
|   |   |   second_pos_stack = ++: la.IC (0.0)
|   |   |   second_pos_stack = NN: la.JC (2.0)
|   |   |   second_pos_stack = EN: la.IC (0.0)
|   |   |   second_pos_stack = AV: la.IC (0.0)
|   |   |   second_pos_stack = AJ: la.IC (0.0)
|   |   |   second_pos_stack = IK: la.IC (0.0)
|   |   |   second_pos_stack = IP: la.IC (0.0)
|   |   |   second_pos_stack = PO: la.IC (0.0)
|   |   |   second_pos_stack = VV: la.IC (0.0)
|   |   |   second_pos_stack = AB: la.IC (0.0)
|   |   |   second_pos_stack = TP: la.IC (0.0)
|   |   |   second_pos_stack = PR: la.IC (0.0)
|   |   |   second_pos_stack = RO: la.IC (0.0)
|   |   |   second_pos_stack = ID: la.JC (1.0)
|   |   |   second_pos_stack = PN: la.IC (0.0)
|   |   |   second_pos_stack = IC: la.IC (0.0)
|   |   |   second_pos_stack = MN: la.IC (0.0)
|   |   |   second_pos_stack = UK: la.IC (3.0)
|   |   |   second_pos_stack = VN: la.IC (0.0)
|   |   |   second_pos_stack = QV: la.IC (0.0)
|   |   |   second_pos_stack = WV: la.IC (0.0)
|   |   |   second_pos_stack = IQ: la.IC (0.0)
|   |   |   second_pos_stack = SV: la.IC (0.0)
|   |   |   second_pos_stack = HV: la.IC (0.0)
|   |   |   second_pos_stack = IR: la.IC (0.0)
|   |   |   second_pos_stack = IG: la.IC (0.0)
|   |   |   second_pos_stack = AN: la.IC (0.0)
|   |   |   second_pos_stack = MV: la.IC (0.0)
|   |   |   second_pos_stack = IM: sh (1.0)
|   |   |   second_pos_stack = BV: la.IC (0.0)
|   |   |   second_pos_stack = KV: la.IC (0.0)
|   |   |   second_pos_stack = GV: la.IC (0.0)
|   |   |   second_pos_stack = FV: la.IC (0.0)
|   |   |   second_pos_stack = PU: la.IC (0.0)
|   |   |   second_pos_stack = SP: la.IC (0.0)
|   |   |   second_pos_stack = XX: la.IC (0.0)
|   |   |   second_pos_stack = I?: la.IC (0.0)
|   |   |   second_pos_stack = IS: la.IC (0.0)
|   |   |   second_pos_stack = IT: la.IC (0.0)
|   |   |   second_pos_stack = IU: la.IC (0.0)
|   |   |   second_pos_stack = YY: la.IC (0.0)
|   |   first_pos_queue = WV: la.IC (2.0)
|   |   first_pos_queue = IQ: la.IC (0.0)
|   |   first_pos_queue = SV: la.IC (19.0)
|   |   first_pos_queue = HV: la.IC (20.0/3.0)
|   |   first_pos_queue = IR: la.IC (0.0)
|   |   first_pos_queue = IG: sh (6.0)
|   |   first_pos_queue = AN
|   |   |   second_pos_stack = nil: la.IC (0.0)
|   |   |   second_pos_stack = ROOT: sh (7.0)
|   |   |   second_pos_stack = ++: la.IC (0.0)
|   |   |   second_pos_stack = NN: la.IC (0.0)
|   |   |   second_pos_stack = EN: la.IC (1.0)
|   |   |   second_pos_stack = AV: la.IC (0.0)
|   |   |   second_pos_stack = AJ: la.IC (0.0)
|   |   |   second_pos_stack = IK: la.IC (2.0)
|   |   |   second_pos_stack = IP: la.IC (0.0)
|   |   |   second_pos_stack = PO: la.IC (3.0)
|   |   |   second_pos_stack = VV: la.IC (0.0)
|   |   |   second_pos_stack = AB: la.IC (0.0)
|   |   |   second_pos_stack = TP: la.IC (0.0)
|   |   |   second_pos_stack = PR: la.IC (2.0)
|   |   |   second_pos_stack = RO: la.IC (0.0)
|   |   |   second_pos_stack = ID: la.IC (0.0)
|   |   |   second_pos_stack = PN: la.IC (0.0)
|   |   |   second_pos_stack = IC: la.IC (0.0)
|   |   |   second_pos_stack = MN: la.IC (0.0)
|   |   |   second_pos_stack = UK: la.IC (0.0)
|   |   |   second_pos_stack = VN: la.IC (0.0)
|   |   |   second_pos_stack = QV: la.IC (0.0)
|   |   |   second_pos_stack = WV: la.IC (0.0)
|   |   |   second_pos_stack = IQ: la.IC (0.0)
|   |   |   second_pos_stack = SV: la.IC (0.0)
|   |   |   second_pos_stack = HV: la.IC (0.0)
|   |   |   second_pos_stack = IR: la.IC (0.0)
|   |   |   second_pos_stack = IG: la.IC (0.0)
|   |   |   second_pos_stack = AN: la.IC (0.0)
|   |   |   second_pos_stack = MV: la.IC (0.0)
|   |   |   second_pos_stack = IM: la.IC (0.0)
|   |   |   second_pos_stack = BV: la.IC (0.0)
|   |   |   second_pos_stack = KV: la.IC (0.0)
|   |   |   second_pos_stack = GV: la.IC (0.0)
|   |   |   second_pos_stack = FV: la.IC (0.0)
|   |   |   second_pos_stack = PU: la.IC (0.0)
|   |   |   second_pos_stack = SP: la.IC (0.0)
|   |   |   second_pos_stack = XX: la.IC (0.0)
|   |   |   second_pos_stack = I?: la.IC (0.0)
|   |   |   second_pos_stack = IS: la.IC (0.0)
|   |   |   second_pos_stack = IT: la.IC (0.0)
|   |   |   second_pos_stack = IU: la.IC (0.0)
|   |   |   second_pos_stack = YY: la.IC (0.0)
|   |   first_pos_queue = MV: la.IC (2.0)
|   |   first_pos_queue = IM: sh (6.0)
|   |   first_pos_queue = BV: la.IC (2.0)
|   |   first_pos_queue = KV: la.IC (0.0)
|   |   first_pos_queue = GV: la.IC (0.0)
|   |   first_pos_queue = FV: la.IC (1.0)
|   |   first_pos_queue = PU: la.IC (0.0)
|   |   first_pos_queue = SP: la.IC (1.0)
|   |   first_pos_queue = XX: la.IC (0.0)
|   |   first_pos_queue = I?: la.IC (0.0)
|   |   first_pos_queue = IS: la.IC (0.0)
|   |   first_pos_queue = IT: la.IC (0.0)
|   |   first_pos_queue = IU: la.IC (0.0)
|   |   first_pos_queue = YY: la.IC (3.0)
|   can_do_leftarc = false
|   |   first_pos_queue = nil: re (117.0)
|   |   first_pos_queue = ROOT: re (0.0)
|   |   first_pos_queue = ++: sh (58.0/2.0)
|   |   first_pos_queue = NN: re (71.0/3.0)
|   |   first_pos_queue = EN: sh (13.0)
|   |   first_pos_queue = AV: re (34.0)
|   |   first_pos_queue = AJ: re (23.0/3.0)
|   |   first_pos_queue = IK: re (111.0/27.0)
|   |   first_pos_queue = IP: re (185.0/1.0)
|   |   first_pos_queue = PO: sh (25.0/10.0)
|   |   first_pos_queue = VV: re (129.0)
|   |   first_pos_queue = AB: sh (31.0/12.0)
|   |   first_pos_queue = TP: re (6.0/2.0)
|   |   first_pos_queue = PR: re (82.0/2.0)
|   |   first_pos_queue = RO: re (6.0/2.0)
|   |   first_pos_queue = ID: re (0.0)
|   |   first_pos_queue = PN: re (4.0/2.0)
|   |   first_pos_queue = IC: re (2.0/1.0)
|   |   first_pos_queue = MN: re (8.0)
|   |   first_pos_queue = UK: sh (20.0)
|   |   first_pos_queue = VN: re (6.0/1.0)
|   |   first_pos_queue = QV: re (9.0/2.0)
|   |   first_pos_queue = WV: re (1.0)
|   |   first_pos_queue = IQ: re (4.0/1.0)
|   |   first_pos_queue = SV: re (6.0)
|   |   first_pos_queue = HV: re (7.0)
|   |   first_pos_queue = IR: re (12.0/2.0)
|   |   first_pos_queue = IG: re (6.0/1.0)
|   |   first_pos_queue = AN: re (3.0)
|   |   first_pos_queue = MV: re (3.0)
|   |   first_pos_queue = IM: sh (5.0)
|   |   first_pos_queue = BV: re (2.0)
|   |   first_pos_queue = KV: re (1.0)
|   |   first_pos_queue = GV: re (4.0)
|   |   first_pos_queue = FV: re (8.0)
|   |   first_pos_queue = PU: sh (1.0)
|   |   first_pos_queue = SP: re (0.0)
|   |   first_pos_queue = XX: re (0.0)
|   |   first_pos_queue = I?: re (5.0)
|   |   first_pos_queue = IS: re (0.0)
|   |   first_pos_queue = IT: re (4.0/1.0)
|   |   first_pos_queue = IU: re (2.0)
|   |   first_pos_queue = YY: re (0.0)
top_pos_stack = MN
|   first_pos_queue = nil: re (24.0)
|   first_pos_queue = ROOT: ra.HD (0.0)
|   first_pos_queue = ++: sh (25.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: la.SS (3.0/1.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (0.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (0.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: sh (12.0)
|   |   second_pos_stack = AB: sh (0.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: re (7.0/1.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: re (1.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = EN: ra.HD (0.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (8.0/1.0)
|   |   second_pos_stack = ++: la.SS (1.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (12.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (6.0/1.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AJ: la.SS (4.0/1.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (6.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (3.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (25.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: sh (4.0/1.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (93.0/1.0)
|   first_pos_queue = PO: ra.HD (0.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (8.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (6.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.RA (1.0)
|   |   second_pos_stack = VV: re (4.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (58.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (4.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.SS (2.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB: re (7.0/3.0)
|   first_pos_queue = TP
|   |   can_do_leftarc = true: la.SS (2.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = PR: re (26.0/6.0)
|   first_pos_queue = RO: re (27.0/15.0)
|   first_pos_queue = ID: ra.HD (406.0/3.0)
|   first_pos_queue = PN: ra.AN (2.0/1.0)
|   first_pos_queue = IC: ra.JC (19.0/7.0)
|   first_pos_queue = MN: ra.CC (35.0/8.0)
|   first_pos_queue = UK: ra.HD (0.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.DT (3.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = QV: re (7.0/1.0)
|   first_pos_queue = WV: la.SS (1.0)
|   first_pos_queue = IQ: re (5.0)
|   first_pos_queue = SV
|   |   can_do_leftarc = true: la.SS (2.0)
|   |   can_do_leftarc = false: re (7.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.SS (3.0)
|   |   can_do_leftarc = false: re (8.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.IR (2.0)
|   |   |   can_do_leftarc = false: ra.JR (4.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.IR (7.0/4.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (8.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (5.0/2.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IG: sh (2.0)
|   first_pos_queue = AN: ra.HD (0.0)
|   first_pos_queue = MV: la.SS (1.0)
|   first_pos_queue = IM: ra.HD (0.0)
|   first_pos_queue = BV: re (2.0)
|   first_pos_queue = KV: ra.HD (0.0)
|   first_pos_queue = GV: la.SS (1.0)
|   first_pos_queue = FV
|   |   can_do_leftarc = true: la.SS (2.0)
|   |   can_do_leftarc = false: re (4.0)
|   first_pos_queue = PU: ra.HD (0.0)
|   first_pos_queue = SP: ra.HD (0.0)
|   first_pos_queue = XX: ra.HD (0.0)
|   first_pos_queue = I?: re (3.0)
|   first_pos_queue = IS: re (7.0)
|   first_pos_queue = IT: ra.HD (0.0)
|   first_pos_queue = IU: ra.HD (0.0)
|   first_pos_queue = YY: ra.HD (0.0)
top_pos_stack = UK
|   first_pos_queue = nil: re (3.0)
|   first_pos_queue = ROOT: la.UK (0.0)
|   first_pos_queue = ++: la.UK (0.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (127.0/14.0)
|   |   second_pos_stack = ++: sh (41.0/8.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.UK (278.0/82.0)
|   |   |   can_do_leftarc = false: ra.SS (5.0/3.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (47.0/3.0)
|   |   second_pos_stack = AJ: sh (119.0/47.0)
|   |   second_pos_stack = IK: sh (253.0/22.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (109.0/39.0)
|   |   second_pos_stack = VV: sh (390.0/92.0)
|   |   second_pos_stack = AB: sh (177.0/46.0)
|   |   second_pos_stack = TP: la.UK (14.0/7.0)
|   |   second_pos_stack = PR: sh (187.0/7.0)
|   |   second_pos_stack = RO: la.UK (3.0/1.0)
|   |   second_pos_stack = ID: sh (40.0/5.0)
|   |   second_pos_stack = PN: la.UK (6.0/2.0)
|   |   second_pos_stack = IC: sh (8.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (23.0/2.0)
|   |   second_pos_stack = VN: sh (42.0/18.0)
|   |   second_pos_stack = QV: la.UK (1.0)
|   |   second_pos_stack = WV: sh (6.0)
|   |   second_pos_stack = IQ: sh (2.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: la.UK (4.0)
|   |   second_pos_stack = IR: sh (1.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: la.UK (18.0/2.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: la.UK (2.0/1.0)
|   |   second_pos_stack = BV: sh (7.0/2.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (7.0)
|   |   second_pos_stack = FV: la.UK (1.0)
|   |   second_pos_stack = PU: sh (1.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (1.0)
|   |   second_pos_stack = IT: sh (4.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = EN: sh (275.0/2.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.UK (679.0/3.0)
|   |   can_do_leftarc = false: re (15.0)
|   first_pos_queue = AJ
|   |   second_pos_stack = nil: la.UK (0.0)
|   |   second_pos_stack = ROOT: la.UK (4.0/1.0)
|   |   second_pos_stack = ++: la.UK (1.0)
|   |   second_pos_stack = NN: la.UK (46.0/19.0)
|   |   second_pos_stack = EN: la.UK (0.0)
|   |   second_pos_stack = AV: sh (8.0/2.0)
|   |   second_pos_stack = AJ: la.UK (34.0/9.0)
|   |   second_pos_stack = IK: sh (20.0/5.0)
|   |   second_pos_stack = IP: la.UK (0.0)
|   |   second_pos_stack = PO: la.UK (19.0/7.0)
|   |   second_pos_stack = VV: la.UK (55.0/21.0)
|   |   second_pos_stack = AB
|   |   |   can_do_leftarc = true: la.UK (28.0/13.0)
|   |   |   can_do_leftarc = false: re (4.0/1.0)
|   |   second_pos_stack = TP: la.UK (2.0/1.0)
|   |   second_pos_stack = PR: sh (6.0/1.0)
|   |   second_pos_stack = RO: sh (1.0)
|   |   second_pos_stack = ID: la.UK (2.0/1.0)
|   |   second_pos_stack = PN: sh (1.0)
|   |   second_pos_stack = IC: sh (2.0)
|   |   second_pos_stack = MN: la.UK (0.0)
|   |   second_pos_stack = UK: sh (2.0)
|   |   second_pos_stack = VN: la.UK (11.0/4.0)
|   |   second_pos_stack = QV: la.UK (0.0)
|   |   second_pos_stack = WV: la.UK (0.0)
|   |   second_pos_stack = IQ: la.UK (0.0)
|   |   second_pos_stack = SV: la.UK (0.0)
|   |   second_pos_stack = HV: la.UK (0.0)
|   |   second_pos_stack = IR: la.UK (1.0)
|   |   second_pos_stack = IG: la.UK (0.0)
|   |   second_pos_stack = AN: la.UK (2.0/1.0)
|   |   second_pos_stack = MV: la.UK (0.0)
|   |   second_pos_stack = IM: la.UK (0.0)
|   |   second_pos_stack = BV: la.UK (0.0)
|   |   second_pos_stack = KV: la.UK (0.0)
|   |   second_pos_stack = GV: sh (3.0/1.0)
|   |   second_pos_stack = FV: la.UK (0.0)
|   |   second_pos_stack = PU: la.UK (0.0)
|   |   second_pos_stack = SP: la.UK (0.0)
|   |   second_pos_stack = XX: la.UK (0.0)
|   |   second_pos_stack = I?: la.UK (0.0)
|   |   second_pos_stack = IS: la.UK (0.0)
|   |   second_pos_stack = IT: la.UK (0.0)
|   |   second_pos_stack = IU: la.UK (0.0)
|   |   second_pos_stack = YY: la.UK (0.0)
|   first_pos_queue = IK: sh (10.0/2.0)
|   first_pos_queue = IP: re (3.0)
|   first_pos_queue = PO: sh (1740.0/60.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.UK (1542.0/24.0)
|   |   can_do_leftarc = false: re (21.0/3.0)
|   first_pos_queue = AB: sh (228.0/67.0)
|   first_pos_queue = TP: la.UK (14.0/6.0)
|   first_pos_queue = PR: la.UK (97.0/31.0)
|   first_pos_queue = RO: sh (57.0/4.0)
|   first_pos_queue = ID: ra.HD (355.0)
|   first_pos_queue = PN: sh (108.0/25.0)
|   first_pos_queue = IC: sh (59.0/1.0)
|   first_pos_queue = MN: sh (2.0)
|   first_pos_queue = UK: sh (56.0/4.0)
|   first_pos_queue = VN: sh (203.0/49.0)
|   first_pos_queue = QV
|   |   can_do_leftarc = true: la.UK (185.0/1.0)
|   |   can_do_leftarc = false: re (4.0)
|   first_pos_queue = WV: la.UK (63.0)
|   first_pos_queue = IQ: sh (9.0/1.0)
|   first_pos_queue = SV
|   |   can_do_leftarc = true: la.UK (362.0/2.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.UK (223.0/4.0)
|   |   can_do_leftarc = false: re (6.0)
|   first_pos_queue = IR: sh (1.0)
|   first_pos_queue = IG: la.UK (0.0)
|   first_pos_queue = AN
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: sh (3.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: la.UK (12.0/3.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (0.0)
|   |   second_pos_stack = AJ: la.UK (2.0)
|   |   second_pos_stack = IK: sh (8.0/2.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: la.UK (1.0)
|   |   second_pos_stack = VV: la.UK (7.0/3.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (7.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (1.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (3.0/1.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = MV: la.UK (47.0/1.0)
|   first_pos_queue = IM: sh (19.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.UK (121.0/2.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = KV: la.UK (29.0)
|   first_pos_queue = GV: la.UK (43.0)
|   first_pos_queue = FV: la.UK (101.0/1.0)
|   first_pos_queue = PU: sh (1.0)
|   first_pos_queue = SP: sh (4.0/1.0)
|   first_pos_queue = XX: la.UK (0.0)
|   first_pos_queue = I?: la.UK (0.0)
|   first_pos_queue = IS: sh (1.0)
|   first_pos_queue = IT: la.UK (0.0)
|   first_pos_queue = IU: la.UK (0.0)
|   first_pos_queue = YY: la.UK (0.0)
top_pos_stack = VN
|   first_pos_queue = nil: re (115.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (350.0/3.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.DT (64.0/31.0)
|   |   can_do_leftarc = false: ra.CC (293.0/134.0)
|   first_pos_queue = EN: sh (14.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (90.0/19.0)
|   |   second_pos_stack = ++: la.SS (11.0/1.0)
|   |   second_pos_stack = NN: re (14.0/1.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: ra.ET (4.0/2.0)
|   |   second_pos_stack = AJ: la.SS (2.0/1.0)
|   |   second_pos_stack = IK: la.SS (4.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SP (1.0)
|   |   second_pos_stack = VV: re (12.0/3.0)
|   |   second_pos_stack = AB: la.SS (8.0/1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (92.0/10.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (6.0/1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (2.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (35.0/2.0)
|   |   second_pos_stack = VN: re (10.0/1.0)
|   |   second_pos_stack = QV: re (3.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (1.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (8.0/1.0)
|   |   second_pos_stack = IR: la.SS (1.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: ra.ET (2.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = AJ
|   |   can_do_leftarc = true: sh (13.0/5.0)
|   |   can_do_leftarc = false: re (59.0/15.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (31.0/8.0)
|   |   second_pos_stack = ++: ra.IK (2.0)
|   |   second_pos_stack = NN: sh (42.0/20.0)
|   |   second_pos_stack = EN: re (2.0)
|   |   second_pos_stack = AV: re (31.0/12.0)
|   |   second_pos_stack = AJ: ra.IK (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (3.0/1.0)
|   |   second_pos_stack = VV: re (80.0/32.0)
|   |   second_pos_stack = AB: ra.IK (2.0)
|   |   second_pos_stack = TP: re (2.0/1.0)
|   |   second_pos_stack = PR: re (200.0/91.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (11.0/6.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.IK (8.0)
|   |   second_pos_stack = VN: sh (26.0/13.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.IK (2.0/1.0)
|   |   second_pos_stack = HV: re (16.0/5.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (3.0/1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (2.0/1.0)
|   |   second_pos_stack = FV: ra.IK (10.0/5.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: ra.IK (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (27.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (108.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (80.0)
|   |   second_pos_stack = AJ: re (5.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (3.0)
|   |   second_pos_stack = VV: re (302.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (2.0)
|   |   second_pos_stack = PR: re (629.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (32.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: re (59.0/1.0)
|   |   second_pos_stack = QV: re (2.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (55.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (16.0/1.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (13.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (7.0)
|   |   second_pos_stack = FV: re (33.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = PO: sh (157.0/14.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (208.0/15.0)
|   |   |   can_do_leftarc = false: ra.ET (10.0/3.0)
|   |   second_pos_stack = ++: la.SS (16.0/2.0)
|   |   second_pos_stack = NN: re (40.0/8.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.ET (23.0/13.0)
|   |   second_pos_stack = AJ: re (4.0)
|   |   second_pos_stack = IK: la.SS (9.0/3.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: la.SS (6.0)
|   |   |   can_do_leftarc = false: re (6.0)
|   |   second_pos_stack = VV: re (79.0/35.0)
|   |   second_pos_stack = AB: la.SS (20.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (285.0/57.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID
|   |   |   can_do_leftarc = true: la.SS (14.0/1.0)
|   |   |   can_do_leftarc = false: re (13.0/5.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: la.SS (5.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (67.0/1.0)
|   |   second_pos_stack = VN: re (35.0/8.0)
|   |   second_pos_stack = QV: re (15.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (9.0)
|   |   second_pos_stack = HV: re (33.0/11.0)
|   |   second_pos_stack = IR: la.OO (1.0)
|   |   second_pos_stack = IG: la.SS (1.0)
|   |   second_pos_stack = AN: re (6.0/2.0)
|   |   second_pos_stack = MV: re (4.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (3.0/1.0)
|   |   second_pos_stack = KV: re (5.0)
|   |   second_pos_stack = GV: re (5.0/2.0)
|   |   second_pos_stack = FV: ra.ET (9.0/3.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: la.SS (1.0)
|   |   second_pos_stack = IT: la.SS (3.0/1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.ET (10.0/6.0)
|   |   second_pos_stack = ++: sh (3.0/1.0)
|   |   second_pos_stack = NN: sh (8.0/3.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (14.0/4.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (3.0/1.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: re (47.0/16.0)
|   |   second_pos_stack = AB: sh (5.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: re (78.0/42.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (10.0/3.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (19.0/1.0)
|   |   second_pos_stack = VN: re (10.0/5.0)
|   |   second_pos_stack = QV: re (3.0/1.0)
|   |   second_pos_stack = WV: ra.ET (1.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (0.0)
|   |   second_pos_stack = HV: re (3.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: re (3.0/1.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (3.0/1.0)
|   |   second_pos_stack = FV: re (4.0/1.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: ra.ET (1.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.PT (5.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.PT (4.0)
|   |   second_pos_stack = AB: ra.PT (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (18.0/7.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT: ra.ET (175.0/7.0)
|   |   second_pos_stack = ++: ra.ET (17.0/4.0)
|   |   second_pos_stack = NN: ra.ET (59.0/16.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: ra.ET (69.0/24.0)
|   |   second_pos_stack = AJ: ra.ET (0.0)
|   |   second_pos_stack = IK: ra.ET (3.0/1.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO
|   |   |   can_do_leftarc = true: sh (2.0)
|   |   |   can_do_leftarc = false: ra.ET (4.0/2.0)
|   |   second_pos_stack = VV: re (368.0/182.0)
|   |   second_pos_stack = AB: ra.ET (7.0/1.0)
|   |   second_pos_stack = TP: re (3.0/1.0)
|   |   second_pos_stack = PR: ra.ET (465.0/113.0)
|   |   second_pos_stack = RO: ra.ET (1.0)
|   |   second_pos_stack = ID: ra.ET (36.0/3.0)
|   |   second_pos_stack = PN: ra.ET (0.0)
|   |   second_pos_stack = IC: ra.ET (4.0)
|   |   second_pos_stack = MN: ra.ET (0.0)
|   |   second_pos_stack = UK: ra.ET (36.0/2.0)
|   |   second_pos_stack = VN: ra.ET (58.0/17.0)
|   |   second_pos_stack = QV: ra.ET (3.0/1.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (1.0)
|   |   second_pos_stack = SV: ra.AA (1.0)
|   |   second_pos_stack = HV: re (63.0/23.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (0.0)
|   |   second_pos_stack = AN: ra.ET (12.0/3.0)
|   |   second_pos_stack = MV: ra.ET (3.0)
|   |   second_pos_stack = IM: ra.ET (0.0)
|   |   second_pos_stack = BV: ra.ET (17.0/8.0)
|   |   second_pos_stack = KV: ra.ET (1.0)
|   |   second_pos_stack = GV: re (6.0/2.0)
|   |   second_pos_stack = FV: re (34.0/7.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (0.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (0.0)
|   |   second_pos_stack = IT: ra.ET (1.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: ra.ET (2.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.ET (3.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (0.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (3.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: sh (5.0/1.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: ra.ET (4.0/1.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: ra.TA (1.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (2.0)
|   |   second_pos_stack = FV: ra.ET (1.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = ID: la.PA (3.0/1.0)
|   first_pos_queue = PN
|   |   can_do_leftarc = true: la.DT (2.0/1.0)
|   |   can_do_leftarc = false: sh (5.0/3.0)
|   first_pos_queue = IC
|   |   can_do_leftarc = true: sh (8.0)
|   |   can_do_leftarc = false: re (41.0/20.0)
|   first_pos_queue = MN
|   |   second_pos_stack = nil: la.DT (0.0)
|   |   second_pos_stack = ROOT: ra.AN (2.0/1.0)
|   |   second_pos_stack = ++: ra.AN (1.0)
|   |   second_pos_stack = NN: la.DT (0.0)
|   |   second_pos_stack = EN: la.DT (0.0)
|   |   second_pos_stack = AV: la.DT (0.0)
|   |   second_pos_stack = AJ: la.DT (0.0)
|   |   second_pos_stack = IK: la.DT (0.0)
|   |   second_pos_stack = IP: la.DT (0.0)
|   |   second_pos_stack = PO: la.DT (0.0)
|   |   second_pos_stack = VV: la.DT (0.0)
|   |   second_pos_stack = AB: la.DT (0.0)
|   |   second_pos_stack = TP: la.DT (0.0)
|   |   second_pos_stack = PR: la.DT (7.0)
|   |   second_pos_stack = RO: la.DT (0.0)
|   |   second_pos_stack = ID: la.DT (0.0)
|   |   second_pos_stack = PN: la.DT (0.0)
|   |   second_pos_stack = IC: la.DT (0.0)
|   |   second_pos_stack = MN: la.DT (0.0)
|   |   second_pos_stack = UK: la.DT (0.0)
|   |   second_pos_stack = VN: la.DT (0.0)
|   |   second_pos_stack = QV: la.DT (0.0)
|   |   second_pos_stack = WV: la.DT (0.0)
|   |   second_pos_stack = IQ: la.DT (0.0)
|   |   second_pos_stack = SV: la.DT (0.0)
|   |   second_pos_stack = HV: la.DT (0.0)
|   |   second_pos_stack = IR: la.DT (0.0)
|   |   second_pos_stack = IG: la.DT (0.0)
|   |   second_pos_stack = AN: la.DT (0.0)
|   |   second_pos_stack = MV: la.DT (0.0)
|   |   second_pos_stack = IM: la.DT (0.0)
|   |   second_pos_stack = BV: la.DT (0.0)
|   |   second_pos_stack = KV: la.DT (0.0)
|   |   second_pos_stack = GV: la.DT (0.0)
|   |   second_pos_stack = FV: la.DT (0.0)
|   |   second_pos_stack = PU: la.DT (0.0)
|   |   second_pos_stack = SP: la.DT (0.0)
|   |   second_pos_stack = XX: la.DT (0.0)
|   |   second_pos_stack = I?: la.DT (0.0)
|   |   second_pos_stack = IS: la.DT (0.0)
|   |   second_pos_stack = IT: la.DT (0.0)
|   |   second_pos_stack = IU: la.DT (0.0)
|   |   second_pos_stack = YY: la.DT (0.0)
|   first_pos_queue = UK: sh (96.0/1.0)
|   first_pos_queue = VN: ra.CC (206.0/57.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (23.0/3.0)
|   |   second_pos_stack = ++: la.SS (3.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.SS (2.0)
|   |   |   can_do_leftarc = false: re (6.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.ET (2.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.SS (3.0/1.0)
|   |   second_pos_stack = VV: ra.ET (7.0/3.0)
|   |   second_pos_stack = AB: la.SS (3.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (43.0/5.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: la.SS (3.0/1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (12.0/1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: ra.ET (3.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: ra.ET (2.0/1.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: la.SS (1.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: re (12.0/5.0)
|   first_pos_queue = IQ: re (35.0/10.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (16.0/4.0)
|   |   second_pos_stack = ++: la.SS (4.0/1.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (0.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (2.0/1.0)
|   |   second_pos_stack = VV: ra.ET (8.0/5.0)
|   |   second_pos_stack = AB: la.SS (8.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (22.0/8.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (7.0/1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (1.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (14.0)
|   |   second_pos_stack = VN: re (4.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: ra.ET (2.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.SS (78.0/7.0)
|   |   can_do_leftarc = false: re (86.0/14.0)
|   first_pos_queue = IR: re (61.0/31.0)
|   first_pos_queue = IG: re (7.0/1.0)
|   first_pos_queue = AN
|   |   can_do_leftarc = true: la.DT (12.0/5.0)
|   |   can_do_leftarc = false: ra.CC (21.0/5.0)
|   first_pos_queue = MV
|   |   can_do_leftarc = true: la.SS (21.0)
|   |   can_do_leftarc = false: re (14.0/4.0)
|   first_pos_queue = IM: sh (35.0/1.0)
|   first_pos_queue = BV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (11.0/3.0)
|   |   second_pos_stack = ++: la.SS (4.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: la.SS (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (3.0)
|   |   second_pos_stack = AB: la.SS (4.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (16.0/1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (9.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: ra.ET (4.0/2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = KV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (9.0)
|   |   second_pos_stack = ++: la.SS (1.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: la.SS (0.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (0.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (0.0)
|   |   second_pos_stack = VV: ra.ET (2.0/1.0)
|   |   second_pos_stack = AB: la.SS (3.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (4.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (0.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (0.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (2.0)
|   |   second_pos_stack = VN: la.SS (0.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (1.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT: la.SS (9.0/3.0)
|   |   second_pos_stack = ++: ra.ET (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.ET (0.0)
|   |   second_pos_stack = AV: ra.EF (2.0/1.0)
|   |   second_pos_stack = AJ: ra.ET (0.0)
|   |   second_pos_stack = IK: ra.ET (0.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO: ra.ET (0.0)
|   |   second_pos_stack = VV: ra.ET (2.0/1.0)
|   |   second_pos_stack = AB: la.SS (2.0)
|   |   second_pos_stack = TP: ra.ET (0.0)
|   |   second_pos_stack = PR: ra.ET (10.0/3.0)
|   |   second_pos_stack = RO: ra.ET (0.0)
|   |   second_pos_stack = ID: ra.ET (1.0)
|   |   second_pos_stack = PN: ra.ET (0.0)
|   |   second_pos_stack = IC: ra.ET (0.0)
|   |   second_pos_stack = MN: ra.ET (0.0)
|   |   second_pos_stack = UK: la.SS (2.0)
|   |   second_pos_stack = VN: ra.ET (0.0)
|   |   second_pos_stack = QV: ra.ET (0.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   second_pos_stack = SV: ra.ET (0.0)
|   |   second_pos_stack = HV: ra.ET (1.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (0.0)
|   |   second_pos_stack = AN: ra.ET (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: ra.ET (0.0)
|   |   second_pos_stack = BV: ra.ET (0.0)
|   |   second_pos_stack = KV: ra.ET (0.0)
|   |   second_pos_stack = GV: ra.ET (0.0)
|   |   second_pos_stack = FV: ra.ET (0.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (0.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (0.0)
|   |   second_pos_stack = IT: ra.ET (0.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: ra.ET (0.0)
|   first_pos_queue = FV: re (24.0/8.0)
|   first_pos_queue = PU: sh (4.0/2.0)
|   first_pos_queue = SP: ra.PT (4.0/2.0)
|   first_pos_queue = XX: sh (4.0)
|   first_pos_queue = I?: re (60.0/5.0)
|   first_pos_queue = IS: re (6.0)
|   first_pos_queue = IT: re (35.0/17.0)
|   first_pos_queue = IU: ra.IU (4.0/2.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = QV
|   first_pos_queue = nil: re (688.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (3.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: ra.SS (0.0)
|   |   second_pos_stack = ROOT: ra.SS (75.0/13.0)
|   |   second_pos_stack = ++: ra.SS (0.0)
|   |   second_pos_stack = NN: ra.OO (5.0/2.0)
|   |   second_pos_stack = EN: ra.SS (0.0)
|   |   second_pos_stack = AV: ra.SS (0.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: ra.SS (0.0)
|   |   second_pos_stack = IP: ra.SS (0.0)
|   |   second_pos_stack = PO: ra.SS (0.0)
|   |   second_pos_stack = VV: ra.SS (8.0/2.0)
|   |   second_pos_stack = AB: ra.SS (0.0)
|   |   second_pos_stack = TP: ra.SS (0.0)
|   |   second_pos_stack = PR: ra.SS (0.0)
|   |   second_pos_stack = RO: ra.SS (0.0)
|   |   second_pos_stack = ID: ra.SS (0.0)
|   |   second_pos_stack = PN: ra.SS (0.0)
|   |   second_pos_stack = IC: ra.SS (0.0)
|   |   second_pos_stack = MN: ra.SS (0.0)
|   |   second_pos_stack = UK: ra.SS (0.0)
|   |   second_pos_stack = VN: ra.SS (0.0)
|   |   second_pos_stack = QV: ra.CC (2.0/1.0)
|   |   second_pos_stack = WV: ra.CC (1.0)
|   |   second_pos_stack = IQ: ra.SS (0.0)
|   |   second_pos_stack = SV: ra.SS (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.SS (0.0)
|   |   second_pos_stack = IG: ra.SS (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.SS (0.0)
|   |   second_pos_stack = IM: ra.SS (0.0)
|   |   second_pos_stack = BV: ra.SS (0.0)
|   |   second_pos_stack = KV: ra.SS (0.0)
|   |   second_pos_stack = GV: ra.SS (0.0)
|   |   second_pos_stack = FV: ra.SS (0.0)
|   |   second_pos_stack = PU: ra.SS (0.0)
|   |   second_pos_stack = SP: ra.SS (0.0)
|   |   second_pos_stack = XX: ra.SS (0.0)
|   |   second_pos_stack = I?: ra.SS (0.0)
|   |   second_pos_stack = IS: ra.SS (0.0)
|   |   second_pos_stack = IT: ra.SS (1.0)
|   |   second_pos_stack = IU: ra.SS (0.0)
|   |   second_pos_stack = YY: ra.SS (0.0)
|   first_pos_queue = EN: sh (10.0/1.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.SS (9.0/4.0)
|   |   can_do_leftarc = false: ra.VG (125.0/40.0)
|   first_pos_queue = AJ: ra.AA (25.0/10.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (50.0/2.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: re (6.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (6.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (9.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: ra.IK (0.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: re (1.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: ra.IK (0.0)
|   |   second_pos_stack = WV: ra.IK (1.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (0.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: ra.IK (0.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: ra.IK (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: ra.IP (0.0)
|   |   second_pos_stack = ROOT: ra.IP (584.0)
|   |   second_pos_stack = ++: ra.IP (0.0)
|   |   second_pos_stack = NN: re (74.0/1.0)
|   |   second_pos_stack = EN: ra.IP (0.0)
|   |   second_pos_stack = AV: re (39.0/4.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: ra.IP (0.0)
|   |   second_pos_stack = IP: ra.IP (0.0)
|   |   second_pos_stack = PO: re (10.0)
|   |   second_pos_stack = VV: re (146.0/5.0)
|   |   second_pos_stack = AB: re (5.0/1.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (16.0)
|   |   second_pos_stack = RO: ra.IP (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.IP (0.0)
|   |   second_pos_stack = IC: re (1.0)
|   |   second_pos_stack = MN: ra.IP (0.0)
|   |   second_pos_stack = UK: ra.IP (0.0)
|   |   second_pos_stack = VN: re (13.0)
|   |   second_pos_stack = QV: re (16.0/2.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: ra.IP (0.0)
|   |   second_pos_stack = SV: ra.IP (4.0/2.0)
|   |   second_pos_stack = HV: re (13.0)
|   |   second_pos_stack = IR: ra.IP (0.0)
|   |   second_pos_stack = IG: ra.IP (0.0)
|   |   second_pos_stack = AN: re (6.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: ra.IP (0.0)
|   |   second_pos_stack = BV: re (6.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: ra.IP (2.0/1.0)
|   |   second_pos_stack = FV: re (7.0)
|   |   second_pos_stack = PU: re (1.0)
|   |   second_pos_stack = SP: ra.IP (0.0)
|   |   second_pos_stack = XX: ra.IP (0.0)
|   |   second_pos_stack = I?: ra.IP (0.0)
|   |   second_pos_stack = IS: re (1.0)
|   |   second_pos_stack = IT: ra.IP (0.0)
|   |   second_pos_stack = IU: ra.IP (0.0)
|   |   second_pos_stack = YY: ra.IP (0.0)
|   first_pos_queue = PO: ra.SS (204.0/41.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.IV (167.0/25.0)
|   |   can_do_leftarc = false: ra.VG (998.0/104.0)
|   first_pos_queue = AB: ra.NA (371.0/256.0)
|   first_pos_queue = TP: ra.AA (4.0/3.0)
|   first_pos_queue = PR: ra.AA (61.0/33.0)
|   first_pos_queue = RO: sh (2.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.SS (6.0/1.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: ra.IC (0.0)
|   |   second_pos_stack = ROOT: ra.IC (3.0/1.0)
|   |   second_pos_stack = ++: ra.IC (0.0)
|   |   second_pos_stack = NN: re (2.0/1.0)
|   |   second_pos_stack = EN: ra.IC (0.0)
|   |   second_pos_stack = AV: ra.IC (0.0)
|   |   second_pos_stack = AJ: ra.IC (0.0)
|   |   second_pos_stack = IK: ra.IC (0.0)
|   |   second_pos_stack = IP: ra.IC (0.0)
|   |   second_pos_stack = PO: ra.IC (0.0)
|   |   second_pos_stack = VV: ra.IC (0.0)
|   |   second_pos_stack = AB: ra.IC (0.0)
|   |   second_pos_stack = TP: ra.IC (0.0)
|   |   second_pos_stack = PR: ra.IC (1.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: ra.IC (0.0)
|   |   second_pos_stack = PN: ra.IC (0.0)
|   |   second_pos_stack = IC: ra.IC (0.0)
|   |   second_pos_stack = MN: ra.IC (0.0)
|   |   second_pos_stack = UK: ra.IC (0.0)
|   |   second_pos_stack = VN: ra.IC (0.0)
|   |   second_pos_stack = QV: ra.IC (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.IC (0.0)
|   |   second_pos_stack = SV: ra.IC (0.0)
|   |   second_pos_stack = HV: ra.IC (0.0)
|   |   second_pos_stack = IR: ra.IC (0.0)
|   |   second_pos_stack = IG: ra.IC (0.0)
|   |   second_pos_stack = AN: ra.IC (0.0)
|   |   second_pos_stack = MV: ra.IC (0.0)
|   |   second_pos_stack = IM: ra.IC (0.0)
|   |   second_pos_stack = BV: ra.IC (0.0)
|   |   second_pos_stack = KV: ra.IC (0.0)
|   |   second_pos_stack = GV: ra.IC (0.0)
|   |   second_pos_stack = FV: ra.IC (0.0)
|   |   second_pos_stack = PU: ra.IC (0.0)
|   |   second_pos_stack = SP: ra.IC (0.0)
|   |   second_pos_stack = XX: ra.IC (0.0)
|   |   second_pos_stack = I?: ra.IC (0.0)
|   |   second_pos_stack = IS: ra.IC (0.0)
|   |   second_pos_stack = IT: ra.IC (0.0)
|   |   second_pos_stack = IU: ra.IC (0.0)
|   |   second_pos_stack = YY: ra.IC (0.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (5.0/1.0)
|   first_pos_queue = VN: ra.SS (23.0/2.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.MS (14.0/6.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (6.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.CC (2.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: ra.CC (2.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: ra.AA (2.0/1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: ra.MS (5.0/2.0)
|   first_pos_queue = IQ: ra.IQ (5.0)
|   first_pos_queue = SV: ra.MS (5.0/3.0)
|   first_pos_queue = HV
|   |   can_do_leftarc = true: la.IV (10.0/3.0)
|   |   can_do_leftarc = false: ra.VG (32.0/10.0)
|   first_pos_queue = IR: ra.IR (3.0/2.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: ra.SS (2.0)
|   first_pos_queue = MV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT: ra.MS (2.0)
|   |   second_pos_stack = ++: ra.MS (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: ra.MS (0.0)
|   |   second_pos_stack = VV: ra.+F (2.0/1.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.MS (0.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.MS (0.0)
|   |   second_pos_stack = QV: ra.MS (0.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.MS (0.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: ra.VG (41.0/9.0)
|   first_pos_queue = KV: ra.+F (3.0/2.0)
|   first_pos_queue = GV
|   |   can_do_leftarc = true: la.IV (4.0)
|   |   can_do_leftarc = false: ra.VG (25.0)
|   first_pos_queue = FV: ra.VG (91.0/23.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (26.0/1.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: ra.I? (0.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: ra.I? (0.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: ra.I? (0.0)
|   |   second_pos_stack = VV: re (3.0/1.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: ra.I? (0.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: ra.I? (0.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: ra.I? (0.0)
|   |   second_pos_stack = FV: ra.I? (0.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (0.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS: ra.IS (2.0)
|   first_pos_queue = IT: ra.IT (8.0/3.0)
|   first_pos_queue = IU: re (9.0/3.0)
|   first_pos_queue = YY: ra.MS (1.0)
top_pos_stack = WV
|   first_pos_queue = nil: re (102.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (8.0)
|   first_pos_queue = NN: ra.SS (12.0/5.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.VG (7.0/2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.CC (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (7.0)
|   |   second_pos_stack = VV: ra.+F (2.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: ra.VG (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.VG (1.0)
|   |   second_pos_stack = HV: ra.VG (2.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AJ: ra.AA (3.0/1.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IK (9.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (4.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (2.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (81.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (14.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (14.0/1.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: re (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (10.0)
|   |   second_pos_stack = VV: re (32.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (4.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: ra.IP (1.0)
|   |   second_pos_stack = WV: re (5.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (3.0)
|   |   second_pos_stack = HV: re (3.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (2.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: ra.IP (1.0)
|   first_pos_queue = PO: ra.SS (39.0/8.0)
|   first_pos_queue = VV: ra.VG (205.0/60.0)
|   first_pos_queue = AB: ra.NA (38.0/29.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: ra.AA (0.0)
|   |   second_pos_stack = ROOT: ra.AA (6.0/3.0)
|   |   second_pos_stack = ++: ra.AA (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.AA (0.0)
|   |   second_pos_stack = AV: ra.AA (1.0)
|   |   second_pos_stack = AJ: ra.AA (0.0)
|   |   second_pos_stack = IK: ra.AA (0.0)
|   |   second_pos_stack = IP: ra.AA (0.0)
|   |   second_pos_stack = PO: ra.AA (0.0)
|   |   second_pos_stack = VV: re (4.0/1.0)
|   |   second_pos_stack = AB: ra.AA (0.0)
|   |   second_pos_stack = TP: ra.AA (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.AA (0.0)
|   |   second_pos_stack = ID: ra.AA (0.0)
|   |   second_pos_stack = PN: ra.AA (0.0)
|   |   second_pos_stack = IC: ra.AA (0.0)
|   |   second_pos_stack = MN: ra.AA (0.0)
|   |   second_pos_stack = UK: ra.AA (0.0)
|   |   second_pos_stack = VN: ra.AA (0.0)
|   |   second_pos_stack = QV: ra.AA (0.0)
|   |   second_pos_stack = WV: ra.AA (0.0)
|   |   second_pos_stack = IQ: ra.AA (0.0)
|   |   second_pos_stack = SV: ra.RA (1.0)
|   |   second_pos_stack = HV: ra.AA (0.0)
|   |   second_pos_stack = IR: ra.AA (0.0)
|   |   second_pos_stack = IG: ra.AA (0.0)
|   |   second_pos_stack = AN: ra.AA (0.0)
|   |   second_pos_stack = MV: ra.AA (0.0)
|   |   second_pos_stack = IM: ra.AA (0.0)
|   |   second_pos_stack = BV: ra.AA (0.0)
|   |   second_pos_stack = KV: ra.AA (0.0)
|   |   second_pos_stack = GV: ra.AA (0.0)
|   |   second_pos_stack = FV: ra.AA (0.0)
|   |   second_pos_stack = PU: ra.AA (0.0)
|   |   second_pos_stack = SP: ra.AA (0.0)
|   |   second_pos_stack = XX: ra.AA (0.0)
|   |   second_pos_stack = I?: ra.AA (0.0)
|   |   second_pos_stack = IS: ra.AA (0.0)
|   |   second_pos_stack = IT: ra.AA (0.0)
|   |   second_pos_stack = IU: ra.AA (0.0)
|   |   second_pos_stack = YY: ra.AA (0.0)
|   first_pos_queue = RO: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.SS (1.0)
|   first_pos_queue = IC: ra.IC (3.0/2.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (7.0)
|   first_pos_queue = VN: ra.+F (1.0)
|   first_pos_queue = QV
|   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   can_do_leftarc = false: ra.+F (7.0/4.0)
|   first_pos_queue = WV: ra.+F (8.0/5.0)
|   first_pos_queue = IQ: re (1.0)
|   first_pos_queue = SV: ra.OO (14.0/5.0)
|   first_pos_queue = HV: ra.VG (69.0/10.0)
|   first_pos_queue = IR: re (0.0)
|   first_pos_queue = IG: ra.IG (2.0/1.0)
|   first_pos_queue = AN: re (0.0)
|   first_pos_queue = MV: re (4.0/2.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: ra.VG (6.0/1.0)
|   first_pos_queue = KV: re (0.0)
|   first_pos_queue = GV: ra.VG (11.0/3.0)
|   first_pos_queue = FV: ra.VG (3.0/1.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: ra.I? (9.0/3.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (1.0)
|   first_pos_queue = IU: re (1.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = IQ
|   first_pos_queue = nil: re (249.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: re (0.0)
|   first_pos_queue = NN
|   |   can_do_leftarc = true: la.IQ (11.0/2.0)
|   |   can_do_leftarc = false: re (45.0/9.0)
|   first_pos_queue = EN: sh (2.0)
|   first_pos_queue = AV: re (10.0)
|   first_pos_queue = AJ: sh (8.0/2.0)
|   first_pos_queue = IK: re (1.0)
|   first_pos_queue = IP: re (0.0)
|   first_pos_queue = PO: sh (17.0/2.0)
|   first_pos_queue = VV: re (22.0/6.0)
|   first_pos_queue = AB
|   |   can_do_leftarc = true: la.IQ (3.0/1.0)
|   |   can_do_leftarc = false: sh (7.0)
|   first_pos_queue = TP: sh (1.0)
|   first_pos_queue = PR: re (7.0/2.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (2.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: sh (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (1.0)
|   |   second_pos_stack = VV: sh (1.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (8.0/1.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN
|   |   second_pos_stack = nil: la.IQ (0.0)
|   |   second_pos_stack = ROOT: la.IQ (0.0)
|   |   second_pos_stack = ++: la.IQ (0.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: la.IQ (0.0)
|   |   second_pos_stack = AV: la.IQ (0.0)
|   |   second_pos_stack = AJ: la.IQ (0.0)
|   |   second_pos_stack = IK: la.IQ (0.0)
|   |   second_pos_stack = IP: la.IQ (0.0)
|   |   second_pos_stack = PO: la.IQ (0.0)
|   |   second_pos_stack = VV: la.IQ (0.0)
|   |   second_pos_stack = AB: la.IQ (0.0)
|   |   second_pos_stack = TP: la.IQ (0.0)
|   |   second_pos_stack = PR: la.IQ (1.0)
|   |   second_pos_stack = RO: la.IQ (0.0)
|   |   second_pos_stack = ID: la.IQ (0.0)
|   |   second_pos_stack = PN: la.IQ (3.0)
|   |   second_pos_stack = IC: la.IQ (0.0)
|   |   second_pos_stack = MN: la.IQ (0.0)
|   |   second_pos_stack = UK: la.IQ (0.0)
|   |   second_pos_stack = VN: la.IQ (0.0)
|   |   second_pos_stack = QV: la.IQ (0.0)
|   |   second_pos_stack = WV: la.IQ (0.0)
|   |   second_pos_stack = IQ: la.IQ (0.0)
|   |   second_pos_stack = SV: la.IQ (0.0)
|   |   second_pos_stack = HV: la.IQ (0.0)
|   |   second_pos_stack = IR: la.IQ (0.0)
|   |   second_pos_stack = IG: la.IQ (0.0)
|   |   second_pos_stack = AN: la.IQ (0.0)
|   |   second_pos_stack = MV: la.IQ (0.0)
|   |   second_pos_stack = IM: la.IQ (0.0)
|   |   second_pos_stack = BV: la.IQ (0.0)
|   |   second_pos_stack = KV: la.IQ (0.0)
|   |   second_pos_stack = GV: la.IQ (0.0)
|   |   second_pos_stack = FV: la.IQ (0.0)
|   |   second_pos_stack = PU: la.IQ (0.0)
|   |   second_pos_stack = SP: la.IQ (0.0)
|   |   second_pos_stack = XX: la.IQ (0.0)
|   |   second_pos_stack = I?: la.IQ (0.0)
|   |   second_pos_stack = IS: la.IQ (0.0)
|   |   second_pos_stack = IT: la.IQ (0.0)
|   |   second_pos_stack = IU: la.IQ (0.0)
|   |   second_pos_stack = YY: la.IQ (0.0)
|   first_pos_queue = IC: sh (22.0/5.0)
|   first_pos_queue = MN
|   |   can_do_leftarc = true: la.IQ (4.0)
|   |   can_do_leftarc = false: re (6.0)
|   first_pos_queue = UK: sh (6.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.IQ (4.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   first_pos_queue = QV: re (1.0)
|   first_pos_queue = WV: re (0.0)
|   first_pos_queue = IQ: re (0.0)
|   first_pos_queue = SV: re (6.0/1.0)
|   first_pos_queue = HV: re (6.0/1.0)
|   first_pos_queue = IR: re (0.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: re (2.0)
|   first_pos_queue = MV: re (0.0)
|   first_pos_queue = IM: sh (5.0)
|   first_pos_queue = BV: re (0.0)
|   first_pos_queue = KV: re (0.0)
|   first_pos_queue = GV: re (1.0)
|   first_pos_queue = FV: re (1.0)
|   first_pos_queue = PU: sh (7.0/1.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (0.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (0.0)
|   first_pos_queue = IU: re (0.0)
|   first_pos_queue = YY: la.IQ (1.0)
top_pos_stack = SV
|   first_pos_queue = nil: re (453.0)
|   first_pos_queue = ROOT: ra.VG (0.0)
|   first_pos_queue = ++: ra.MS (1.0)
|   first_pos_queue = NN: ra.SS (75.0/11.0)
|   first_pos_queue = EN: sh (7.0)
|   first_pos_queue = AV: ra.VG (180.0/46.0)
|   first_pos_queue = AJ: ra.AA (17.0/11.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (60.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: re (8.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (4.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (15.0/2.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: ra.IK (0.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: ra.IK (1.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (0.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (340.0/2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (49.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (60.0/2.0)
|   |   second_pos_stack = AJ: re (3.0/1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (10.0)
|   |   second_pos_stack = VV: re (178.0/7.0)
|   |   second_pos_stack = AB: re (7.0/1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (40.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (11.0)
|   |   second_pos_stack = QV: ra.IP (2.0/1.0)
|   |   second_pos_stack = WV: re (7.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (25.0/3.0)
|   |   second_pos_stack = HV: re (9.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (4.0)
|   |   second_pos_stack = MV: re (2.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (7.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (2.0)
|   |   second_pos_stack = FV: re (9.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (3.0)
|   first_pos_queue = PO: ra.SS (184.0/37.0)
|   first_pos_queue = VV: ra.VG (886.0/145.0)
|   first_pos_queue = AB: ra.NA (238.0/151.0)
|   first_pos_queue = TP: ra.+F (1.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: ra.AA (0.0)
|   |   second_pos_stack = ROOT: ra.MA (24.0/16.0)
|   |   second_pos_stack = ++: ra.AA (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.AA (0.0)
|   |   second_pos_stack = AV: ra.AA (3.0)
|   |   second_pos_stack = AJ: ra.AA (0.0)
|   |   second_pos_stack = IK: ra.AA (0.0)
|   |   second_pos_stack = IP: ra.AA (0.0)
|   |   second_pos_stack = PO: ra.AA (0.0)
|   |   second_pos_stack = VV: ra.MA (3.0/2.0)
|   |   second_pos_stack = AB: ra.AA (0.0)
|   |   second_pos_stack = TP: ra.AA (0.0)
|   |   second_pos_stack = PR: ra.+F (1.0)
|   |   second_pos_stack = RO: ra.AA (0.0)
|   |   second_pos_stack = ID: ra.AA (0.0)
|   |   second_pos_stack = PN: ra.AA (0.0)
|   |   second_pos_stack = IC: ra.AA (0.0)
|   |   second_pos_stack = MN: ra.AA (0.0)
|   |   second_pos_stack = UK: ra.AA (0.0)
|   |   second_pos_stack = VN: ra.AA (0.0)
|   |   second_pos_stack = QV: ra.AA (0.0)
|   |   second_pos_stack = WV: ra.AA (0.0)
|   |   second_pos_stack = IQ: ra.AA (0.0)
|   |   second_pos_stack = SV: ra.+F (2.0/1.0)
|   |   second_pos_stack = HV: ra.RA (1.0)
|   |   second_pos_stack = IR: ra.AA (0.0)
|   |   second_pos_stack = IG: ra.AA (0.0)
|   |   second_pos_stack = AN: ra.AA (0.0)
|   |   second_pos_stack = MV: ra.AA (0.0)
|   |   second_pos_stack = IM: ra.AA (0.0)
|   |   second_pos_stack = BV: ra.AA (0.0)
|   |   second_pos_stack = KV: ra.AA (0.0)
|   |   second_pos_stack = GV: ra.AA (0.0)
|   |   second_pos_stack = FV: ra.AA (2.0/1.0)
|   |   second_pos_stack = PU: ra.AA (0.0)
|   |   second_pos_stack = SP: ra.AA (0.0)
|   |   second_pos_stack = XX: ra.AA (0.0)
|   |   second_pos_stack = I?: ra.AA (0.0)
|   |   second_pos_stack = IS: ra.AA (0.0)
|   |   second_pos_stack = IT: ra.AA (0.0)
|   |   second_pos_stack = IU: ra.AA (0.0)
|   |   second_pos_stack = YY: ra.AA (0.0)
|   first_pos_queue = RO: ra.SS (2.0/1.0)
|   first_pos_queue = ID: ra.VG (0.0)
|   first_pos_queue = PN: ra.SS (3.0/1.0)
|   first_pos_queue = IC
|   |   second_pos_stack = nil: ra.IC (0.0)
|   |   second_pos_stack = ROOT: ra.JC (1.0)
|   |   second_pos_stack = ++: ra.IC (0.0)
|   |   second_pos_stack = NN: ra.IC (1.0)
|   |   second_pos_stack = EN: ra.IC (0.0)
|   |   second_pos_stack = AV: ra.IC (0.0)
|   |   second_pos_stack = AJ: ra.IC (0.0)
|   |   second_pos_stack = IK: ra.IC (0.0)
|   |   second_pos_stack = IP: ra.IC (0.0)
|   |   second_pos_stack = PO: ra.IC (0.0)
|   |   second_pos_stack = VV: ra.IC (6.0/2.0)
|   |   second_pos_stack = AB: ra.IC (0.0)
|   |   second_pos_stack = TP: ra.IC (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IC (0.0)
|   |   second_pos_stack = ID: ra.IC (0.0)
|   |   second_pos_stack = PN: ra.IC (0.0)
|   |   second_pos_stack = IC: ra.IC (0.0)
|   |   second_pos_stack = MN: ra.IC (0.0)
|   |   second_pos_stack = UK: ra.IC (0.0)
|   |   second_pos_stack = VN: ra.IC (2.0/1.0)
|   |   second_pos_stack = QV: ra.IC (0.0)
|   |   second_pos_stack = WV: ra.IC (0.0)
|   |   second_pos_stack = IQ: ra.IC (0.0)
|   |   second_pos_stack = SV: re (2.0)
|   |   second_pos_stack = HV: ra.IC (0.0)
|   |   second_pos_stack = IR: ra.IC (0.0)
|   |   second_pos_stack = IG: ra.IC (0.0)
|   |   second_pos_stack = AN: ra.IC (0.0)
|   |   second_pos_stack = MV: ra.IC (0.0)
|   |   second_pos_stack = IM: ra.IC (0.0)
|   |   second_pos_stack = BV: ra.IC (0.0)
|   |   second_pos_stack = KV: ra.IC (0.0)
|   |   second_pos_stack = GV: ra.IC (0.0)
|   |   second_pos_stack = FV: ra.IC (0.0)
|   |   second_pos_stack = PU: ra.IC (0.0)
|   |   second_pos_stack = SP: ra.IC (0.0)
|   |   second_pos_stack = XX: ra.IC (0.0)
|   |   second_pos_stack = I?: ra.IC (0.0)
|   |   second_pos_stack = IS: ra.IC (0.0)
|   |   second_pos_stack = IT: ra.IC (0.0)
|   |   second_pos_stack = IU: ra.IC (0.0)
|   |   second_pos_stack = YY: ra.IC (0.0)
|   first_pos_queue = MN: ra.VG (0.0)
|   first_pos_queue = UK: ra.VG (0.0)
|   first_pos_queue = VN: ra.SS (14.0/4.0)
|   first_pos_queue = QV: sh (57.0/10.0)
|   first_pos_queue = WV: sh (11.0/6.0)
|   first_pos_queue = IQ: ra.IQ (4.0/2.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (7.0/2.0)
|   |   |   can_do_leftarc = false: ra.MS (21.0/1.0)
|   |   second_pos_stack = ++: ra.MS (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.CC (3.0/1.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: ra.MS (0.0)
|   |   second_pos_stack = VV: ra.+F (8.0/5.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.MS (0.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: ra.CC (1.0)
|   |   second_pos_stack = QV: ra.MS (0.0)
|   |   second_pos_stack = WV: ra.+F (1.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.CC (2.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = HV: ra.VG (70.0/15.0)
|   first_pos_queue = IR: ra.MS (2.0/1.0)
|   first_pos_queue = IG: ra.VG (0.0)
|   first_pos_queue = AN: ra.+F (2.0/1.0)
|   first_pos_queue = MV
|   |   can_do_leftarc = true: la.AA (9.0)
|   |   can_do_leftarc = false
|   |   |   second_pos_stack = nil: ra.MS (0.0)
|   |   |   second_pos_stack = ROOT: ra.MS (4.0)
|   |   |   second_pos_stack = ++: ra.MS (0.0)
|   |   |   second_pos_stack = NN: ra.MS (0.0)
|   |   |   second_pos_stack = EN: ra.MS (0.0)
|   |   |   second_pos_stack = AV: re (1.0)
|   |   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   |   second_pos_stack = IK: ra.MS (0.0)
|   |   |   second_pos_stack = IP: ra.MS (0.0)
|   |   |   second_pos_stack = PO: ra.MS (0.0)
|   |   |   second_pos_stack = VV: re (1.0)
|   |   |   second_pos_stack = AB: ra.MS (0.0)
|   |   |   second_pos_stack = TP: ra.MS (0.0)
|   |   |   second_pos_stack = PR: re (2.0)
|   |   |   second_pos_stack = RO: ra.MS (0.0)
|   |   |   second_pos_stack = ID: ra.MS (0.0)
|   |   |   second_pos_stack = PN: ra.MS (0.0)
|   |   |   second_pos_stack = IC: ra.MS (0.0)
|   |   |   second_pos_stack = MN: ra.MS (0.0)
|   |   |   second_pos_stack = UK: ra.MS (0.0)
|   |   |   second_pos_stack = VN: ra.MS (0.0)
|   |   |   second_pos_stack = QV: ra.MS (0.0)
|   |   |   second_pos_stack = WV: ra.MS (0.0)
|   |   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   |   second_pos_stack = SV: ra.MS (0.0)
|   |   |   second_pos_stack = HV: ra.MS (0.0)
|   |   |   second_pos_stack = IR: ra.MS (0.0)
|   |   |   second_pos_stack = IG: ra.MS (0.0)
|   |   |   second_pos_stack = AN: ra.MS (0.0)
|   |   |   second_pos_stack = MV: ra.MS (0.0)
|   |   |   second_pos_stack = IM: ra.MS (0.0)
|   |   |   second_pos_stack = BV: ra.MS (0.0)
|   |   |   second_pos_stack = KV: ra.MS (0.0)
|   |   |   second_pos_stack = GV: ra.MS (0.0)
|   |   |   second_pos_stack = FV: ra.MS (0.0)
|   |   |   second_pos_stack = PU: ra.MS (0.0)
|   |   |   second_pos_stack = SP: ra.MS (0.0)
|   |   |   second_pos_stack = XX: ra.MS (0.0)
|   |   |   second_pos_stack = I?: ra.MS (0.0)
|   |   |   second_pos_stack = IS: ra.MS (0.0)
|   |   |   second_pos_stack = IT: ra.MS (0.0)
|   |   |   second_pos_stack = IU: ra.MS (0.0)
|   |   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = IM: ra.VG (0.0)
|   first_pos_queue = BV: ra.VG (57.0/6.0)
|   first_pos_queue = KV
|   |   second_pos_stack = nil: la.AA (0.0)
|   |   second_pos_stack = ROOT: la.AA (2.0/1.0)
|   |   second_pos_stack = ++: la.AA (0.0)
|   |   second_pos_stack = NN: la.AA (0.0)
|   |   second_pos_stack = EN: la.AA (0.0)
|   |   second_pos_stack = AV: la.AA (0.0)
|   |   second_pos_stack = AJ: la.AA (0.0)
|   |   second_pos_stack = IK: la.AA (0.0)
|   |   second_pos_stack = IP: la.AA (0.0)
|   |   second_pos_stack = PO: la.AA (0.0)
|   |   second_pos_stack = VV: ra.IV (2.0/1.0)
|   |   second_pos_stack = AB: la.AA (0.0)
|   |   second_pos_stack = TP: la.AA (0.0)
|   |   second_pos_stack = PR: la.AA (0.0)
|   |   second_pos_stack = RO: la.AA (0.0)
|   |   second_pos_stack = ID: la.AA (0.0)
|   |   second_pos_stack = PN: la.AA (0.0)
|   |   second_pos_stack = IC: la.AA (0.0)
|   |   second_pos_stack = MN: la.AA (0.0)
|   |   second_pos_stack = UK: la.AA (0.0)
|   |   second_pos_stack = VN: la.AA (0.0)
|   |   second_pos_stack = QV: la.AA (0.0)
|   |   second_pos_stack = WV: la.AA (0.0)
|   |   second_pos_stack = IQ: la.AA (0.0)
|   |   second_pos_stack = SV: la.AA (0.0)
|   |   second_pos_stack = HV: la.AA (0.0)
|   |   second_pos_stack = IR: la.AA (0.0)
|   |   second_pos_stack = IG: la.AA (0.0)
|   |   second_pos_stack = AN: la.AA (0.0)
|   |   second_pos_stack = MV: la.AA (0.0)
|   |   second_pos_stack = IM: la.AA (0.0)
|   |   second_pos_stack = BV: la.AA (0.0)
|   |   second_pos_stack = KV: la.AA (0.0)
|   |   second_pos_stack = GV: la.AA (0.0)
|   |   second_pos_stack = FV: la.AA (0.0)
|   |   second_pos_stack = PU: la.AA (0.0)
|   |   second_pos_stack = SP: la.AA (0.0)
|   |   second_pos_stack = XX: la.AA (0.0)
|   |   second_pos_stack = I?: la.AA (0.0)
|   |   second_pos_stack = IS: la.AA (0.0)
|   |   second_pos_stack = IT: la.AA (0.0)
|   |   second_pos_stack = IU: la.AA (0.0)
|   |   second_pos_stack = YY: la.AA (0.0)
|   first_pos_queue = GV: ra.VG (24.0/1.0)
|   first_pos_queue = FV: ra.VG (44.0/20.0)
|   first_pos_queue = PU: ra.VA (1.0)
|   first_pos_queue = SP: ra.VG (0.0)
|   first_pos_queue = XX: ra.VG (0.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (52.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: ra.I? (0.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: ra.I? (0.0)
|   |   second_pos_stack = VV: re (8.0/1.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: re (3.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: ra.I? (1.0)
|   |   second_pos_stack = WV: ra.I? (1.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: re (2.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: ra.I? (0.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: ra.I? (0.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: ra.I? (0.0)
|   |   second_pos_stack = FV: ra.I? (0.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (0.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS: ra.IS (1.0)
|   first_pos_queue = IT: ra.IT (5.0/2.0)
|   first_pos_queue = IU: ra.IU (5.0/2.0)
|   first_pos_queue = YY: ra.VG (0.0)
top_pos_stack = HV
|   first_pos_queue = nil: re (922.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (5.0)
|   first_pos_queue = NN: ra.OO (703.0/197.0)
|   first_pos_queue = EN: sh (119.0/2.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: ra.VG (0.0)
|   |   second_pos_stack = ROOT: ra.VG (82.0/32.0)
|   |   second_pos_stack = ++: la.RA (1.0)
|   |   second_pos_stack = NN: re (4.0/2.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: ra.TA (3.0/2.0)
|   |   second_pos_stack = AJ: ra.VG (0.0)
|   |   second_pos_stack = IK: ra.VG (0.0)
|   |   second_pos_stack = IP: ra.VG (0.0)
|   |   second_pos_stack = PO: re (8.0)
|   |   second_pos_stack = VV: re (9.0/6.0)
|   |   second_pos_stack = AB: ra.VG (0.0)
|   |   second_pos_stack = TP: ra.VG (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.VG (0.0)
|   |   second_pos_stack = ID: ra.VG (0.0)
|   |   second_pos_stack = PN: ra.VG (0.0)
|   |   second_pos_stack = IC: ra.VG (0.0)
|   |   second_pos_stack = MN: ra.VG (0.0)
|   |   second_pos_stack = UK: ra.VG (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.ES (2.0/1.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: ra.VG (0.0)
|   |   second_pos_stack = SV: re (5.0/2.0)
|   |   second_pos_stack = HV: ra.VG (3.0/1.0)
|   |   second_pos_stack = IR: ra.VG (0.0)
|   |   second_pos_stack = IG: ra.VG (0.0)
|   |   second_pos_stack = AN: ra.VG (0.0)
|   |   second_pos_stack = MV: ra.VG (0.0)
|   |   second_pos_stack = IM: ra.VG (0.0)
|   |   second_pos_stack = BV: ra.VG (0.0)
|   |   second_pos_stack = KV: ra.VG (0.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: ra.VG (0.0)
|   |   second_pos_stack = PU: la.IV (1.0)
|   |   second_pos_stack = SP: ra.VG (0.0)
|   |   second_pos_stack = XX: ra.VG (0.0)
|   |   second_pos_stack = I?: ra.VG (0.0)
|   |   second_pos_stack = IS: ra.VG (0.0)
|   |   second_pos_stack = IT: ra.VG (0.0)
|   |   second_pos_stack = IU: ra.VG (0.0)
|   |   second_pos_stack = YY: ra.VG (0.0)
|   first_pos_queue = AJ: sh (212.0/97.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (91.0/2.0)
|   |   second_pos_stack = ++: ra.IK (1.0)
|   |   second_pos_stack = NN: re (17.0/3.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (14.0/4.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (5.0)
|   |   second_pos_stack = VV: re (25.0/8.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: ra.IK (2.0/1.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.IK (2.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (3.0/1.0)
|   |   second_pos_stack = WV: re (8.0/3.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (9.0/4.0)
|   |   second_pos_stack = HV: re (5.0/1.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (0.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: ra.IK (0.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: ra.IK (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: ra.IP (0.0)
|   |   second_pos_stack = ROOT: ra.IP (792.0)
|   |   second_pos_stack = ++: ra.IP (0.0)
|   |   second_pos_stack = NN: re (70.0)
|   |   second_pos_stack = EN: ra.IP (0.0)
|   |   second_pos_stack = AV: re (63.0/2.0)
|   |   second_pos_stack = AJ: re (3.0/1.0)
|   |   second_pos_stack = IK: ra.IP (0.0)
|   |   second_pos_stack = IP: ra.IP (0.0)
|   |   second_pos_stack = PO: re (15.0)
|   |   second_pos_stack = VV: re (177.0/6.0)
|   |   second_pos_stack = AB: re (8.0/1.0)
|   |   second_pos_stack = TP: ra.IP (0.0)
|   |   second_pos_stack = PR: re (28.0)
|   |   second_pos_stack = RO: ra.IP (0.0)
|   |   second_pos_stack = ID: re (6.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: ra.IP (0.0)
|   |   second_pos_stack = MN: ra.IP (0.0)
|   |   second_pos_stack = UK: ra.IP (0.0)
|   |   second_pos_stack = VN: re (10.0)
|   |   second_pos_stack = QV: re (20.0)
|   |   second_pos_stack = WV: re (30.0)
|   |   second_pos_stack = IQ: ra.IP (0.0)
|   |   second_pos_stack = SV: re (35.0/1.0)
|   |   second_pos_stack = HV: re (51.0/3.0)
|   |   second_pos_stack = IR: ra.IP (0.0)
|   |   second_pos_stack = IG: ra.IP (0.0)
|   |   second_pos_stack = AN: ra.IP (0.0)
|   |   second_pos_stack = MV: re (16.0/1.0)
|   |   second_pos_stack = IM: ra.IP (0.0)
|   |   second_pos_stack = BV: re (7.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: ra.IP (0.0)
|   |   second_pos_stack = FV: re (8.0)
|   |   second_pos_stack = PU: ra.IP (0.0)
|   |   second_pos_stack = SP: ra.IP (0.0)
|   |   second_pos_stack = XX: ra.IP (0.0)
|   |   second_pos_stack = I?: ra.IP (0.0)
|   |   second_pos_stack = IS: ra.IP (0.0)
|   |   second_pos_stack = IT: ra.IP (0.0)
|   |   second_pos_stack = IU: ra.IP (0.0)
|   |   second_pos_stack = YY: re (4.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: ra.SS (0.0)
|   |   second_pos_stack = ROOT: ra.SS (215.0/80.0)
|   |   second_pos_stack = ++: ra.AA (2.0/1.0)
|   |   second_pos_stack = NN: sh (20.0/4.0)
|   |   second_pos_stack = EN: ra.SS (0.0)
|   |   second_pos_stack = AV: sh (21.0/12.0)
|   |   second_pos_stack = AJ: ra.SS (0.0)
|   |   second_pos_stack = IK: ra.SS (1.0)
|   |   second_pos_stack = IP: ra.SS (0.0)
|   |   second_pos_stack = PO: sh (8.0/3.0)
|   |   second_pos_stack = VV: sh (41.0/22.0)
|   |   second_pos_stack = AB: sh (4.0/2.0)
|   |   second_pos_stack = TP: ra.SS (0.0)
|   |   second_pos_stack = PR: sh (6.0/2.0)
|   |   second_pos_stack = RO: ra.SS (0.0)
|   |   second_pos_stack = ID: ra.OO (3.0/1.0)
|   |   second_pos_stack = PN: ra.OO (1.0)
|   |   second_pos_stack = IC: ra.SS (0.0)
|   |   second_pos_stack = MN: ra.SS (0.0)
|   |   second_pos_stack = UK: ra.SS (0.0)
|   |   second_pos_stack = VN: sh (2.0)
|   |   second_pos_stack = QV: sh (6.0/1.0)
|   |   second_pos_stack = WV: sh (17.0/8.0)
|   |   second_pos_stack = IQ: ra.SS (0.0)
|   |   second_pos_stack = SV: sh (15.0/6.0)
|   |   second_pos_stack = HV: ra.SS (6.0/3.0)
|   |   second_pos_stack = IR: ra.SS (0.0)
|   |   second_pos_stack = IG: ra.SS (0.0)
|   |   second_pos_stack = AN: ra.SS (0.0)
|   |   second_pos_stack = MV: sh (6.0)
|   |   second_pos_stack = IM: ra.SS (0.0)
|   |   second_pos_stack = BV: ra.SS (2.0/1.0)
|   |   second_pos_stack = KV: ra.SS (0.0)
|   |   second_pos_stack = GV: sh (1.0)
|   |   second_pos_stack = FV: ra.SS (0.0)
|   |   second_pos_stack = PU: ra.SS (0.0)
|   |   second_pos_stack = SP: ra.SS (0.0)
|   |   second_pos_stack = XX: ra.SS (0.0)
|   |   second_pos_stack = I?: ra.SS (0.0)
|   |   second_pos_stack = IS: ra.SS (0.0)
|   |   second_pos_stack = IT: ra.+F (2.0/1.0)
|   |   second_pos_stack = IU: ra.SS (0.0)
|   |   second_pos_stack = YY: ra.SS (3.0/1.0)
|   first_pos_queue = VV: ra.VG (945.0/284.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: ra.TA (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.NA (4.0/2.0)
|   |   |   can_do_leftarc = false: ra.TA (325.0/244.0)
|   |   second_pos_stack = ++: ra.TA (0.0)
|   |   second_pos_stack = NN: ra.TA (7.0/5.0)
|   |   second_pos_stack = EN: ra.TA (0.0)
|   |   second_pos_stack = AV: sh (14.0/10.0)
|   |   second_pos_stack = AJ: ra.RA (1.0)
|   |   second_pos_stack = IK: ra.TA (0.0)
|   |   second_pos_stack = IP: ra.TA (0.0)
|   |   second_pos_stack = PO: sh (2.0)
|   |   second_pos_stack = VV: ra.AA (38.0/31.0)
|   |   second_pos_stack = AB: ra.KA (3.0/2.0)
|   |   second_pos_stack = TP: ra.TA (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.TA (0.0)
|   |   second_pos_stack = ID: ra.TA (0.0)
|   |   second_pos_stack = PN: ra.TA (0.0)
|   |   second_pos_stack = IC: ra.TA (0.0)
|   |   second_pos_stack = MN: ra.TA (0.0)
|   |   second_pos_stack = UK: ra.NA (1.0)
|   |   second_pos_stack = VN: ra.TA (0.0)
|   |   second_pos_stack = QV: ra.CA (3.0/2.0)
|   |   second_pos_stack = WV: ra.PL (11.0/6.0)
|   |   second_pos_stack = IQ: ra.TA (0.0)
|   |   second_pos_stack = SV: ra.PL (13.0/10.0)
|   |   second_pos_stack = HV: ra.NA (19.0/14.0)
|   |   second_pos_stack = IR: ra.TA (0.0)
|   |   second_pos_stack = IG: ra.TA (0.0)
|   |   second_pos_stack = AN: ra.TA (0.0)
|   |   second_pos_stack = MV: sh (4.0/1.0)
|   |   second_pos_stack = IM: ra.TA (0.0)
|   |   second_pos_stack = BV: ra.TA (0.0)
|   |   second_pos_stack = KV: ra.TA (0.0)
|   |   second_pos_stack = GV: ra.TA (0.0)
|   |   second_pos_stack = FV: sh (3.0/1.0)
|   |   second_pos_stack = PU: ra.TA (0.0)
|   |   second_pos_stack = SP: ra.TA (0.0)
|   |   second_pos_stack = XX: ra.TA (0.0)
|   |   second_pos_stack = I?: ra.TA (0.0)
|   |   second_pos_stack = IS: ra.TA (0.0)
|   |   second_pos_stack = IT: ra.MA (2.0/1.0)
|   |   second_pos_stack = IU: ra.TA (0.0)
|   |   second_pos_stack = YY: ra.NA (2.0/1.0)
|   first_pos_queue = TP
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.VG (5.0/3.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: ra.OO (1.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (0.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: sh (0.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: ra.OO (1.0)
|   |   second_pos_stack = AB: sh (0.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: ra.OO (1.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (0.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (0.0)
|   |   second_pos_stack = WV: sh (2.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (2.0)
|   |   second_pos_stack = HV: sh (0.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: sh (0.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (0.0)
|   |   second_pos_stack = KV: sh (0.0)
|   |   second_pos_stack = GV: sh (0.0)
|   |   second_pos_stack = FV: sh (0.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: sh (0.0)
|   first_pos_queue = PR: ra.OA (365.0/207.0)
|   first_pos_queue = RO: sh (22.0/6.0)
|   first_pos_queue = ID: re (1.0)
|   first_pos_queue = PN: ra.SS (16.0/5.0)
|   first_pos_queue = IC: ra.JC (22.0/11.0)
|   first_pos_queue = MN: ra.OO (5.0/3.0)
|   first_pos_queue = UK: sh (7.0)
|   first_pos_queue = VN: ra.OO (153.0/27.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   |   can_do_leftarc = false: ra.MS (13.0/5.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: sh (5.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (4.0/1.0)
|   |   second_pos_stack = VV: la.IV (6.0/5.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.TA (1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (5.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: ra.OO (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: ra.MS (7.0/5.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (5.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: ra.IQ (0.0)
|   |   second_pos_stack = AV: ra.IQ (0.0)
|   |   second_pos_stack = AJ: ra.IQ (0.0)
|   |   second_pos_stack = IK: ra.IQ (0.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: ra.IQ (0.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: ra.IQ (0.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.IQ (0.0)
|   |   second_pos_stack = ID: ra.IQ (0.0)
|   |   second_pos_stack = PN: ra.IQ (0.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (0.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: ra.IQ (0.0)
|   |   second_pos_stack = QV: ra.IQ (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: ra.IQ (0.0)
|   |   second_pos_stack = HV: ra.IQ (0.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: ra.IQ (0.0)
|   |   second_pos_stack = MV: ra.IQ (2.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: ra.IQ (0.0)
|   |   second_pos_stack = KV: ra.IQ (0.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: ra.IQ (0.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: ra.IQ (0.0)
|   first_pos_queue = SV
|   |   can_do_leftarc = true: la.AA (5.0)
|   |   can_do_leftarc = false: re (21.0/12.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (4.0/2.0)
|   |   |   can_do_leftarc = false: ra.MS (48.0/20.0)
|   |   second_pos_stack = ++: la.RA (1.0)
|   |   second_pos_stack = NN: re (7.0/3.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.+F (4.0/3.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: la.AA (1.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: ra.VG (9.0/4.0)
|   |   second_pos_stack = AB: la.IV (1.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.+F (2.0/1.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.+F (2.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: ra.MS (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.KA (1.0)
|   |   second_pos_stack = HV: re (6.0/2.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: la.IV (1.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = IR: ra.IR (10.0/6.0)
|   first_pos_queue = IG: ra.IG (2.0)
|   first_pos_queue = AN: ra.OO (72.0/3.0)
|   first_pos_queue = MV
|   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   can_do_leftarc = false: re (4.0/1.0)
|   first_pos_queue = IM: sh (9.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.AA (8.0/5.0)
|   |   can_do_leftarc = false: ra.VG (58.0/8.0)
|   first_pos_queue = KV: ra.IV (11.0/3.0)
|   first_pos_queue = GV: ra.VG (28.0/7.0)
|   first_pos_queue = FV: ra.VG (59.0/27.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: ra.OO (4.0/1.0)
|   first_pos_queue = XX: ra.OO (2.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (32.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: ra.I? (2.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: ra.I? (0.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: ra.I? (0.0)
|   |   second_pos_stack = VV: re (2.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: re (3.0)
|   |   second_pos_stack = HV: ra.I? (0.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: ra.I? (0.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: ra.I? (0.0)
|   |   second_pos_stack = FV: ra.I? (0.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (0.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS: ra.IS (4.0/1.0)
|   first_pos_queue = IT
|   |   second_pos_stack = nil: ra.IT (0.0)
|   |   second_pos_stack = ROOT: ra.IT (9.0)
|   |   second_pos_stack = ++: ra.IT (0.0)
|   |   second_pos_stack = NN: re (3.0)
|   |   second_pos_stack = EN: ra.IT (0.0)
|   |   second_pos_stack = AV: ra.IT (0.0)
|   |   second_pos_stack = AJ: ra.IT (0.0)
|   |   second_pos_stack = IK: ra.IT (0.0)
|   |   second_pos_stack = IP: ra.IT (0.0)
|   |   second_pos_stack = PO: ra.IT (0.0)
|   |   second_pos_stack = VV: ra.IT (2.0/1.0)
|   |   second_pos_stack = AB: ra.IT (0.0)
|   |   second_pos_stack = TP: ra.IT (0.0)
|   |   second_pos_stack = PR: ra.IT (0.0)
|   |   second_pos_stack = RO: ra.IT (0.0)
|   |   second_pos_stack = ID: ra.IT (0.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: ra.IT (0.0)
|   |   second_pos_stack = MN: ra.IT (0.0)
|   |   second_pos_stack = UK: ra.IT (0.0)
|   |   second_pos_stack = VN: ra.IT (0.0)
|   |   second_pos_stack = QV: ra.IT (0.0)
|   |   second_pos_stack = WV: ra.IT (0.0)
|   |   second_pos_stack = IQ: ra.IT (0.0)
|   |   second_pos_stack = SV: ra.IT (0.0)
|   |   second_pos_stack = HV: ra.IT (3.0/1.0)
|   |   second_pos_stack = IR: ra.IT (0.0)
|   |   second_pos_stack = IG: ra.IT (0.0)
|   |   second_pos_stack = AN: ra.IT (0.0)
|   |   second_pos_stack = MV: ra.IT (0.0)
|   |   second_pos_stack = IM: ra.IT (0.0)
|   |   second_pos_stack = BV: ra.IT (0.0)
|   |   second_pos_stack = KV: ra.IT (0.0)
|   |   second_pos_stack = GV: ra.IT (0.0)
|   |   second_pos_stack = FV: ra.IT (0.0)
|   |   second_pos_stack = PU: ra.IT (0.0)
|   |   second_pos_stack = SP: ra.IT (0.0)
|   |   second_pos_stack = XX: ra.IT (0.0)
|   |   second_pos_stack = I?: ra.IT (0.0)
|   |   second_pos_stack = IS: ra.IT (0.0)
|   |   second_pos_stack = IT: ra.IT (0.0)
|   |   second_pos_stack = IU: ra.IT (0.0)
|   |   second_pos_stack = YY: ra.IT (0.0)
|   first_pos_queue = IU: ra.IU (9.0/3.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = IR
|   can_do_leftarc = true
|   |   first_pos_queue = nil: la.IR (0.0)
|   |   first_pos_queue = ROOT: la.IR (0.0)
|   |   first_pos_queue = ++: la.IR (0.0)
|   |   first_pos_queue = NN: la.IR (30.0/6.0)
|   |   first_pos_queue = EN: la.IR (0.0)
|   |   first_pos_queue = AV: la.IR (5.0)
|   |   first_pos_queue = AJ: la.IR (10.0/3.0)
|   |   first_pos_queue = IK: la.IR (0.0)
|   |   first_pos_queue = IP: la.IR (0.0)
|   |   first_pos_queue = PO: sh (12.0/2.0)
|   |   first_pos_queue = VV: la.IR (17.0/2.0)
|   |   first_pos_queue = AB: sh (8.0)
|   |   first_pos_queue = TP: la.IR (2.0/1.0)
|   |   first_pos_queue = PR: la.IR (17.0/4.0)
|   |   first_pos_queue = RO: la.IR (3.0/2.0)
|   |   first_pos_queue = ID: la.IR (1.0)
|   |   first_pos_queue = PN: la.IR (19.0/5.0)
|   |   first_pos_queue = IC: sh (2.0)
|   |   first_pos_queue = MN: la.IR (12.0/1.0)
|   |   first_pos_queue = UK: sh (2.0)
|   |   first_pos_queue = VN: sh (3.0/1.0)
|   |   first_pos_queue = QV: la.IR (0.0)
|   |   first_pos_queue = WV: la.IR (0.0)
|   |   first_pos_queue = IQ: la.IR (0.0)
|   |   first_pos_queue = SV: la.IR (1.0)
|   |   first_pos_queue = HV: la.IR (2.0/1.0)
|   |   first_pos_queue = IR: la.IR (0.0)
|   |   first_pos_queue = IG: la.IR (0.0)
|   |   first_pos_queue = AN: la.IR (0.0)
|   |   first_pos_queue = MV: la.IR (0.0)
|   |   first_pos_queue = IM: la.IR (0.0)
|   |   first_pos_queue = BV: la.IR (0.0)
|   |   first_pos_queue = KV: la.IR (1.0)
|   |   first_pos_queue = GV: la.IR (0.0)
|   |   first_pos_queue = FV: la.IR (1.0)
|   |   first_pos_queue = PU: la.IR (0.0)
|   |   first_pos_queue = SP: la.IR (0.0)
|   |   first_pos_queue = XX: sh (1.0)
|   |   first_pos_queue = I?: la.IR (0.0)
|   |   first_pos_queue = IS: la.IR (0.0)
|   |   first_pos_queue = IT: la.IR (0.0)
|   |   first_pos_queue = IU: la.IR (0.0)
|   |   first_pos_queue = YY: la.IR (1.0)
|   can_do_leftarc = false
|   |   first_pos_queue = nil: re (58.0)
|   |   first_pos_queue = ROOT: re (0.0)
|   |   first_pos_queue = ++: sh (20.0)
|   |   first_pos_queue = NN: re (86.0/18.0)
|   |   first_pos_queue = EN: re (2.0/1.0)
|   |   first_pos_queue = AV: re (15.0)
|   |   first_pos_queue = AJ: re (12.0/6.0)
|   |   first_pos_queue = IK: re (18.0/7.0)
|   |   first_pos_queue = IP: re (94.0/1.0)
|   |   first_pos_queue = PO: sh (18.0/4.0)
|   |   first_pos_queue = VV: re (53.0/1.0)
|   |   first_pos_queue = AB: sh (30.0/9.0)
|   |   first_pos_queue = TP: re (6.0)
|   |   first_pos_queue = PR: re (36.0/5.0)
|   |   first_pos_queue = RO
|   |   |   second_pos_stack = nil: re (0.0)
|   |   |   second_pos_stack = ROOT: re (0.0)
|   |   |   second_pos_stack = ++: re (0.0)
|   |   |   second_pos_stack = NN: sh (3.0)
|   |   |   second_pos_stack = EN: re (0.0)
|   |   |   second_pos_stack = AV: re (3.0)
|   |   |   second_pos_stack = AJ: re (0.0)
|   |   |   second_pos_stack = IK: re (0.0)
|   |   |   second_pos_stack = IP: re (0.0)
|   |   |   second_pos_stack = PO: re (0.0)
|   |   |   second_pos_stack = VV: re (11.0/3.0)
|   |   |   second_pos_stack = AB: re (0.0)
|   |   |   second_pos_stack = TP: sh (1.0)
|   |   |   second_pos_stack = PR: re (0.0)
|   |   |   second_pos_stack = RO: re (0.0)
|   |   |   second_pos_stack = ID: re (2.0)
|   |   |   second_pos_stack = PN: re (0.0)
|   |   |   second_pos_stack = IC: re (0.0)
|   |   |   second_pos_stack = MN: re (1.0)
|   |   |   second_pos_stack = UK: re (0.0)
|   |   |   second_pos_stack = VN: sh (3.0)
|   |   |   second_pos_stack = QV: re (0.0)
|   |   |   second_pos_stack = WV: re (0.0)
|   |   |   second_pos_stack = IQ: re (0.0)
|   |   |   second_pos_stack = SV: re (0.0)
|   |   |   second_pos_stack = HV: re (0.0)
|   |   |   second_pos_stack = IR: re (0.0)
|   |   |   second_pos_stack = IG: re (0.0)
|   |   |   second_pos_stack = AN: re (0.0)
|   |   |   second_pos_stack = MV: re (0.0)
|   |   |   second_pos_stack = IM: re (0.0)
|   |   |   second_pos_stack = BV: re (0.0)
|   |   |   second_pos_stack = KV: re (0.0)
|   |   |   second_pos_stack = GV: re (0.0)
|   |   |   second_pos_stack = FV: re (0.0)
|   |   |   second_pos_stack = PU: re (0.0)
|   |   |   second_pos_stack = SP: re (0.0)
|   |   |   second_pos_stack = XX: re (0.0)
|   |   |   second_pos_stack = I?: re (0.0)
|   |   |   second_pos_stack = IS: re (0.0)
|   |   |   second_pos_stack = IT: re (0.0)
|   |   |   second_pos_stack = IU: re (0.0)
|   |   |   second_pos_stack = YY: re (0.0)
|   |   first_pos_queue = ID: re (0.0)
|   |   first_pos_queue = PN: re (22.0/3.0)
|   |   first_pos_queue = IC: re (6.0/3.0)
|   |   first_pos_queue = MN: re (14.0/1.0)
|   |   first_pos_queue = UK: sh (7.0)
|   |   first_pos_queue = VN: re (14.0)
|   |   first_pos_queue = QV: re (4.0)
|   |   first_pos_queue = WV: re (0.0)
|   |   first_pos_queue = IQ: re (0.0)
|   |   first_pos_queue = SV: re (2.0)
|   |   first_pos_queue = HV: re (9.0)
|   |   first_pos_queue = IR: ra.JR (2.0)
|   |   first_pos_queue = IG: sh (3.0/1.0)
|   |   first_pos_queue = AN: re (0.0)
|   |   first_pos_queue = MV: re (1.0)
|   |   first_pos_queue = IM: re (0.0)
|   |   first_pos_queue = BV: re (2.0)
|   |   first_pos_queue = KV: re (1.0)
|   |   first_pos_queue = GV: re (1.0)
|   |   first_pos_queue = FV: re (1.0)
|   |   first_pos_queue = PU: sh (2.0)
|   |   first_pos_queue = SP: re (4.0)
|   |   first_pos_queue = XX: re (0.0)
|   |   first_pos_queue = I?: re (2.0)
|   |   first_pos_queue = IS: re (1.0)
|   |   first_pos_queue = IT: re (0.0)
|   |   first_pos_queue = IU: ra.IU (2.0/1.0)
|   |   first_pos_queue = YY: re (1.0)
top_pos_stack = IG
|   first_pos_queue = nil: re (25.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (3.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: la.IG (0.0)
|   |   second_pos_stack = ROOT: la.IG (0.0)
|   |   second_pos_stack = ++: la.IG (0.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.IG (4.0)
|   |   |   can_do_leftarc = false: re (5.0)
|   |   second_pos_stack = EN: la.IG (0.0)
|   |   second_pos_stack = AV: la.IG (0.0)
|   |   second_pos_stack = AJ: la.IG (1.0)
|   |   second_pos_stack = IK: la.IG (0.0)
|   |   second_pos_stack = IP: la.IG (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: la.IG (0.0)
|   |   second_pos_stack = TP: la.IG (0.0)
|   |   second_pos_stack = PR: la.IG (0.0)
|   |   second_pos_stack = RO: la.IG (12.0)
|   |   second_pos_stack = ID: la.IG (0.0)
|   |   second_pos_stack = PN: la.IG (0.0)
|   |   second_pos_stack = IC: sh (2.0)
|   |   second_pos_stack = MN: la.IG (1.0)
|   |   second_pos_stack = UK: la.IG (0.0)
|   |   second_pos_stack = VN: la.IG (0.0)
|   |   second_pos_stack = QV: la.IG (0.0)
|   |   second_pos_stack = WV: sh (1.0)
|   |   second_pos_stack = IQ: la.IG (0.0)
|   |   second_pos_stack = SV: la.IG (0.0)
|   |   second_pos_stack = HV: la.IG (0.0)
|   |   second_pos_stack = IR: la.IG (1.0)
|   |   second_pos_stack = IG: la.IG (0.0)
|   |   second_pos_stack = AN: la.IG (0.0)
|   |   second_pos_stack = MV: la.IG (0.0)
|   |   second_pos_stack = IM: la.IG (0.0)
|   |   second_pos_stack = BV: la.IG (0.0)
|   |   second_pos_stack = KV: la.IG (0.0)
|   |   second_pos_stack = GV: la.IG (0.0)
|   |   second_pos_stack = FV: la.IG (0.0)
|   |   second_pos_stack = PU: la.IG (0.0)
|   |   second_pos_stack = SP: la.IG (0.0)
|   |   second_pos_stack = XX: la.IG (0.0)
|   |   second_pos_stack = I?: la.IG (0.0)
|   |   second_pos_stack = IS: la.IG (0.0)
|   |   second_pos_stack = IT: la.IG (0.0)
|   |   second_pos_stack = IU: la.IG (0.0)
|   |   second_pos_stack = YY: la.IG (0.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV: la.IG (5.0/1.0)
|   first_pos_queue = AJ: sh (7.0/3.0)
|   first_pos_queue = IK: re (0.0)
|   first_pos_queue = IP: re (1.0)
|   first_pos_queue = PO: re (2.0/1.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: la.IG (0.0)
|   |   second_pos_stack = ROOT: la.IG (3.0/1.0)
|   |   second_pos_stack = ++: la.++ (1.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: la.IG (0.0)
|   |   second_pos_stack = AV: la.IG (0.0)
|   |   second_pos_stack = AJ: la.IG (0.0)
|   |   second_pos_stack = IK: la.IG (0.0)
|   |   second_pos_stack = IP: la.IG (0.0)
|   |   second_pos_stack = PO: la.IG (2.0)
|   |   second_pos_stack = VV: re (3.0)
|   |   second_pos_stack = AB: la.IG (0.0)
|   |   second_pos_stack = TP: la.IG (1.0)
|   |   second_pos_stack = PR: la.IG (0.0)
|   |   second_pos_stack = RO: re (2.0)
|   |   second_pos_stack = ID: la.IG (0.0)
|   |   second_pos_stack = PN: la.IG (0.0)
|   |   second_pos_stack = IC: la.IG (2.0)
|   |   second_pos_stack = MN: la.IG (0.0)
|   |   second_pos_stack = UK: la.IG (0.0)
|   |   second_pos_stack = VN: la.IG (0.0)
|   |   second_pos_stack = QV: la.IG (0.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: la.IG (0.0)
|   |   second_pos_stack = SV: la.IG (0.0)
|   |   second_pos_stack = HV: la.IG (0.0)
|   |   second_pos_stack = IR: la.IG (0.0)
|   |   second_pos_stack = IG: la.IG (0.0)
|   |   second_pos_stack = AN: la.IG (0.0)
|   |   second_pos_stack = MV: la.IG (0.0)
|   |   second_pos_stack = IM: la.IG (2.0)
|   |   second_pos_stack = BV: la.IG (0.0)
|   |   second_pos_stack = KV: la.IG (0.0)
|   |   second_pos_stack = GV: la.IG (0.0)
|   |   second_pos_stack = FV: la.IG (0.0)
|   |   second_pos_stack = PU: la.IG (0.0)
|   |   second_pos_stack = SP: la.IG (0.0)
|   |   second_pos_stack = XX: la.IG (0.0)
|   |   second_pos_stack = I?: la.IG (0.0)
|   |   second_pos_stack = IS: la.IG (0.0)
|   |   second_pos_stack = IT: la.IG (0.0)
|   |   second_pos_stack = IU: la.IG (0.0)
|   |   second_pos_stack = YY: la.IG (0.0)
|   first_pos_queue = AB: re (3.0/1.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR: sh (9.0/4.0)
|   first_pos_queue = RO
|   |   can_do_leftarc = true: sh (22.0/9.0)
|   |   can_do_leftarc = false
|   |   |   second_pos_stack = nil: re (0.0)
|   |   |   second_pos_stack = ROOT: re (0.0)
|   |   |   second_pos_stack = ++: re (0.0)
|   |   |   second_pos_stack = NN: re (4.0/1.0)
|   |   |   second_pos_stack = EN: re (0.0)
|   |   |   second_pos_stack = AV: re (1.0)
|   |   |   second_pos_stack = AJ: re (0.0)
|   |   |   second_pos_stack = IK: re (0.0)
|   |   |   second_pos_stack = IP: re (0.0)
|   |   |   second_pos_stack = PO: re (0.0)
|   |   |   second_pos_stack = VV: re (1.0)
|   |   |   second_pos_stack = AB: re (0.0)
|   |   |   second_pos_stack = TP: re (0.0)
|   |   |   second_pos_stack = PR: re (0.0)
|   |   |   second_pos_stack = RO: ra.PA (5.0/1.0)
|   |   |   second_pos_stack = ID: re (0.0)
|   |   |   second_pos_stack = PN: re (0.0)
|   |   |   second_pos_stack = IC: re (0.0)
|   |   |   second_pos_stack = MN: re (0.0)
|   |   |   second_pos_stack = UK: re (0.0)
|   |   |   second_pos_stack = VN: re (0.0)
|   |   |   second_pos_stack = QV: re (0.0)
|   |   |   second_pos_stack = WV: re (0.0)
|   |   |   second_pos_stack = IQ: re (0.0)
|   |   |   second_pos_stack = SV: re (0.0)
|   |   |   second_pos_stack = HV: re (0.0)
|   |   |   second_pos_stack = IR: re (0.0)
|   |   |   second_pos_stack = IG: re (0.0)
|   |   |   second_pos_stack = AN: re (0.0)
|   |   |   second_pos_stack = MV: re (0.0)
|   |   |   second_pos_stack = IM: re (0.0)
|   |   |   second_pos_stack = BV: re (0.0)
|   |   |   second_pos_stack = KV: re (0.0)
|   |   |   second_pos_stack = GV: re (0.0)
|   |   |   second_pos_stack = FV: re (0.0)
|   |   |   second_pos_stack = PU: re (0.0)
|   |   |   second_pos_stack = SP: re (0.0)
|   |   |   second_pos_stack = XX: re (0.0)
|   |   |   second_pos_stack = I?: re (0.0)
|   |   |   second_pos_stack = IS: re (0.0)
|   |   |   second_pos_stack = IT: re (0.0)
|   |   |   second_pos_stack = IU: re (0.0)
|   |   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: la.JG (6.0/1.0)
|   first_pos_queue = IC: re (23.0/1.0)
|   first_pos_queue = MN: re (2.0/1.0)
|   first_pos_queue = UK: sh (2.0)
|   first_pos_queue = VN: la.IG (2.0/1.0)
|   first_pos_queue = QV: re (0.0)
|   first_pos_queue = WV: re (0.0)
|   first_pos_queue = IQ: re (1.0)
|   first_pos_queue = SV: re (0.0)
|   first_pos_queue = HV: la.JG (2.0/1.0)
|   first_pos_queue = IR: re (1.0)
|   first_pos_queue = IG: sh (2.0)
|   first_pos_queue = AN: re (0.0)
|   first_pos_queue = MV: re (0.0)
|   first_pos_queue = IM: sh (1.0)
|   first_pos_queue = BV: re (0.0)
|   first_pos_queue = KV: re (0.0)
|   first_pos_queue = GV: re (0.0)
|   first_pos_queue = FV: re (0.0)
|   first_pos_queue = PU: sh (3.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (0.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (0.0)
|   first_pos_queue = IU: re (0.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = AN
|   first_pos_queue = nil: re (23.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (143.0/1.0)
|   first_pos_queue = NN: ra.CC (147.0/63.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (19.0/5.0)
|   |   second_pos_stack = ++: la.SS (2.0)
|   |   second_pos_stack = NN: re (10.0/2.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: la.SS (2.0)
|   |   second_pos_stack = IK: ra.ET (1.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (0.0)
|   |   second_pos_stack = VV: re (4.0/1.0)
|   |   second_pos_stack = AB: la.SS (3.0/1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (12.0/2.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (0.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (7.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (8.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: ra.ET (1.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: ra.ET (1.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: ra.ET (1.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = AJ: re (17.0/9.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (8.0/2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (30.0/19.0)
|   |   second_pos_stack = EN: re (1.0)
|   |   second_pos_stack = AV: re (5.0/2.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: ra.IK (2.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (25.0/7.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (47.0/23.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: ra.IK (1.0)
|   |   second_pos_stack = VN: sh (12.0/4.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (11.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: sh (7.0/3.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.IK (4.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (416.0/3.0)
|   first_pos_queue = PO: sh (26.0/1.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (42.0/7.0)
|   |   |   can_do_leftarc = false: ra.ET (2.0)
|   |   second_pos_stack = ++: la.SS (3.0)
|   |   second_pos_stack = NN: re (35.0/15.0)
|   |   second_pos_stack = EN: ra.ET (1.0)
|   |   second_pos_stack = AV: re (5.0/1.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: la.SS (2.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO: la.SS (1.0)
|   |   second_pos_stack = VV: ra.ET (51.0/19.0)
|   |   second_pos_stack = AB: la.SS (12.0)
|   |   second_pos_stack = TP: ra.ET (0.0)
|   |   second_pos_stack = PR: re (56.0/10.0)
|   |   second_pos_stack = RO: ra.ET (0.0)
|   |   second_pos_stack = ID: la.SS (7.0/1.0)
|   |   second_pos_stack = PN: ra.ET (0.0)
|   |   second_pos_stack = IC: ra.ET (0.0)
|   |   second_pos_stack = MN: ra.ET (0.0)
|   |   second_pos_stack = UK: la.SS (12.0)
|   |   second_pos_stack = VN: ra.ET (2.0/1.0)
|   |   second_pos_stack = QV: re (3.0/1.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: ra.ET (41.0/6.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (0.0)
|   |   second_pos_stack = AN: ra.ET (7.0/3.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: ra.ET (0.0)
|   |   second_pos_stack = BV: ra.ET (0.0)
|   |   second_pos_stack = KV: ra.ET (0.0)
|   |   second_pos_stack = GV: ra.ET (0.0)
|   |   second_pos_stack = FV: ra.ET (14.0/2.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (0.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (0.0)
|   |   second_pos_stack = IT: la.SS (1.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: ra.ET (0.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.C+ (6.0/3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (3.0/1.0)
|   |   second_pos_stack = AJ: sh (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: sh (1.0)
|   |   second_pos_stack = VV: re (9.0/1.0)
|   |   second_pos_stack = AB: sh (3.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (9.0/3.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: sh (2.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: sh (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: sh (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = TP: re (5.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: ra.ET (0.0)
|   |   second_pos_stack = ROOT: ra.ET (22.0/1.0)
|   |   second_pos_stack = ++: ra.ET (1.0)
|   |   second_pos_stack = NN: re (20.0/9.0)
|   |   second_pos_stack = EN: ra.ET (1.0)
|   |   second_pos_stack = AV: ra.ET (9.0/2.0)
|   |   second_pos_stack = AJ: ra.ET (1.0)
|   |   second_pos_stack = IK: ra.ET (0.0)
|   |   second_pos_stack = IP: ra.ET (0.0)
|   |   second_pos_stack = PO: ra.ET (0.0)
|   |   second_pos_stack = VV: re (78.0/31.0)
|   |   second_pos_stack = AB: ra.ET (4.0/2.0)
|   |   second_pos_stack = TP: ra.ET (0.0)
|   |   second_pos_stack = PR: ra.ET (50.0/14.0)
|   |   second_pos_stack = RO: ra.ET (0.0)
|   |   second_pos_stack = ID: ra.ET (2.0/1.0)
|   |   second_pos_stack = PN: ra.ET (0.0)
|   |   second_pos_stack = IC: ra.ET (0.0)
|   |   second_pos_stack = MN: ra.ET (0.0)
|   |   second_pos_stack = UK: ra.ET (6.0)
|   |   second_pos_stack = VN: re (6.0/1.0)
|   |   second_pos_stack = QV: ra.ET (0.0)
|   |   second_pos_stack = WV: ra.ET (0.0)
|   |   second_pos_stack = IQ: ra.ET (0.0)
|   |   second_pos_stack = SV: ra.OA (1.0)
|   |   second_pos_stack = HV: ra.ET (19.0/9.0)
|   |   second_pos_stack = IR: ra.ET (0.0)
|   |   second_pos_stack = IG: ra.ET (0.0)
|   |   second_pos_stack = AN: re (9.0/3.0)
|   |   second_pos_stack = MV: ra.ET (0.0)
|   |   second_pos_stack = IM: ra.ET (0.0)
|   |   second_pos_stack = BV: ra.ET (1.0)
|   |   second_pos_stack = KV: ra.ET (0.0)
|   |   second_pos_stack = GV: ra.ET (0.0)
|   |   second_pos_stack = FV: re (12.0/3.0)
|   |   second_pos_stack = PU: ra.ET (0.0)
|   |   second_pos_stack = SP: ra.ET (0.0)
|   |   second_pos_stack = XX: ra.ET (0.0)
|   |   second_pos_stack = I?: ra.ET (0.0)
|   |   second_pos_stack = IS: ra.ET (0.0)
|   |   second_pos_stack = IT: ra.ET (0.0)
|   |   second_pos_stack = IU: ra.ET (0.0)
|   |   second_pos_stack = YY: ra.ET (0.0)
|   first_pos_queue = RO: re (1.0)
|   first_pos_queue = ID
|   |   second_pos_stack = nil: la.PA (0.0)
|   |   second_pos_stack = ROOT: la.PA (0.0)
|   |   second_pos_stack = ++: la.PA (0.0)
|   |   second_pos_stack = NN: la.PA (0.0)
|   |   second_pos_stack = EN: la.PA (0.0)
|   |   second_pos_stack = AV: la.PA (0.0)
|   |   second_pos_stack = AJ: la.PA (0.0)
|   |   second_pos_stack = IK: la.PA (0.0)
|   |   second_pos_stack = IP: la.PA (0.0)
|   |   second_pos_stack = PO: la.PA (0.0)
|   |   second_pos_stack = VV: la.PA (0.0)
|   |   second_pos_stack = AB: ra.DT (3.0)
|   |   second_pos_stack = TP: la.PA (0.0)
|   |   second_pos_stack = PR: la.PA (4.0/1.0)
|   |   second_pos_stack = RO: la.PA (0.0)
|   |   second_pos_stack = ID: la.PA (0.0)
|   |   second_pos_stack = PN: la.PA (0.0)
|   |   second_pos_stack = IC: la.PA (0.0)
|   |   second_pos_stack = MN: la.PA (0.0)
|   |   second_pos_stack = UK: la.PA (0.0)
|   |   second_pos_stack = VN: la.PA (0.0)
|   |   second_pos_stack = QV: la.PA (0.0)
|   |   second_pos_stack = WV: la.PA (0.0)
|   |   second_pos_stack = IQ: la.PA (0.0)
|   |   second_pos_stack = SV: la.PA (0.0)
|   |   second_pos_stack = HV: la.PA (0.0)
|   |   second_pos_stack = IR: la.PA (0.0)
|   |   second_pos_stack = IG: la.PA (0.0)
|   |   second_pos_stack = AN: la.PA (0.0)
|   |   second_pos_stack = MV: la.PA (0.0)
|   |   second_pos_stack = IM: la.PA (0.0)
|   |   second_pos_stack = BV: la.PA (0.0)
|   |   second_pos_stack = KV: la.PA (0.0)
|   |   second_pos_stack = GV: la.PA (0.0)
|   |   second_pos_stack = FV: la.PA (0.0)
|   |   second_pos_stack = PU: la.PA (0.0)
|   |   second_pos_stack = SP: la.PA (0.0)
|   |   second_pos_stack = XX: la.PA (0.0)
|   |   second_pos_stack = I?: la.PA (0.0)
|   |   second_pos_stack = IS: la.PA (0.0)
|   |   second_pos_stack = IT: la.PA (0.0)
|   |   second_pos_stack = IU: la.PA (0.0)
|   |   second_pos_stack = YY: la.PA (0.0)
|   first_pos_queue = PN: ra.AN (3.0/2.0)
|   first_pos_queue = IC: re (21.0/8.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (39.0/1.0)
|   first_pos_queue = VN: ra.CC (29.0/5.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.SS (6.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.ET (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (6.0/3.0)
|   |   second_pos_stack = AB: la.SS (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (12.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.SS (1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: sh (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: ra.ET (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.ET (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: ra.ET (2.0/1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: re (1.0)
|   first_pos_queue = IQ: re (6.0/1.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (4.0)
|   |   second_pos_stack = ++: la.SS (0.0)
|   |   second_pos_stack = NN: la.SS (2.0/1.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (0.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (0.0)
|   |   second_pos_stack = VV: ra.ET (2.0/1.0)
|   |   second_pos_stack = AB: la.SS (1.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (3.0/1.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (1.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (0.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (2.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: ra.ET (2.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: la.SS (0.0)
|   |   second_pos_stack = ROOT: la.SS (9.0/1.0)
|   |   second_pos_stack = ++: la.SS (3.0/1.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: la.SS (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: la.SS (0.0)
|   |   second_pos_stack = IK: la.SS (0.0)
|   |   second_pos_stack = IP: la.SS (0.0)
|   |   second_pos_stack = PO: la.SS (0.0)
|   |   second_pos_stack = VV: la.SS (0.0)
|   |   second_pos_stack = AB: la.SS (2.0)
|   |   second_pos_stack = TP: la.SS (0.0)
|   |   second_pos_stack = PR: re (5.0/1.0)
|   |   second_pos_stack = RO: la.SS (0.0)
|   |   second_pos_stack = ID: la.SS (0.0)
|   |   second_pos_stack = PN: la.SS (0.0)
|   |   second_pos_stack = IC: la.SS (0.0)
|   |   second_pos_stack = MN: la.SS (0.0)
|   |   second_pos_stack = UK: la.SS (2.0)
|   |   second_pos_stack = VN: la.SS (0.0)
|   |   second_pos_stack = QV: la.SS (0.0)
|   |   second_pos_stack = WV: la.SS (0.0)
|   |   second_pos_stack = IQ: la.SS (0.0)
|   |   second_pos_stack = SV: la.SS (0.0)
|   |   second_pos_stack = HV: la.SS (0.0)
|   |   second_pos_stack = IR: la.SS (0.0)
|   |   second_pos_stack = IG: la.SS (0.0)
|   |   second_pos_stack = AN: la.SS (0.0)
|   |   second_pos_stack = MV: la.SS (0.0)
|   |   second_pos_stack = IM: la.SS (0.0)
|   |   second_pos_stack = BV: la.SS (0.0)
|   |   second_pos_stack = KV: la.SS (0.0)
|   |   second_pos_stack = GV: la.SS (0.0)
|   |   second_pos_stack = FV: la.SS (0.0)
|   |   second_pos_stack = PU: la.SS (0.0)
|   |   second_pos_stack = SP: la.SS (0.0)
|   |   second_pos_stack = XX: la.SS (0.0)
|   |   second_pos_stack = I?: la.SS (0.0)
|   |   second_pos_stack = IS: la.SS (0.0)
|   |   second_pos_stack = IT: la.SS (0.0)
|   |   second_pos_stack = IU: la.SS (0.0)
|   |   second_pos_stack = YY: la.SS (0.0)
|   first_pos_queue = IR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IR (2.0/1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IG: re (2.0)
|   first_pos_queue = AN: ra.CC (47.0/5.0)
|   first_pos_queue = MV: re (14.0/5.0)
|   first_pos_queue = IM: sh (105.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.SS (2.0)
|   |   can_do_leftarc = false: ra.ET (3.0/1.0)
|   first_pos_queue = KV: la.SS (2.0/1.0)
|   first_pos_queue = GV: re (12.0/5.0)
|   first_pos_queue = FV: ra.ET (11.0/5.0)
|   first_pos_queue = PU: sh (1.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: sh (2.0)
|   first_pos_queue = I?: re (15.0/3.0)
|   first_pos_queue = IS: re (1.0)
|   first_pos_queue = IT: ra.IT (8.0/4.0)
|   first_pos_queue = IU: re (3.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = MV
|   first_pos_queue = nil: re (272.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: re (0.0)
|   first_pos_queue = NN: ra.SS (40.0/6.0)
|   first_pos_queue = EN: sh (5.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.AA (2.0/1.0)
|   |   can_do_leftarc = false: ra.VG (63.0/14.0)
|   first_pos_queue = AJ: ra.AA (6.0/3.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (18.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: ra.IK (0.0)
|   |   second_pos_stack = VV: re (3.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: ra.IK (0.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: ra.IK (0.0)
|   |   second_pos_stack = QV: ra.IK (0.0)
|   |   second_pos_stack = WV: ra.IK (0.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (0.0)
|   |   second_pos_stack = HV: ra.IK (0.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: re (1.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: ra.IK (0.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: re (2.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: ra.IP (0.0)
|   |   second_pos_stack = ROOT: ra.IP (243.0)
|   |   second_pos_stack = ++: ra.IP (0.0)
|   |   second_pos_stack = NN: re (19.0/1.0)
|   |   second_pos_stack = EN: ra.IP (0.0)
|   |   second_pos_stack = AV: re (16.0/2.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: ra.IP (0.0)
|   |   second_pos_stack = IP: ra.IP (0.0)
|   |   second_pos_stack = PO: ra.IP (0.0)
|   |   second_pos_stack = VV: re (38.0/5.0)
|   |   second_pos_stack = AB: ra.IP (0.0)
|   |   second_pos_stack = TP: ra.IP (0.0)
|   |   second_pos_stack = PR: re (5.0)
|   |   second_pos_stack = RO: ra.IP (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.IP (0.0)
|   |   second_pos_stack = IC: ra.IP (0.0)
|   |   second_pos_stack = MN: ra.IP (0.0)
|   |   second_pos_stack = UK: ra.IP (0.0)
|   |   second_pos_stack = VN: re (4.0)
|   |   second_pos_stack = QV: re (3.0)
|   |   second_pos_stack = WV: ra.IP (0.0)
|   |   second_pos_stack = IQ: ra.IP (0.0)
|   |   second_pos_stack = SV: re (4.0/1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.IP (0.0)
|   |   second_pos_stack = IG: ra.IP (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.IP (2.0/1.0)
|   |   second_pos_stack = IM: ra.IP (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (1.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (4.0/1.0)
|   |   second_pos_stack = PU: ra.IP (0.0)
|   |   second_pos_stack = SP: ra.IP (0.0)
|   |   second_pos_stack = XX: ra.IP (0.0)
|   |   second_pos_stack = I?: ra.IP (0.0)
|   |   second_pos_stack = IS: ra.IP (0.0)
|   |   second_pos_stack = IT: ra.IP (0.0)
|   |   second_pos_stack = IU: ra.IP (0.0)
|   |   second_pos_stack = YY: re (2.0)
|   first_pos_queue = PO: ra.SS (77.0/16.0)
|   first_pos_queue = VV: ra.VG (318.0/25.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: ra.MA (0.0)
|   |   second_pos_stack = ROOT: ra.+A (67.0/41.0)
|   |   second_pos_stack = ++: ra.MA (0.0)
|   |   second_pos_stack = NN: ra.RA (2.0)
|   |   second_pos_stack = EN: ra.MA (0.0)
|   |   second_pos_stack = AV: ra.MA (3.0)
|   |   second_pos_stack = AJ: ra.MA (0.0)
|   |   second_pos_stack = IK: ra.MA (0.0)
|   |   second_pos_stack = IP: ra.MA (0.0)
|   |   second_pos_stack = PO: ra.RA (1.0)
|   |   second_pos_stack = VV: ra.MA (5.0/2.0)
|   |   second_pos_stack = AB: ra.MA (0.0)
|   |   second_pos_stack = TP: ra.MA (0.0)
|   |   second_pos_stack = PR: ra.MA (0.0)
|   |   second_pos_stack = RO: ra.MA (0.0)
|   |   second_pos_stack = ID: ra.MA (0.0)
|   |   second_pos_stack = PN: ra.MA (0.0)
|   |   second_pos_stack = IC: ra.MA (0.0)
|   |   second_pos_stack = MN: ra.MA (0.0)
|   |   second_pos_stack = UK: ra.MA (0.0)
|   |   second_pos_stack = VN: ra.MA (0.0)
|   |   second_pos_stack = QV: ra.MA (0.0)
|   |   second_pos_stack = WV: ra.MA (0.0)
|   |   second_pos_stack = IQ: ra.MA (0.0)
|   |   second_pos_stack = SV: ra.MA (0.0)
|   |   second_pos_stack = HV: ra.MA (0.0)
|   |   second_pos_stack = IR: ra.MA (0.0)
|   |   second_pos_stack = IG: ra.MA (0.0)
|   |   second_pos_stack = AN: ra.MA (0.0)
|   |   second_pos_stack = MV: ra.MA (0.0)
|   |   second_pos_stack = IM: ra.MA (0.0)
|   |   second_pos_stack = BV: ra.MA (0.0)
|   |   second_pos_stack = KV: ra.MA (0.0)
|   |   second_pos_stack = GV: ra.MA (0.0)
|   |   second_pos_stack = FV: ra.MA (0.0)
|   |   second_pos_stack = PU: ra.MA (0.0)
|   |   second_pos_stack = SP: ra.MA (0.0)
|   |   second_pos_stack = XX: ra.MA (0.0)
|   |   second_pos_stack = I?: ra.MA (0.0)
|   |   second_pos_stack = IS: ra.MA (0.0)
|   |   second_pos_stack = IT: ra.MA (0.0)
|   |   second_pos_stack = IU: ra.MA (0.0)
|   |   second_pos_stack = YY: ra.MA (2.0/1.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR: ra.AA (13.0/8.0)
|   first_pos_queue = RO: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.SS (2.0)
|   first_pos_queue = IC: ra.IC (2.0/1.0)
|   first_pos_queue = MN: ra.SS (1.0)
|   first_pos_queue = UK: re (0.0)
|   first_pos_queue = VN: ra.SS (7.0/1.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (4.0/2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: re (0.0)
|   first_pos_queue = IQ: ra.IQ (2.0/1.0)
|   first_pos_queue = SV: ra.MS (2.0)
|   first_pos_queue = HV: ra.VG (23.0/6.0)
|   first_pos_queue = IR: re (0.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: ra.SS (1.0)
|   first_pos_queue = MV: ra.MS (5.0/2.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: ra.VG (17.0/1.0)
|   first_pos_queue = KV: ra.IV (1.0)
|   first_pos_queue = GV: ra.VG (14.0/2.0)
|   first_pos_queue = FV: sh (15.0/5.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (4.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: ra.I? (1.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: ra.I? (0.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: ra.I? (0.0)
|   |   second_pos_stack = VV: re (2.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: ra.I? (0.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: ra.I? (0.0)
|   |   second_pos_stack = WV: ra.I? (0.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: ra.I? (0.0)
|   |   second_pos_stack = HV: ra.I? (0.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: ra.I? (0.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: ra.I? (0.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: ra.I? (0.0)
|   |   second_pos_stack = FV: ra.I? (0.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (0.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (1.0)
|   first_pos_queue = IU: ra.IU (2.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = IM
|   first_pos_queue = nil: la.IM (0.0)
|   first_pos_queue = ROOT: la.IM (0.0)
|   first_pos_queue = ++: la.IM (0.0)
|   first_pos_queue = NN: sh (5.0/1.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV: la.IM (70.0/1.0)
|   first_pos_queue = AJ: sh (16.0/1.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (2.0)
|   |   second_pos_stack = AJ: la.IM (2.0/1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: sh (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IP: re (2.0)
|   first_pos_queue = PO: sh (9.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.IM (1802.0/13.0)
|   |   can_do_leftarc = false: re (7.0/1.0)
|   first_pos_queue = AB: sh (93.0/3.0)
|   first_pos_queue = TP: la.IM (0.0)
|   first_pos_queue = PR: sh (44.0/1.0)
|   first_pos_queue = RO: la.IM (0.0)
|   first_pos_queue = ID: la.IM (0.0)
|   first_pos_queue = PN: la.IM (0.0)
|   first_pos_queue = IC: sh (21.0)
|   first_pos_queue = MN: la.IM (0.0)
|   first_pos_queue = UK: sh (6.0)
|   first_pos_queue = VN: la.IM (1.0)
|   first_pos_queue = QV: sh (29.0/1.0)
|   first_pos_queue = WV: sh (3.0)
|   first_pos_queue = IQ: la.IM (0.0)
|   first_pos_queue = SV: la.IM (0.0)
|   first_pos_queue = HV: la.IM (34.0/7.0)
|   first_pos_queue = IR: la.IM (0.0)
|   first_pos_queue = IG: sh (3.0/1.0)
|   first_pos_queue = AN: la.IM (0.0)
|   first_pos_queue = MV: la.IM (0.0)
|   first_pos_queue = IM: sh (1.0)
|   first_pos_queue = BV: la.IM (42.0)
|   first_pos_queue = KV: la.IM (1.0)
|   first_pos_queue = GV: la.IM (47.0/1.0)
|   first_pos_queue = FV: la.IM (108.0/16.0)
|   first_pos_queue = PU: la.IM (0.0)
|   first_pos_queue = SP: la.IM (0.0)
|   first_pos_queue = XX: la.IM (0.0)
|   first_pos_queue = I?: la.IM (0.0)
|   first_pos_queue = IS: la.IM (0.0)
|   first_pos_queue = IT: la.IM (0.0)
|   first_pos_queue = IU: la.IM (0.0)
|   first_pos_queue = YY: la.IM (0.0)
top_pos_stack = BV
|   first_pos_queue = nil: re (236.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: re (0.0)
|   first_pos_queue = NN: ra.SP (197.0/76.0)
|   first_pos_queue = EN: sh (52.0/2.0)
|   first_pos_queue = AV: re (23.0/15.0)
|   first_pos_queue = AJ: ra.SP (359.0/56.0)
|   first_pos_queue = IK: ra.IK (90.0/27.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (200.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (9.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (27.0/1.0)
|   |   second_pos_stack = AJ: re (1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (2.0)
|   |   second_pos_stack = VV: re (99.0/3.0)
|   |   second_pos_stack = AB: re (2.0)
|   |   second_pos_stack = TP: re (1.0)
|   |   second_pos_stack = PR: re (17.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (2.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (2.0)
|   |   second_pos_stack = QV: re (23.0/1.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (32.0)
|   |   second_pos_stack = HV: re (40.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (13.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (10.0/2.0)
|   |   second_pos_stack = KV: re (12.0)
|   |   second_pos_stack = GV: re (2.0)
|   |   second_pos_stack = FV: re (3.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: ra.SS (0.0)
|   |   second_pos_stack = ROOT: ra.SS (52.0/22.0)
|   |   second_pos_stack = ++: ra.SS (1.0)
|   |   second_pos_stack = NN: ra.SS (0.0)
|   |   second_pos_stack = EN: ra.SS (0.0)
|   |   second_pos_stack = AV: ra.SS (2.0)
|   |   second_pos_stack = AJ: ra.SS (0.0)
|   |   second_pos_stack = IK: ra.SS (0.0)
|   |   second_pos_stack = IP: ra.SS (0.0)
|   |   second_pos_stack = PO: ra.SS (0.0)
|   |   second_pos_stack = VV: sh (19.0/10.0)
|   |   second_pos_stack = AB: ra.SS (0.0)
|   |   second_pos_stack = TP: ra.SS (0.0)
|   |   second_pos_stack = PR: sh (2.0)
|   |   second_pos_stack = RO: ra.SS (0.0)
|   |   second_pos_stack = ID: ra.SS (0.0)
|   |   second_pos_stack = PN: ra.SS (0.0)
|   |   second_pos_stack = IC: ra.SS (0.0)
|   |   second_pos_stack = MN: ra.SS (0.0)
|   |   second_pos_stack = UK: ra.SS (0.0)
|   |   second_pos_stack = VN: ra.SS (0.0)
|   |   second_pos_stack = QV: sh (4.0/2.0)
|   |   second_pos_stack = WV: ra.SS (0.0)
|   |   second_pos_stack = IQ: ra.SS (0.0)
|   |   second_pos_stack = SV: sh (8.0/4.0)
|   |   second_pos_stack = HV: sh (8.0/2.0)
|   |   second_pos_stack = IR: ra.SS (0.0)
|   |   second_pos_stack = IG: ra.SS (0.0)
|   |   second_pos_stack = AN: ra.SS (0.0)
|   |   second_pos_stack = MV: ra.SP (3.0/2.0)
|   |   second_pos_stack = IM: ra.SS (0.0)
|   |   second_pos_stack = BV: ra.SS (0.0)
|   |   second_pos_stack = KV: sh (1.0)
|   |   second_pos_stack = GV: ra.SS (0.0)
|   |   second_pos_stack = FV: sh (1.0)
|   |   second_pos_stack = PU: ra.SS (0.0)
|   |   second_pos_stack = SP: ra.SS (0.0)
|   |   second_pos_stack = XX: ra.SS (0.0)
|   |   second_pos_stack = I?: ra.SS (0.0)
|   |   second_pos_stack = IS: ra.SS (0.0)
|   |   second_pos_stack = IT: ra.SS (0.0)
|   |   second_pos_stack = IU: ra.SS (0.0)
|   |   second_pos_stack = YY: ra.SS (0.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (4.0/3.0)
|   |   |   can_do_leftarc = false: ra.MS (67.0/51.0)
|   |   second_pos_stack = ++: la.AA (2.0/1.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: ra.AA (3.0/2.0)
|   |   second_pos_stack = VV: re (19.0/12.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: ra.AA (1.0)
|   |   second_pos_stack = PR: ra.+F (3.0/2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (8.0/1.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (14.0/5.0)
|   |   second_pos_stack = HV: ra.ES (11.0/8.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: ra.SS (2.0/1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.MA (3.0/2.0)
|   |   second_pos_stack = KV: ra.AA (5.0/3.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AB: sh (231.0/144.0)
|   first_pos_queue = TP: ra.SP (96.0/4.0)
|   first_pos_queue = PR: ra.OA (230.0/139.0)
|   first_pos_queue = RO: sh (12.0/7.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.SS (3.0)
|   first_pos_queue = IC: ra.JC (13.0/7.0)
|   first_pos_queue = MN: ra.SS (1.0)
|   first_pos_queue = UK: sh (13.0)
|   first_pos_queue = VN: ra.SP (43.0/21.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.MS (3.0/1.0)
|   |   second_pos_stack = ++: la.OO (1.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.+F (2.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.AA (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: ra.KA (1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: ra.AA (2.0/1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: ra.+F (3.0/2.0)
|   first_pos_queue = IQ
|   |   second_pos_stack = nil: ra.IQ (0.0)
|   |   second_pos_stack = ROOT: ra.IQ (6.0)
|   |   second_pos_stack = ++: ra.IQ (0.0)
|   |   second_pos_stack = NN: ra.IQ (0.0)
|   |   second_pos_stack = EN: ra.IQ (0.0)
|   |   second_pos_stack = AV: ra.IQ (0.0)
|   |   second_pos_stack = AJ: ra.IQ (0.0)
|   |   second_pos_stack = IK: ra.IQ (0.0)
|   |   second_pos_stack = IP: ra.IQ (0.0)
|   |   second_pos_stack = PO: ra.IQ (0.0)
|   |   second_pos_stack = VV: re (1.0)
|   |   second_pos_stack = AB: ra.IQ (0.0)
|   |   second_pos_stack = TP: ra.IQ (0.0)
|   |   second_pos_stack = PR: ra.IQ (0.0)
|   |   second_pos_stack = RO: ra.IQ (0.0)
|   |   second_pos_stack = ID: ra.IQ (0.0)
|   |   second_pos_stack = PN: ra.IQ (0.0)
|   |   second_pos_stack = IC: ra.IQ (0.0)
|   |   second_pos_stack = MN: ra.IQ (0.0)
|   |   second_pos_stack = UK: ra.IQ (0.0)
|   |   second_pos_stack = VN: ra.IQ (0.0)
|   |   second_pos_stack = QV: ra.IQ (1.0)
|   |   second_pos_stack = WV: ra.IQ (0.0)
|   |   second_pos_stack = IQ: ra.IQ (0.0)
|   |   second_pos_stack = SV: ra.IQ (0.0)
|   |   second_pos_stack = HV: ra.IQ (0.0)
|   |   second_pos_stack = IR: ra.IQ (0.0)
|   |   second_pos_stack = IG: ra.IQ (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: ra.IQ (0.0)
|   |   second_pos_stack = IM: ra.IQ (0.0)
|   |   second_pos_stack = BV: re (2.0)
|   |   second_pos_stack = KV: ra.IQ (0.0)
|   |   second_pos_stack = GV: ra.IQ (0.0)
|   |   second_pos_stack = FV: ra.IQ (0.0)
|   |   second_pos_stack = PU: ra.IQ (0.0)
|   |   second_pos_stack = SP: ra.IQ (0.0)
|   |   second_pos_stack = XX: ra.IQ (0.0)
|   |   second_pos_stack = I?: ra.IQ (0.0)
|   |   second_pos_stack = IS: ra.IQ (0.0)
|   |   second_pos_stack = IT: ra.IQ (0.0)
|   |   second_pos_stack = IU: ra.IQ (0.0)
|   |   second_pos_stack = YY: ra.IQ (0.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT: ra.MS (7.0/4.0)
|   |   second_pos_stack = ++: ra.MS (0.0)
|   |   second_pos_stack = NN: ra.MS (0.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.MS (0.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: ra.MS (0.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: ra.MS (0.0)
|   |   second_pos_stack = VV: ra.KA (1.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.MS (0.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.MS (0.0)
|   |   second_pos_stack = QV: ra.MS (0.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.SS (2.0/1.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = HV: re (12.0/7.0)
|   first_pos_queue = IR: ra.IR (10.0/6.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: ra.SP (7.0/1.0)
|   first_pos_queue = MV: re (5.0/1.0)
|   first_pos_queue = IM: sh (2.0)
|   first_pos_queue = BV
|   |   can_do_leftarc = true: la.AA (4.0/1.0)
|   |   can_do_leftarc = false: ra.KA (15.0/10.0)
|   first_pos_queue = KV: ra.KA (2.0/1.0)
|   first_pos_queue = GV: ra.ES (4.0/2.0)
|   first_pos_queue = FV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.MS (5.0/3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.AA (3.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (2.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: ra.ES (1.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: ra.SP (1.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (15.0/4.0)
|   first_pos_queue = IS: ra.IS (2.0/1.0)
|   first_pos_queue = IT: ra.IT (7.0)
|   first_pos_queue = IU: re (5.0/1.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = KV
|   first_pos_queue = nil: re (107.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: re (0.0)
|   first_pos_queue = NN: ra.SS (24.0/7.0)
|   first_pos_queue = EN: sh (2.0)
|   first_pos_queue = AV: ra.MS (9.0/5.0)
|   first_pos_queue = AJ: ra.MA (7.0/4.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (7.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: ra.IK (0.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: ra.IK (0.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: ra.IK (0.0)
|   |   second_pos_stack = VV: re (3.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: ra.IK (0.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: ra.IK (0.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: ra.IK (0.0)
|   |   second_pos_stack = QV: ra.IK (0.0)
|   |   second_pos_stack = WV: ra.IK (0.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (0.0)
|   |   second_pos_stack = HV: ra.IK (0.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (0.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: ra.IK (0.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: ra.IK (0.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: ra.IK (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: ra.IP (0.0)
|   |   second_pos_stack = ROOT: ra.IP (94.0)
|   |   second_pos_stack = ++: ra.IP (0.0)
|   |   second_pos_stack = NN: re (8.0)
|   |   second_pos_stack = EN: ra.IP (0.0)
|   |   second_pos_stack = AV: re (10.0)
|   |   second_pos_stack = AJ: ra.IP (0.0)
|   |   second_pos_stack = IK: ra.IP (0.0)
|   |   second_pos_stack = IP: ra.IP (0.0)
|   |   second_pos_stack = PO: ra.IP (0.0)
|   |   second_pos_stack = VV: re (26.0/1.0)
|   |   second_pos_stack = AB: ra.IP (0.0)
|   |   second_pos_stack = TP: ra.IP (0.0)
|   |   second_pos_stack = PR: re (3.0)
|   |   second_pos_stack = RO: ra.IP (0.0)
|   |   second_pos_stack = ID: ra.IP (0.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: ra.IP (0.0)
|   |   second_pos_stack = MN: ra.IP (0.0)
|   |   second_pos_stack = UK: ra.IP (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: ra.IP (0.0)
|   |   second_pos_stack = IQ: ra.IP (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: ra.IP (0.0)
|   |   second_pos_stack = IG: ra.IP (0.0)
|   |   second_pos_stack = AN: ra.IP (0.0)
|   |   second_pos_stack = MV: ra.IP (0.0)
|   |   second_pos_stack = IM: ra.IP (0.0)
|   |   second_pos_stack = BV: re (2.0)
|   |   second_pos_stack = KV: re (2.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: ra.IP (0.0)
|   |   second_pos_stack = PU: ra.IP (0.0)
|   |   second_pos_stack = SP: ra.IP (0.0)
|   |   second_pos_stack = XX: ra.IP (0.0)
|   |   second_pos_stack = I?: ra.IP (0.0)
|   |   second_pos_stack = IS: ra.IP (0.0)
|   |   second_pos_stack = IT: ra.IP (0.0)
|   |   second_pos_stack = IU: ra.IP (0.0)
|   |   second_pos_stack = YY: ra.IP (2.0/1.0)
|   first_pos_queue = PO: ra.SS (19.0/7.0)
|   first_pos_queue = VV: ra.VG (164.0/29.0)
|   first_pos_queue = AB: ra.NA (57.0/42.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR: ra.OA (13.0/9.0)
|   first_pos_queue = RO: ra.TA (1.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: re (0.0)
|   first_pos_queue = IC: re (0.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: re (0.0)
|   first_pos_queue = VN: ra.SS (6.0)
|   first_pos_queue = QV: ra.+F (3.0/2.0)
|   first_pos_queue = WV: re (0.0)
|   first_pos_queue = IQ: re (0.0)
|   first_pos_queue = SV: re (1.0)
|   first_pos_queue = HV: ra.VG (1.0)
|   first_pos_queue = IR: ra.IR (4.0/2.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: re (0.0)
|   first_pos_queue = MV: ra.MS (3.0)
|   first_pos_queue = IM: sh (106.0/1.0)
|   first_pos_queue = BV: ra.VG (17.0/1.0)
|   first_pos_queue = KV: ra.MS (3.0/1.0)
|   first_pos_queue = GV: ra.VG (4.0)
|   first_pos_queue = FV: ra.VG (10.0/1.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: ra.I? (4.0/1.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: ra.IT (5.0)
|   first_pos_queue = IU: re (1.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = GV
|   first_pos_queue = nil: re (67.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (2.0)
|   first_pos_queue = NN: ra.OO (117.0/30.0)
|   first_pos_queue = EN: sh (21.0)
|   first_pos_queue = AV: re (9.0/5.0)
|   first_pos_queue = AJ: ra.OO (81.0/25.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT: ra.IK (9.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: re (4.0/1.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (8.0/2.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: ra.IK (2.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: re (4.0/1.0)
|   |   second_pos_stack = QV: re (4.0/1.0)
|   |   second_pos_stack = WV: ra.IK (2.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (4.0/1.0)
|   |   second_pos_stack = HV: ra.IK (2.0/1.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (2.0/1.0)
|   |   second_pos_stack = IM: sh (1.0)
|   |   second_pos_stack = BV: ra.IK (0.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: ra.IK (2.0/1.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: ra.IK (0.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (49.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (19.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (11.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (5.0)
|   |   second_pos_stack = VV: re (48.0/2.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (9.0)
|   |   second_pos_stack = RO: re (1.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (8.0)
|   |   second_pos_stack = QV: re (20.0)
|   |   second_pos_stack = WV: re (8.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (14.0)
|   |   second_pos_stack = HV: re (22.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (12.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (4.0)
|   |   second_pos_stack = KV: re (4.0)
|   |   second_pos_stack = GV: re (1.0)
|   |   second_pos_stack = FV: re (6.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = PO: ra.OO (142.0/68.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: ra.OO (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.AA (5.0/3.0)
|   |   |   can_do_leftarc = false: ra.MS (13.0/8.0)
|   |   second_pos_stack = ++: la.AA (1.0)
|   |   second_pos_stack = NN: ra.OO (9.0/3.0)
|   |   second_pos_stack = EN: ra.OO (0.0)
|   |   second_pos_stack = AV: ra.OO (4.0/2.0)
|   |   second_pos_stack = AJ: ra.OO (0.0)
|   |   second_pos_stack = IK: ra.OO (0.0)
|   |   second_pos_stack = IP: ra.OO (0.0)
|   |   second_pos_stack = PO: ra.OO (0.0)
|   |   second_pos_stack = VV: ra.OO (6.0/4.0)
|   |   second_pos_stack = AB: ra.OO (0.0)
|   |   second_pos_stack = TP: ra.OO (0.0)
|   |   second_pos_stack = PR: ra.TA (2.0/1.0)
|   |   second_pos_stack = RO: ra.OO (0.0)
|   |   second_pos_stack = ID: ra.OO (0.0)
|   |   second_pos_stack = PN: ra.+F (1.0)
|   |   second_pos_stack = IC: ra.OO (0.0)
|   |   second_pos_stack = MN: ra.OO (0.0)
|   |   second_pos_stack = UK: ra.OO (0.0)
|   |   second_pos_stack = VN: re (5.0/2.0)
|   |   second_pos_stack = QV: ra.AA (4.0/3.0)
|   |   second_pos_stack = WV: re (1.0)
|   |   second_pos_stack = IQ: ra.OO (0.0)
|   |   second_pos_stack = SV: re (5.0)
|   |   second_pos_stack = HV: re (3.0/1.0)
|   |   second_pos_stack = IR: ra.OO (0.0)
|   |   second_pos_stack = IG: ra.OO (0.0)
|   |   second_pos_stack = AN: ra.OO (0.0)
|   |   second_pos_stack = MV: ra.AA (5.0/2.0)
|   |   second_pos_stack = IM: la.KA (1.0)
|   |   second_pos_stack = BV: ra.OO (0.0)
|   |   second_pos_stack = KV: ra.TA (1.0)
|   |   second_pos_stack = GV: ra.OO (0.0)
|   |   second_pos_stack = FV: ra.AN (2.0/1.0)
|   |   second_pos_stack = PU: ra.OO (0.0)
|   |   second_pos_stack = SP: ra.OO (0.0)
|   |   second_pos_stack = XX: ra.OO (0.0)
|   |   second_pos_stack = I?: ra.OO (0.0)
|   |   second_pos_stack = IS: ra.OO (0.0)
|   |   second_pos_stack = IT: la.AA (1.0)
|   |   second_pos_stack = IU: ra.OO (0.0)
|   |   second_pos_stack = YY: ra.OO (0.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: ra.PL (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.DB (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.NA (24.0/19.0)
|   |   second_pos_stack = ++: ra.PL (0.0)
|   |   second_pos_stack = NN: ra.PL (1.0)
|   |   second_pos_stack = EN: ra.PL (0.0)
|   |   second_pos_stack = AV: ra.PL (4.0/2.0)
|   |   second_pos_stack = AJ: ra.PL (0.0)
|   |   second_pos_stack = IK: ra.PL (0.0)
|   |   second_pos_stack = IP: ra.PL (0.0)
|   |   second_pos_stack = PO: ra.PL (0.0)
|   |   second_pos_stack = VV: ra.+A (7.0/4.0)
|   |   second_pos_stack = AB: ra.PL (0.0)
|   |   second_pos_stack = TP: ra.PL (0.0)
|   |   second_pos_stack = PR: ra.PL (0.0)
|   |   second_pos_stack = RO: ra.PL (0.0)
|   |   second_pos_stack = ID: ra.PL (0.0)
|   |   second_pos_stack = PN: ra.PL (0.0)
|   |   second_pos_stack = IC: ra.PL (0.0)
|   |   second_pos_stack = MN: ra.PL (0.0)
|   |   second_pos_stack = UK: ra.PL (0.0)
|   |   second_pos_stack = VN: ra.PL (0.0)
|   |   second_pos_stack = QV: ra.+A (3.0/2.0)
|   |   second_pos_stack = WV: ra.CA (2.0/1.0)
|   |   second_pos_stack = IQ: ra.PL (0.0)
|   |   second_pos_stack = SV: ra.AA (2.0)
|   |   second_pos_stack = HV: ra.AA (2.0/1.0)
|   |   second_pos_stack = IR: ra.PL (0.0)
|   |   second_pos_stack = IG: ra.PL (0.0)
|   |   second_pos_stack = AN: ra.PL (0.0)
|   |   second_pos_stack = MV: ra.PL (3.0/1.0)
|   |   second_pos_stack = IM: ra.PL (0.0)
|   |   second_pos_stack = BV: ra.RA (1.0)
|   |   second_pos_stack = KV: ra.PL (0.0)
|   |   second_pos_stack = GV: ra.PL (0.0)
|   |   second_pos_stack = FV: ra.AA (2.0/1.0)
|   |   second_pos_stack = PU: ra.PL (0.0)
|   |   second_pos_stack = SP: ra.PL (0.0)
|   |   second_pos_stack = XX: ra.PL (0.0)
|   |   second_pos_stack = I?: ra.PL (0.0)
|   |   second_pos_stack = IS: ra.PL (0.0)
|   |   second_pos_stack = IT: ra.PL (0.0)
|   |   second_pos_stack = IU: ra.PL (0.0)
|   |   second_pos_stack = YY: ra.+A (2.0/1.0)
|   first_pos_queue = TP: ra.OO (7.0/2.0)
|   first_pos_queue = PR: ra.OA (127.0/85.0)
|   first_pos_queue = RO: sh (3.0/1.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.KA (3.0/2.0)
|   first_pos_queue = IC: ra.JC (2.0/1.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (28.0)
|   first_pos_queue = VN: ra.OO (23.0/1.0)
|   first_pos_queue = QV: re (6.0/3.0)
|   first_pos_queue = WV: ra.KA (4.0/2.0)
|   first_pos_queue = IQ: ra.IQ (4.0/2.0)
|   first_pos_queue = SV: ra.AA (3.0/1.0)
|   first_pos_queue = HV: ra.TA (2.0/1.0)
|   first_pos_queue = IR: re (0.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: ra.OO (2.0/1.0)
|   first_pos_queue = MV: re (3.0/1.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: ra.OO (2.0)
|   first_pos_queue = KV
|   |   can_do_leftarc = true: la.AA (2.0/1.0)
|   |   can_do_leftarc = false: ra.MS (2.0/1.0)
|   first_pos_queue = GV: ra.KA (2.0/1.0)
|   first_pos_queue = FV: ra.AA (6.0/4.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: ra.OO (3.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: ra.I? (12.0/3.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: ra.IT (6.0/3.0)
|   first_pos_queue = IU: ra.IU (2.0/1.0)
|   first_pos_queue = YY: ra.MS (1.0)
top_pos_stack = FV
|   first_pos_queue = nil: re (232.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (2.0)
|   first_pos_queue = NN: ra.OO (357.0/52.0)
|   first_pos_queue = EN: sh (62.0/2.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: ra.VG (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: la.SS (2.0)
|   |   |   can_do_leftarc = false: ra.VG (10.0/2.0)
|   |   second_pos_stack = ++: la.SS (1.0)
|   |   second_pos_stack = NN: re (3.0/1.0)
|   |   second_pos_stack = EN: ra.VG (0.0)
|   |   second_pos_stack = AV: ra.VG (0.0)
|   |   second_pos_stack = AJ: ra.VG (0.0)
|   |   second_pos_stack = IK: ra.VG (0.0)
|   |   second_pos_stack = IP: ra.VG (0.0)
|   |   second_pos_stack = PO: ra.VG (0.0)
|   |   second_pos_stack = VV: re (4.0/1.0)
|   |   second_pos_stack = AB: ra.VG (0.0)
|   |   second_pos_stack = TP: ra.VG (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.VG (0.0)
|   |   second_pos_stack = ID: ra.VG (0.0)
|   |   second_pos_stack = PN: ra.VG (0.0)
|   |   second_pos_stack = IC: ra.VG (0.0)
|   |   second_pos_stack = MN: ra.VG (0.0)
|   |   second_pos_stack = UK: ra.VG (0.0)
|   |   second_pos_stack = VN: ra.VG (0.0)
|   |   second_pos_stack = QV: ra.AA (4.0/2.0)
|   |   second_pos_stack = WV: ra.VG (0.0)
|   |   second_pos_stack = IQ: ra.VG (0.0)
|   |   second_pos_stack = SV: ra.VG (0.0)
|   |   second_pos_stack = HV: ra.VG (0.0)
|   |   second_pos_stack = IR: ra.VG (0.0)
|   |   second_pos_stack = IG: ra.VG (0.0)
|   |   second_pos_stack = AN: ra.VG (0.0)
|   |   second_pos_stack = MV: ra.AA (1.0)
|   |   second_pos_stack = IM: la.IV (2.0)
|   |   second_pos_stack = BV: ra.VG (0.0)
|   |   second_pos_stack = KV: ra.VG (0.0)
|   |   second_pos_stack = GV: ra.VG (0.0)
|   |   second_pos_stack = FV: ra.VG (0.0)
|   |   second_pos_stack = PU: ra.VG (0.0)
|   |   second_pos_stack = SP: ra.VG (0.0)
|   |   second_pos_stack = XX: ra.VG (0.0)
|   |   second_pos_stack = I?: ra.VG (0.0)
|   |   second_pos_stack = IS: ra.VG (0.0)
|   |   second_pos_stack = IT: ra.VG (0.0)
|   |   second_pos_stack = IU: ra.VG (0.0)
|   |   second_pos_stack = YY: ra.VG (0.0)
|   first_pos_queue = AJ: sh (82.0/24.0)
|   first_pos_queue = IK: ra.IK (74.0/20.0)
|   first_pos_queue = IP
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.IP (193.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (31.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (41.0/1.0)
|   |   second_pos_stack = AJ: re (2.0)
|   |   second_pos_stack = IK: ra.IP (1.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (3.0)
|   |   second_pos_stack = VV: re (87.0/1.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (33.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (3.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (55.0)
|   |   second_pos_stack = WV: re (2.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (25.0)
|   |   second_pos_stack = HV: re (35.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (4.0)
|   |   second_pos_stack = MV: re (4.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (8.0)
|   |   second_pos_stack = KV: re (5.0)
|   |   second_pos_stack = GV: re (4.0/1.0)
|   |   second_pos_stack = FV: re (4.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = PO
|   |   second_pos_stack = nil: sh (0.0)
|   |   second_pos_stack = ROOT: ra.SS (74.0/21.0)
|   |   second_pos_stack = ++: sh (0.0)
|   |   second_pos_stack = NN: sh (7.0/2.0)
|   |   second_pos_stack = EN: sh (0.0)
|   |   second_pos_stack = AV: sh (13.0/7.0)
|   |   second_pos_stack = AJ: sh (0.0)
|   |   second_pos_stack = IK: ra.SS (1.0)
|   |   second_pos_stack = IP: sh (0.0)
|   |   second_pos_stack = PO: sh (0.0)
|   |   second_pos_stack = VV: sh (27.0/15.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: sh (0.0)
|   |   second_pos_stack = PR: sh (9.0/1.0)
|   |   second_pos_stack = RO: sh (0.0)
|   |   second_pos_stack = ID: sh (1.0)
|   |   second_pos_stack = PN: sh (0.0)
|   |   second_pos_stack = IC: sh (0.0)
|   |   second_pos_stack = MN: sh (0.0)
|   |   second_pos_stack = UK: sh (0.0)
|   |   second_pos_stack = VN: sh (0.0)
|   |   second_pos_stack = QV: sh (16.0/6.0)
|   |   second_pos_stack = WV: sh (0.0)
|   |   second_pos_stack = IQ: sh (0.0)
|   |   second_pos_stack = SV: sh (7.0/2.0)
|   |   second_pos_stack = HV: sh (11.0/4.0)
|   |   second_pos_stack = IR: sh (0.0)
|   |   second_pos_stack = IG: sh (0.0)
|   |   second_pos_stack = AN: sh (0.0)
|   |   second_pos_stack = MV: ra.SS (2.0/1.0)
|   |   second_pos_stack = IM: sh (0.0)
|   |   second_pos_stack = BV: sh (3.0/1.0)
|   |   second_pos_stack = KV: ra.OO (1.0)
|   |   second_pos_stack = GV: ra.SS (2.0/1.0)
|   |   second_pos_stack = FV: ra.OO (2.0/1.0)
|   |   second_pos_stack = PU: sh (0.0)
|   |   second_pos_stack = SP: sh (0.0)
|   |   second_pos_stack = XX: sh (0.0)
|   |   second_pos_stack = I?: sh (0.0)
|   |   second_pos_stack = IS: sh (0.0)
|   |   second_pos_stack = IT: sh (0.0)
|   |   second_pos_stack = IU: sh (0.0)
|   |   second_pos_stack = YY: ra.SS (1.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.IV (78.0/6.0)
|   |   can_do_leftarc = false: ra.VG (247.0/96.0)
|   first_pos_queue = AB
|   |   second_pos_stack = nil: ra.NA (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: ra.PL (2.0/1.0)
|   |   |   can_do_leftarc = false: ra.NA (115.0/78.0)
|   |   second_pos_stack = ++: ra.NA (0.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: sh (2.0)
|   |   |   can_do_leftarc = false: ra.PL (5.0/3.0)
|   |   second_pos_stack = EN: ra.NA (0.0)
|   |   second_pos_stack = AV: ra.NA (8.0/6.0)
|   |   second_pos_stack = AJ: ra.NA (0.0)
|   |   second_pos_stack = IK: ra.MA (1.0)
|   |   second_pos_stack = IP: ra.NA (0.0)
|   |   second_pos_stack = PO: ra.NA (0.0)
|   |   second_pos_stack = VV: ra.PL (30.0/17.0)
|   |   second_pos_stack = AB: ra.NA (0.0)
|   |   second_pos_stack = TP: ra.NA (0.0)
|   |   second_pos_stack = PR: ra.PL (9.0/2.0)
|   |   second_pos_stack = RO: ra.NA (0.0)
|   |   second_pos_stack = ID: ra.NA (0.0)
|   |   second_pos_stack = PN: ra.NA (0.0)
|   |   second_pos_stack = IC: ra.NA (0.0)
|   |   second_pos_stack = MN: ra.NA (0.0)
|   |   second_pos_stack = UK: ra.DB (1.0)
|   |   second_pos_stack = VN: ra.NA (0.0)
|   |   second_pos_stack = QV: sh (9.0/4.0)
|   |   second_pos_stack = WV: ra.PL (1.0)
|   |   second_pos_stack = IQ: ra.NA (0.0)
|   |   second_pos_stack = SV: sh (6.0/3.0)
|   |   second_pos_stack = HV: ra.PL (14.0/8.0)
|   |   second_pos_stack = IR: ra.NA (0.0)
|   |   second_pos_stack = IG: ra.NA (0.0)
|   |   second_pos_stack = AN: sh (1.0)
|   |   second_pos_stack = MV: ra.AA (1.0)
|   |   second_pos_stack = IM: ra.NA (0.0)
|   |   second_pos_stack = BV: ra.CA (1.0)
|   |   second_pos_stack = KV: ra.NA (0.0)
|   |   second_pos_stack = GV: ra.NA (0.0)
|   |   second_pos_stack = FV: ra.RA (1.0)
|   |   second_pos_stack = PU: ra.NA (0.0)
|   |   second_pos_stack = SP: ra.NA (0.0)
|   |   second_pos_stack = XX: ra.NA (0.0)
|   |   second_pos_stack = I?: ra.NA (0.0)
|   |   second_pos_stack = IS: ra.NA (0.0)
|   |   second_pos_stack = IT: ra.NA (0.0)
|   |   second_pos_stack = IU: ra.NA (0.0)
|   |   second_pos_stack = YY: ra.TA (2.0)
|   first_pos_queue = TP: ra.OO (24.0/11.0)
|   first_pos_queue = PR: ra.OA (194.0/120.0)
|   first_pos_queue = RO: sh (13.0/5.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: ra.OO (9.0/4.0)
|   first_pos_queue = IC: sh (3.0/1.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (5.0)
|   first_pos_queue = VN: ra.OO (73.0/2.0)
|   first_pos_queue = QV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.MS (3.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (0.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (0.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (3.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: ra.+F (1.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (3.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: sh (1.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: ra.AA (1.0)
|   |   second_pos_stack = FV: ra.AN (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = WV: ra.AA (2.0)
|   first_pos_queue = IQ: ra.IQ (5.0)
|   first_pos_queue = SV
|   |   second_pos_stack = nil: ra.AA (0.0)
|   |   second_pos_stack = ROOT: ra.MS (7.0/4.0)
|   |   second_pos_stack = ++: ra.AA (0.0)
|   |   second_pos_stack = NN: ra.AA (0.0)
|   |   second_pos_stack = EN: ra.AA (0.0)
|   |   second_pos_stack = AV: ra.AA (0.0)
|   |   second_pos_stack = AJ: ra.AA (0.0)
|   |   second_pos_stack = IK: ra.AA (0.0)
|   |   second_pos_stack = IP: ra.AA (0.0)
|   |   second_pos_stack = PO: ra.AA (0.0)
|   |   second_pos_stack = VV: ra.AN (1.0)
|   |   second_pos_stack = AB: ra.AA (0.0)
|   |   second_pos_stack = TP: ra.AA (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: ra.AA (0.0)
|   |   second_pos_stack = ID: ra.AA (0.0)
|   |   second_pos_stack = PN: ra.AA (0.0)
|   |   second_pos_stack = IC: ra.AA (0.0)
|   |   second_pos_stack = MN: ra.AA (0.0)
|   |   second_pos_stack = UK: ra.AA (0.0)
|   |   second_pos_stack = VN: ra.AA (0.0)
|   |   second_pos_stack = QV: ra.TA (1.0)
|   |   second_pos_stack = WV: ra.AA (1.0)
|   |   second_pos_stack = IQ: ra.AA (0.0)
|   |   second_pos_stack = SV: ra.AA (0.0)
|   |   second_pos_stack = HV: ra.AA (2.0/1.0)
|   |   second_pos_stack = IR: ra.AA (0.0)
|   |   second_pos_stack = IG: ra.AA (0.0)
|   |   second_pos_stack = AN: ra.AA (0.0)
|   |   second_pos_stack = MV: ra.AA (0.0)
|   |   second_pos_stack = IM: ra.AA (0.0)
|   |   second_pos_stack = BV: ra.AA (0.0)
|   |   second_pos_stack = KV: ra.AA (0.0)
|   |   second_pos_stack = GV: ra.AA (0.0)
|   |   second_pos_stack = FV: ra.AA (0.0)
|   |   second_pos_stack = PU: ra.AA (0.0)
|   |   second_pos_stack = SP: ra.AA (0.0)
|   |   second_pos_stack = XX: ra.AA (0.0)
|   |   second_pos_stack = I?: ra.AA (0.0)
|   |   second_pos_stack = IS: ra.AA (0.0)
|   |   second_pos_stack = IT: ra.AA (0.0)
|   |   second_pos_stack = IU: ra.AA (0.0)
|   |   second_pos_stack = YY: ra.AA (0.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: ra.VG (4.0/2.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.+F (1.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: ra.+F (2.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: ra.VG (1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: la.AA (1.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: ra.AA (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: la.IV (1.0)
|   |   second_pos_stack = IM: la.IV (1.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (1.0)
|   first_pos_queue = IR: re (3.0)
|   first_pos_queue = IG: ra.IG (3.0/1.0)
|   first_pos_queue = AN: ra.OO (34.0)
|   first_pos_queue = MV: ra.MS (7.0/3.0)
|   first_pos_queue = IM: sh (2.0)
|   first_pos_queue = BV: ra.+F (8.0/6.0)
|   first_pos_queue = KV: re (4.0)
|   first_pos_queue = GV
|   |   second_pos_stack = nil: ra.VG (0.0)
|   |   second_pos_stack = ROOT: ra.VG (3.0)
|   |   second_pos_stack = ++: ra.VG (0.0)
|   |   second_pos_stack = NN: ra.VG (0.0)
|   |   second_pos_stack = EN: ra.VG (0.0)
|   |   second_pos_stack = AV: ra.VG (0.0)
|   |   second_pos_stack = AJ: ra.VG (0.0)
|   |   second_pos_stack = IK: ra.VG (0.0)
|   |   second_pos_stack = IP: ra.VG (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: ra.VG (5.0/2.0)
|   |   second_pos_stack = AB: ra.VG (0.0)
|   |   second_pos_stack = TP: ra.VG (0.0)
|   |   second_pos_stack = PR: re (1.0)
|   |   second_pos_stack = RO: ra.VG (0.0)
|   |   second_pos_stack = ID: ra.VG (0.0)
|   |   second_pos_stack = PN: ra.VG (0.0)
|   |   second_pos_stack = IC: ra.VG (0.0)
|   |   second_pos_stack = MN: ra.VG (0.0)
|   |   second_pos_stack = UK: ra.VG (0.0)
|   |   second_pos_stack = VN: ra.VG (0.0)
|   |   second_pos_stack = QV: ra.OA (1.0)
|   |   second_pos_stack = WV: ra.VG (0.0)
|   |   second_pos_stack = IQ: ra.VG (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: ra.VG (0.0)
|   |   second_pos_stack = IR: ra.VG (0.0)
|   |   second_pos_stack = IG: ra.VG (0.0)
|   |   second_pos_stack = AN: ra.VG (0.0)
|   |   second_pos_stack = MV: ra.VG (0.0)
|   |   second_pos_stack = IM: ra.VG (0.0)
|   |   second_pos_stack = BV: ra.VG (0.0)
|   |   second_pos_stack = KV: ra.VG (0.0)
|   |   second_pos_stack = GV: ra.VG (0.0)
|   |   second_pos_stack = FV: ra.VG (0.0)
|   |   second_pos_stack = PU: ra.VG (0.0)
|   |   second_pos_stack = SP: ra.VG (0.0)
|   |   second_pos_stack = XX: ra.VG (0.0)
|   |   second_pos_stack = I?: ra.VG (0.0)
|   |   second_pos_stack = IS: ra.VG (0.0)
|   |   second_pos_stack = IT: ra.VG (0.0)
|   |   second_pos_stack = IU: ra.VG (0.0)
|   |   second_pos_stack = YY: ra.VG (0.0)
|   first_pos_queue = FV: ra.+F (12.0/8.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: ra.XX (1.0)
|   first_pos_queue = I?
|   |   second_pos_stack = nil: ra.I? (0.0)
|   |   second_pos_stack = ROOT: ra.I? (7.0)
|   |   second_pos_stack = ++: ra.I? (0.0)
|   |   second_pos_stack = NN: ra.I? (0.0)
|   |   second_pos_stack = EN: ra.I? (0.0)
|   |   second_pos_stack = AV: ra.I? (0.0)
|   |   second_pos_stack = AJ: ra.I? (0.0)
|   |   second_pos_stack = IK: ra.I? (0.0)
|   |   second_pos_stack = IP: ra.I? (0.0)
|   |   second_pos_stack = PO: ra.I? (0.0)
|   |   second_pos_stack = VV: re (4.0)
|   |   second_pos_stack = AB: ra.I? (0.0)
|   |   second_pos_stack = TP: ra.I? (0.0)
|   |   second_pos_stack = PR: ra.I? (0.0)
|   |   second_pos_stack = RO: ra.I? (0.0)
|   |   second_pos_stack = ID: ra.I? (0.0)
|   |   second_pos_stack = PN: ra.I? (0.0)
|   |   second_pos_stack = IC: ra.I? (0.0)
|   |   second_pos_stack = MN: ra.I? (0.0)
|   |   second_pos_stack = UK: ra.I? (0.0)
|   |   second_pos_stack = VN: ra.I? (0.0)
|   |   second_pos_stack = QV: re (2.0)
|   |   second_pos_stack = WV: ra.I? (0.0)
|   |   second_pos_stack = IQ: ra.I? (0.0)
|   |   second_pos_stack = SV: ra.I? (0.0)
|   |   second_pos_stack = HV: ra.I? (0.0)
|   |   second_pos_stack = IR: ra.I? (0.0)
|   |   second_pos_stack = IG: ra.I? (0.0)
|   |   second_pos_stack = AN: ra.I? (0.0)
|   |   second_pos_stack = MV: ra.I? (0.0)
|   |   second_pos_stack = IM: ra.I? (0.0)
|   |   second_pos_stack = BV: ra.I? (0.0)
|   |   second_pos_stack = KV: ra.I? (0.0)
|   |   second_pos_stack = GV: ra.I? (0.0)
|   |   second_pos_stack = FV: ra.I? (0.0)
|   |   second_pos_stack = PU: ra.I? (0.0)
|   |   second_pos_stack = SP: ra.I? (0.0)
|   |   second_pos_stack = XX: ra.I? (0.0)
|   |   second_pos_stack = I?: ra.I? (0.0)
|   |   second_pos_stack = IS: ra.I? (0.0)
|   |   second_pos_stack = IT: ra.I? (0.0)
|   |   second_pos_stack = IU: ra.I? (0.0)
|   |   second_pos_stack = YY: ra.I? (0.0)
|   first_pos_queue = IS: re (1.0)
|   first_pos_queue = IT: re (5.0/2.0)
|   first_pos_queue = IU: ra.IU (2.0/1.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = PU
|   first_pos_queue = nil: re (16.0)
|   first_pos_queue = ROOT: la.++ (0.0)
|   first_pos_queue = ++: la.++ (0.0)
|   first_pos_queue = NN: la.++ (33.0/13.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV: la.++ (7.0/3.0)
|   first_pos_queue = AJ: sh (9.0/1.0)
|   first_pos_queue = IK: la.++ (0.0)
|   first_pos_queue = IP: ra.IP (11.0/2.0)
|   first_pos_queue = PO: sh (1.0)
|   first_pos_queue = VV: la.++ (14.0/6.0)
|   first_pos_queue = AB: sh (2.0)
|   first_pos_queue = TP: sh (4.0/1.0)
|   first_pos_queue = PR: sh (1.0)
|   first_pos_queue = RO: la.++ (1.0)
|   first_pos_queue = ID: la.++ (0.0)
|   first_pos_queue = PN: la.++ (6.0/1.0)
|   first_pos_queue = IC: ra.IC (1.0)
|   first_pos_queue = MN: la.++ (0.0)
|   first_pos_queue = UK: sh (5.0/1.0)
|   first_pos_queue = VN
|   |   second_pos_stack = nil: la.++ (0.0)
|   |   second_pos_stack = ROOT: la.VA (1.0)
|   |   second_pos_stack = ++: la.++ (0.0)
|   |   second_pos_stack = NN: la.++ (2.0)
|   |   second_pos_stack = EN: la.++ (0.0)
|   |   second_pos_stack = AV: la.++ (0.0)
|   |   second_pos_stack = AJ: la.++ (0.0)
|   |   second_pos_stack = IK: la.++ (1.0)
|   |   second_pos_stack = IP: la.++ (0.0)
|   |   second_pos_stack = PO: la.++ (0.0)
|   |   second_pos_stack = VV: la.++ (0.0)
|   |   second_pos_stack = AB: la.++ (0.0)
|   |   second_pos_stack = TP: la.++ (0.0)
|   |   second_pos_stack = PR: la.++ (0.0)
|   |   second_pos_stack = RO: la.++ (0.0)
|   |   second_pos_stack = ID: la.++ (0.0)
|   |   second_pos_stack = PN: la.++ (0.0)
|   |   second_pos_stack = IC: la.++ (0.0)
|   |   second_pos_stack = MN: la.++ (0.0)
|   |   second_pos_stack = UK: sh (1.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: la.++ (0.0)
|   |   second_pos_stack = WV: la.++ (0.0)
|   |   second_pos_stack = IQ: la.VA (2.0)
|   |   second_pos_stack = SV: la.++ (0.0)
|   |   second_pos_stack = HV: la.++ (0.0)
|   |   second_pos_stack = IR: la.++ (0.0)
|   |   second_pos_stack = IG: la.++ (0.0)
|   |   second_pos_stack = AN: la.++ (0.0)
|   |   second_pos_stack = MV: la.++ (0.0)
|   |   second_pos_stack = IM: la.++ (0.0)
|   |   second_pos_stack = BV: la.++ (0.0)
|   |   second_pos_stack = KV: la.++ (0.0)
|   |   second_pos_stack = GV: la.++ (0.0)
|   |   second_pos_stack = FV: la.++ (0.0)
|   |   second_pos_stack = PU: la.++ (0.0)
|   |   second_pos_stack = SP: la.++ (0.0)
|   |   second_pos_stack = XX: la.++ (0.0)
|   |   second_pos_stack = I?: la.++ (0.0)
|   |   second_pos_stack = IS: la.++ (0.0)
|   |   second_pos_stack = IT: la.++ (0.0)
|   |   second_pos_stack = IU: la.++ (0.0)
|   |   second_pos_stack = YY: la.++ (0.0)
|   first_pos_queue = QV: la.++ (3.0/2.0)
|   first_pos_queue = WV: la.++ (0.0)
|   first_pos_queue = IQ: la.++ (0.0)
|   first_pos_queue = SV: la.++ (0.0)
|   first_pos_queue = HV: sh (5.0/2.0)
|   first_pos_queue = IR: ra.JR (4.0/1.0)
|   first_pos_queue = IG: la.++ (0.0)
|   first_pos_queue = AN: la.++ (1.0)
|   first_pos_queue = MV: la.++ (0.0)
|   first_pos_queue = IM: sh (7.0)
|   first_pos_queue = BV: la.++ (0.0)
|   first_pos_queue = KV: la.++ (0.0)
|   first_pos_queue = GV: la.++ (0.0)
|   first_pos_queue = FV: la.++ (2.0)
|   first_pos_queue = PU: ra.HD (1.0)
|   first_pos_queue = SP: sh (1.0)
|   first_pos_queue = XX: la.++ (0.0)
|   first_pos_queue = I?: la.++ (0.0)
|   first_pos_queue = IS: la.++ (0.0)
|   first_pos_queue = IT: la.++ (0.0)
|   first_pos_queue = IU: la.++ (0.0)
|   first_pos_queue = YY: la.++ (0.0)
top_pos_stack = SP
|   first_pos_queue = nil: re (3.0)
|   first_pos_queue = ROOT: la.AT (0.0)
|   first_pos_queue = ++: sh (5.0)
|   first_pos_queue = NN: la.AT (111.0/21.0)
|   first_pos_queue = EN: sh (1.0)
|   first_pos_queue = AV
|   |   can_do_leftarc = true: la.SP (2.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = AJ: sh (9.0/5.0)
|   first_pos_queue = IK: re (7.0)
|   first_pos_queue = IP: re (17.0/1.0)
|   first_pos_queue = PO: sh (1.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.SS (3.0/1.0)
|   |   can_do_leftarc = false: re (3.0)
|   first_pos_queue = AB: sh (8.0/4.0)
|   first_pos_queue = TP: ra.CC (1.0)
|   first_pos_queue = PR
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (1.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: ra.OA (6.0/1.0)
|   |   second_pos_stack = EN: ra.OA (1.0)
|   |   second_pos_stack = AV: re (3.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (2.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (2.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: ra.AG (1.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: ra.TA (1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = RO: la.AT (0.0)
|   first_pos_queue = ID: la.AT (0.0)
|   first_pos_queue = PN: la.AT (0.0)
|   first_pos_queue = IC: ra.JC (1.0)
|   first_pos_queue = MN: la.AT (0.0)
|   first_pos_queue = UK: la.AT (0.0)
|   first_pos_queue = VN
|   |   can_do_leftarc = true: la.AT (20.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = QV: re (1.0)
|   first_pos_queue = WV: re (1.0)
|   first_pos_queue = IQ: la.AT (0.0)
|   first_pos_queue = SV: la.AT (0.0)
|   first_pos_queue = HV: la.AT (0.0)
|   first_pos_queue = IR: re (3.0)
|   first_pos_queue = IG: la.AT (0.0)
|   first_pos_queue = AN: la.AT (3.0)
|   first_pos_queue = MV: la.AT (0.0)
|   first_pos_queue = IM: la.AT (0.0)
|   first_pos_queue = BV: la.AT (0.0)
|   first_pos_queue = KV: la.AT (0.0)
|   first_pos_queue = GV: la.AT (0.0)
|   first_pos_queue = FV: la.AT (0.0)
|   first_pos_queue = PU: la.AT (0.0)
|   first_pos_queue = SP: ra.CC (3.0)
|   first_pos_queue = XX: la.AT (0.0)
|   first_pos_queue = I?: la.AT (0.0)
|   first_pos_queue = IS: la.AT (0.0)
|   first_pos_queue = IT: re (1.0)
|   first_pos_queue = IU: la.AT (0.0)
|   first_pos_queue = YY: la.AT (0.0)
top_pos_stack = XX
|   can_do_leftarc = true: la.XX (48.0/9.0)
|   can_do_leftarc = false: re (11.0/3.0)
top_pos_stack = I?: re (439.0/5.0)
top_pos_stack = IS
|   first_pos_queue = nil: re (3.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (7.0)
|   first_pos_queue = NN: sh (10.0/4.0)
|   first_pos_queue = EN: sh (2.0)
|   first_pos_queue = AV: re (4.0)
|   first_pos_queue = AJ: re (2.0/1.0)
|   first_pos_queue = IK: re (0.0)
|   first_pos_queue = IP: ra.IP (1.0)
|   first_pos_queue = PO: sh (14.0/2.0)
|   first_pos_queue = VV: re (11.0/1.0)
|   first_pos_queue = AB: sh (3.0/1.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR: re (3.0/1.0)
|   first_pos_queue = RO: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN: re (11.0)
|   first_pos_queue = IC: sh (3.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: sh (2.0)
|   first_pos_queue = VN: re (2.0/1.0)
|   first_pos_queue = QV: re (3.0/1.0)
|   first_pos_queue = WV: re (1.0)
|   first_pos_queue = IQ: re (0.0)
|   first_pos_queue = SV: re (4.0)
|   first_pos_queue = HV: re (5.0/1.0)
|   first_pos_queue = IR: re (0.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: re (0.0)
|   first_pos_queue = MV: la.IS (1.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: re (0.0)
|   first_pos_queue = KV: re (0.0)
|   first_pos_queue = GV: re (0.0)
|   first_pos_queue = FV: re (0.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (1.0)
|   first_pos_queue = I?: re (0.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (0.0)
|   first_pos_queue = IU: re (0.0)
|   first_pos_queue = YY: re (0.0)
top_pos_stack = IT
|   first_pos_queue = nil: re (2.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (35.0)
|   first_pos_queue = NN
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: sh (14.0/1.0)
|   |   second_pos_stack = ++: la.IT (2.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.IT (8.0/1.0)
|   |   |   can_do_leftarc = false: re (46.0/2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (10.0/3.0)
|   |   second_pos_stack = AJ: la.AT (2.0/1.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: la.IT (3.0/1.0)
|   |   second_pos_stack = VV: re (16.0/8.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: la.JT (2.0/1.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: la.DT (3.0/1.0)
|   |   second_pos_stack = ID: la.JT (1.0)
|   |   second_pos_stack = PN: re (1.0)
|   |   second_pos_stack = IC: la.IT (1.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN
|   |   |   can_do_leftarc = true: la.IT (2.0)
|   |   |   can_do_leftarc = false: re (4.0)
|   |   second_pos_stack = QV: sh (2.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: sh (1.0)
|   |   second_pos_stack = HV: re (2.0/1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (2.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: sh (2.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = EN: sh (28.0/1.0)
|   first_pos_queue = AV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.IT (9.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN: re (4.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (6.0/1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (13.0)
|   |   second_pos_stack = AB: re (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (3.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (2.0/1.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (1.0)
|   |   second_pos_stack = HV: re (1.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = AJ: sh (16.0/6.0)
|   first_pos_queue = IK: re (3.0/1.0)
|   first_pos_queue = IP: re (1.0)
|   first_pos_queue = PO: sh (57.0/7.0)
|   first_pos_queue = VV
|   |   can_do_leftarc = true: la.IT (44.0/7.0)
|   |   can_do_leftarc = false: re (65.0)
|   first_pos_queue = AB: sh (67.0/14.0)
|   first_pos_queue = TP: re (5.0/2.0)
|   first_pos_queue = PR
|   |   can_do_leftarc = true: sh (7.0/1.0)
|   |   can_do_leftarc = false: re (50.0/8.0)
|   first_pos_queue = RO
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: sh (3.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (1.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (2.0/1.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO
|   |   |   can_do_leftarc = true: la.IT (4.0/2.0)
|   |   |   can_do_leftarc = false: re (12.0/1.0)
|   |   second_pos_stack = ID: re (0.0)
|   |   second_pos_stack = PN: re (0.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = ID: re (0.0)
|   first_pos_queue = PN
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: re (0.0)
|   |   second_pos_stack = ++: re (0.0)
|   |   second_pos_stack = NN: re (2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: sh (2.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (0.0)
|   |   second_pos_stack = VV: re (0.0)
|   |   second_pos_stack = AB: re (0.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: la.++ (5.0/1.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (0.0)
|   |   second_pos_stack = QV: re (0.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (0.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (1.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (0.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (0.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IC: re (0.0)
|   first_pos_queue = MN: la.IT (1.0)
|   first_pos_queue = UK: sh (21.0)
|   first_pos_queue = VN: re (21.0/8.0)
|   first_pos_queue = QV: re (12.0/5.0)
|   first_pos_queue = WV: re (2.0)
|   first_pos_queue = IQ: re (0.0)
|   first_pos_queue = SV
|   |   can_do_leftarc = true: la.IT (2.0/1.0)
|   |   can_do_leftarc = false: re (5.0)
|   first_pos_queue = HV
|   |   second_pos_stack = nil: re (0.0)
|   |   second_pos_stack = ROOT: la.IT (10.0)
|   |   second_pos_stack = ++: sh (1.0)
|   |   second_pos_stack = NN
|   |   |   can_do_leftarc = true: la.IT (2.0)
|   |   |   can_do_leftarc = false: re (2.0)
|   |   second_pos_stack = EN: re (0.0)
|   |   second_pos_stack = AV: re (4.0)
|   |   second_pos_stack = AJ: re (0.0)
|   |   second_pos_stack = IK: re (0.0)
|   |   second_pos_stack = IP: re (0.0)
|   |   second_pos_stack = PO: re (1.0)
|   |   second_pos_stack = VV: re (5.0)
|   |   second_pos_stack = AB: sh (1.0)
|   |   second_pos_stack = TP: re (0.0)
|   |   second_pos_stack = PR: re (0.0)
|   |   second_pos_stack = RO: re (0.0)
|   |   second_pos_stack = ID: re (1.0)
|   |   second_pos_stack = PN: re (2.0)
|   |   second_pos_stack = IC: re (0.0)
|   |   second_pos_stack = MN: re (0.0)
|   |   second_pos_stack = UK: re (0.0)
|   |   second_pos_stack = VN: re (1.0)
|   |   second_pos_stack = QV: re (1.0)
|   |   second_pos_stack = WV: re (0.0)
|   |   second_pos_stack = IQ: re (0.0)
|   |   second_pos_stack = SV: re (0.0)
|   |   second_pos_stack = HV: re (2.0)
|   |   second_pos_stack = IR: re (0.0)
|   |   second_pos_stack = IG: re (0.0)
|   |   second_pos_stack = AN: re (0.0)
|   |   second_pos_stack = MV: re (0.0)
|   |   second_pos_stack = IM: re (0.0)
|   |   second_pos_stack = BV: re (1.0)
|   |   second_pos_stack = KV: re (0.0)
|   |   second_pos_stack = GV: re (0.0)
|   |   second_pos_stack = FV: re (1.0)
|   |   second_pos_stack = PU: re (0.0)
|   |   second_pos_stack = SP: re (0.0)
|   |   second_pos_stack = XX: re (0.0)
|   |   second_pos_stack = I?: re (0.0)
|   |   second_pos_stack = IS: re (0.0)
|   |   second_pos_stack = IT: re (0.0)
|   |   second_pos_stack = IU: re (0.0)
|   |   second_pos_stack = YY: re (0.0)
|   first_pos_queue = IR: re (1.0)
|   first_pos_queue = IG: re (0.0)
|   first_pos_queue = AN: sh (3.0/1.0)
|   first_pos_queue = MV: re (4.0)
|   first_pos_queue = IM: sh (7.0)
|   first_pos_queue = BV: re (4.0/1.0)
|   first_pos_queue = KV
|   |   can_do_leftarc = true: la.IT (3.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = GV
|   |   can_do_leftarc = true: la.IT (2.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   first_pos_queue = FV
|   |   can_do_leftarc = true: la.IT (3.0)
|   |   can_do_leftarc = false: re (4.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (1.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (0.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (0.0)
|   first_pos_queue = IU: re (0.0)
|   first_pos_queue = YY
|   |   can_do_leftarc = true: la.IT (3.0)
|   |   can_do_leftarc = false: re (2.0)
top_pos_stack = IU: re (88.0)
top_pos_stack = YY
|   first_pos_queue = nil: re (50.0)
|   first_pos_queue = ROOT: re (0.0)
|   first_pos_queue = ++: sh (1.0)
|   first_pos_queue = NN: sh (4.0/2.0)
|   first_pos_queue = EN: re (0.0)
|   first_pos_queue = AV: ra.MS (14.0/2.0)
|   first_pos_queue = AJ: ra.AT (1.0)
|   first_pos_queue = IK
|   |   second_pos_stack = nil: ra.IK (0.0)
|   |   second_pos_stack = ROOT
|   |   |   can_do_leftarc = true: sh (2.0)
|   |   |   can_do_leftarc = false: ra.IK (49.0)
|   |   second_pos_stack = ++: ra.IK (0.0)
|   |   second_pos_stack = NN: re (1.0)
|   |   second_pos_stack = EN: ra.IK (0.0)
|   |   second_pos_stack = AV: ra.IK (0.0)
|   |   second_pos_stack = AJ: ra.IK (0.0)
|   |   second_pos_stack = IK: ra.IK (0.0)
|   |   second_pos_stack = IP: ra.IK (0.0)
|   |   second_pos_stack = PO: ra.IK (0.0)
|   |   second_pos_stack = VV: re (5.0/1.0)
|   |   second_pos_stack = AB: ra.IK (0.0)
|   |   second_pos_stack = TP: ra.IK (0.0)
|   |   second_pos_stack = PR: ra.IK (0.0)
|   |   second_pos_stack = RO: ra.IK (0.0)
|   |   second_pos_stack = ID: ra.IK (0.0)
|   |   second_pos_stack = PN: ra.IK (0.0)
|   |   second_pos_stack = IC: ra.IK (0.0)
|   |   second_pos_stack = MN: ra.IK (0.0)
|   |   second_pos_stack = UK: ra.IK (0.0)
|   |   second_pos_stack = VN: ra.IK (0.0)
|   |   second_pos_stack = QV: ra.IK (0.0)
|   |   second_pos_stack = WV: ra.IK (0.0)
|   |   second_pos_stack = IQ: ra.IK (0.0)
|   |   second_pos_stack = SV: ra.IK (0.0)
|   |   second_pos_stack = HV: ra.IK (0.0)
|   |   second_pos_stack = IR: ra.IK (0.0)
|   |   second_pos_stack = IG: ra.IK (0.0)
|   |   second_pos_stack = AN: ra.IK (0.0)
|   |   second_pos_stack = MV: ra.IK (0.0)
|   |   second_pos_stack = IM: ra.IK (0.0)
|   |   second_pos_stack = BV: ra.IK (0.0)
|   |   second_pos_stack = KV: ra.IK (0.0)
|   |   second_pos_stack = GV: ra.IK (0.0)
|   |   second_pos_stack = FV: ra.IK (0.0)
|   |   second_pos_stack = PU: ra.IK (0.0)
|   |   second_pos_stack = SP: ra.IK (0.0)
|   |   second_pos_stack = XX: ra.IK (0.0)
|   |   second_pos_stack = I?: ra.IK (0.0)
|   |   second_pos_stack = IS: ra.IK (0.0)
|   |   second_pos_stack = IT: ra.IK (0.0)
|   |   second_pos_stack = IU: ra.IK (0.0)
|   |   second_pos_stack = YY: ra.IK (0.0)
|   first_pos_queue = IP: ra.IP (32.0/2.0)
|   first_pos_queue = PO: sh (7.0/2.0)
|   first_pos_queue = VV
|   |   second_pos_stack = nil: ra.MS (0.0)
|   |   second_pos_stack = ROOT: ra.MS (21.0)
|   |   second_pos_stack = ++: ra.MS (0.0)
|   |   second_pos_stack = NN: ra.MS (0.0)
|   |   second_pos_stack = EN: ra.MS (0.0)
|   |   second_pos_stack = AV: ra.MS (0.0)
|   |   second_pos_stack = AJ: ra.MS (0.0)
|   |   second_pos_stack = IK: la.MS (2.0/1.0)
|   |   second_pos_stack = IP: ra.MS (0.0)
|   |   second_pos_stack = PO: ra.MS (0.0)
|   |   second_pos_stack = VV: ra.MS (0.0)
|   |   second_pos_stack = AB: ra.MS (0.0)
|   |   second_pos_stack = TP: ra.MS (0.0)
|   |   second_pos_stack = PR: ra.MS (0.0)
|   |   second_pos_stack = RO: ra.MS (0.0)
|   |   second_pos_stack = ID: ra.MS (0.0)
|   |   second_pos_stack = PN: ra.MS (0.0)
|   |   second_pos_stack = IC: ra.MS (0.0)
|   |   second_pos_stack = MN: ra.MS (0.0)
|   |   second_pos_stack = UK: ra.MS (0.0)
|   |   second_pos_stack = VN: ra.MS (0.0)
|   |   second_pos_stack = QV: ra.MS (0.0)
|   |   second_pos_stack = WV: ra.MS (0.0)
|   |   second_pos_stack = IQ: ra.MS (0.0)
|   |   second_pos_stack = SV: ra.MS (0.0)
|   |   second_pos_stack = HV: ra.MS (0.0)
|   |   second_pos_stack = IR: ra.MS (0.0)
|   |   second_pos_stack = IG: ra.MS (0.0)
|   |   second_pos_stack = AN: ra.MS (0.0)
|   |   second_pos_stack = MV: ra.MS (0.0)
|   |   second_pos_stack = IM: ra.MS (0.0)
|   |   second_pos_stack = BV: ra.MS (0.0)
|   |   second_pos_stack = KV: ra.MS (0.0)
|   |   second_pos_stack = GV: ra.MS (0.0)
|   |   second_pos_stack = FV: ra.MS (0.0)
|   |   second_pos_stack = PU: ra.MS (0.0)
|   |   second_pos_stack = SP: ra.MS (0.0)
|   |   second_pos_stack = XX: ra.MS (0.0)
|   |   second_pos_stack = I?: ra.MS (0.0)
|   |   second_pos_stack = IS: ra.MS (0.0)
|   |   second_pos_stack = IT: ra.MS (0.0)
|   |   second_pos_stack = IU: ra.MS (0.0)
|   |   second_pos_stack = YY: ra.MS (0.0)
|   first_pos_queue = AB
|   |   can_do_leftarc = true: la.XX (2.0/1.0)
|   |   can_do_leftarc = false: ra.MS (6.0/3.0)
|   first_pos_queue = TP: re (0.0)
|   first_pos_queue = PR: la.XX (1.0)
|   first_pos_queue = RO: re (0.0)
|   first_pos_queue = ID: ra.HD (4.0)
|   first_pos_queue = PN: re (0.0)
|   first_pos_queue = IC: re (0.0)
|   first_pos_queue = MN: re (0.0)
|   first_pos_queue = UK: re (0.0)
|   first_pos_queue = VN: ra.MS (1.0)
|   first_pos_queue = QV: re (0.0)
|   first_pos_queue = WV: ra.MS (2.0)
|   first_pos_queue = IQ: la.MS (2.0/1.0)
|   first_pos_queue = SV: ra.MS (4.0)
|   first_pos_queue = HV: ra.MS (5.0/1.0)
|   first_pos_queue = IR: ra.JR (1.0)
|   first_pos_queue = IG: ra.IG (1.0)
|   first_pos_queue = AN: ra.HD (1.0)
|   first_pos_queue = MV: ra.MS (3.0)
|   first_pos_queue = IM: re (0.0)
|   first_pos_queue = BV: ra.MS (1.0)
|   first_pos_queue = KV: ra.MS (2.0)
|   first_pos_queue = GV: ra.MS (1.0)
|   first_pos_queue = FV: ra.MS (2.0)
|   first_pos_queue = PU: re (0.0)
|   first_pos_queue = SP: re (0.0)
|   first_pos_queue = XX: re (0.0)
|   first_pos_queue = I?: re (1.0)
|   first_pos_queue = IS: re (0.0)
|   first_pos_queue = IT: re (1.0)
|   first_pos_queue = IU: ra.IU (5.0/2.0)
|   first_pos_queue = YY: ra.MS (1.0)

Number of Leaves  :   12976

Size of the tree :  13569


Time taken to build model: 2.32 seconds

=== Stratified cross-validation ===
=== Summary ===

Correctly Classified Instances      275459               81.7509 %
Incorrectly Classified Instances     61490               18.2491 %
Kappa statistic                          0.7846
Mean absolute error                      0.0045
Root mean squared error                  0.048 
Relative absolute error                 29.7544 %
Root relative squared error             55.2864 %
Coverage of cases (0.95 level)          96.8713 %
Mean rel. region size (0.95 level)       2.2102 %
Total Number of Instances           336949     

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.935    0.002    0.919      0.935    0.927      0.926    0.997     0.932     la.++
                 0.071    0.000    0.225      0.071    0.108      0.126    0.960     0.119     la.+A
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.570     0.002     la.+F
                 0.599    0.005    0.597      0.599    0.598      0.593    0.973     0.602     la.AA
                 0.286    0.000    0.400      0.286    0.333      0.338    0.735     0.166     la.AG
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.491     0.000     la.AN
                 0.990    0.000    0.979      0.990    0.984      0.984    0.998     0.978     la.AT
                 0.000    0.000    0.000      0.000    0.000      0.000    0.491     0.000     la.C+
                 0.277    0.001    0.379      0.277    0.320      0.323    0.966     0.264     la.CA
                 0.934    0.003    0.937      0.934    0.935      0.932    0.997     0.963     la.DT
                 0.000    0.000    0.000      0.000    0.000      0.000    0.495     0.000     la.ES
                 0.000    0.000    0.000      0.000    0.000      0.000    0.483     0.000     la.ET
                 0.000    0.000    0.000      0.000    0.000      0.000    0.942     0.006     la.FO
                 0.000    0.000    0.000      0.000    0.000      0.000    0.984     0.102     la.FS
                 0.000    0.000    0.000      0.000    0.000      0.000    0.493     0.000     la.FV
                 0.911    0.000    0.872      0.911    0.891      0.891    0.995     0.922     la.IC
                 0.733    0.000    0.647      0.733    0.688      0.689    0.967     0.712     la.IG
                 0.971    0.000    0.924      0.971    0.947      0.947    0.998     0.938     la.IK
                 0.995    0.000    0.981      0.995    0.988      0.988    0.998     0.983     la.IM
                 0.000    0.000    0.000      0.000    0.000      0.000    0.978     0.000     la.IP
                 0.563    0.000    0.750      0.563    0.643      0.649    0.953     0.589     la.IQ
                 0.950    0.000    0.714      0.950    0.815      0.824    0.985     0.699     la.IR
                 0.000    0.000    0.000      0.000    0.000      0.000    0.667     0.021     la.IS
                 0.770    0.000    0.700      0.770    0.733      0.734    0.960     0.737     la.IT
                 0.730    0.000    0.813      0.730    0.769      0.770    0.965     0.702     la.IV
                 0.024    0.000    0.333      0.024    0.044      0.089    0.952     0.233     la.JC
                 0.400    0.000    0.571      0.400    0.471      0.478    0.850     0.241     la.JG
                 0.000    0.000    0.000      0.000    0.000      0.000    0.744     0.033     la.JR
                 0.000    0.000    0.000      0.000    0.000      0.000    1.000     0.058     la.JT
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.677     0.027     la.KA
                 0.021    0.000    0.182      0.021    0.038      0.062    0.930     0.085     la.MA
                 0.069    0.000    0.105      0.069    0.083      0.085    0.667     0.030     la.MS
                 0.196    0.001    0.397      0.196    0.262      0.278    0.968     0.242     la.NA
                 0.022    0.000    0.278      0.022    0.041      0.078    0.950     0.091     la.OA
                 0.007    0.000    0.130      0.007    0.013      0.030    0.933     0.059     la.OO
                 0.604    0.000    0.744      0.604    0.667      0.670    0.928     0.580     la.PA
                 0.000    0.000    0.000      0.000    0.000      0.000    0.998     0.003     la.PL
                 0.000    0.000    0.000      0.000    0.000      0.000    0.491     0.000     la.PT
                 0.285    0.001    0.354      0.285    0.316      0.316    0.959     0.249     la.RA
                 0.213    0.000    0.688      0.213    0.326      0.383    0.958     0.269     la.SP
                 0.970    0.006    0.859      0.970    0.911      0.909    0.993     0.897     la.SS
                 0.542    0.006    0.318      0.542    0.401      0.411    0.952     0.271     la.TA
                 0.875    0.001    0.932      0.875    0.903      0.902    0.998     0.955     la.UK
                 0.005    0.000    0.111      0.005    0.009      0.022    0.949     0.094     la.VA
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.602     0.001     la.XA
                 0.000    0.000    0.000      0.000    0.000      0.000    0.748     0.015     la.XF
                 0.000    0.000    0.000      0.000    0.000      0.000    0.977     0.010     la.XT
                 0.390    0.000    0.765      0.390    0.517      0.546    0.852     0.297     la.XX
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.574     0.000     ra.++
                 0.436    0.005    0.189      0.436    0.264      0.284    0.977     0.197     ra.+A
                 0.027    0.001    0.150      0.027    0.046      0.062    0.912     0.095     ra.+F
                 0.083    0.002    0.328      0.083    0.132      0.160    0.951     0.219     ra.AA
                 0.033    0.000    0.474      0.033    0.063      0.126    0.978     0.051     ra.AG
                 0.040    0.000    0.330      0.040    0.071      0.114    0.885     0.073     ra.AN
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.787     0.003     ra.AT
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.804     0.007     ra.BS
                 0.079    0.000    0.300      0.079    0.125      0.154    0.887     0.112     ra.C+
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.961     0.052     ra.CA
                 0.641    0.006    0.602      0.641    0.621      0.615    0.964     0.551     ra.CC
                 0.000    0.000    0.000      0.000    0.000      0.000    0.822     0.001     ra.CJ
                 0.116    0.000    0.344      0.116    0.173      0.199    0.895     0.151     ra.DB
                 0.013    0.000    0.333      0.013    0.025      0.065    0.914     0.042     ra.DT
                 0.033    0.000    0.192      0.033    0.056      0.079    0.898     0.082     ra.EF
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.642     0.001     ra.EO
                 0.229    0.002    0.230      0.229    0.230      0.228    0.949     0.131     ra.ES
                 0.490    0.007    0.623      0.490    0.548      0.543    0.972     0.586     ra.ET
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.863     0.015     ra.FO
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.972     0.093     ra.FS
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.747     0.020     ra.FV
                 0.922    0.000    0.988      0.922    0.954      0.954    0.986     0.939     ra.HD
                 0.860    0.000    0.919      0.860    0.889      0.889    0.985     0.912     ra.I?
                 0.018    0.000    0.074      0.018    0.029      0.037    0.935     0.147     ra.IC
                 0.643    0.000    0.714      0.643    0.677      0.678    0.900     0.651     ra.IG
                 0.585    0.002    0.781      0.585    0.669      0.673    0.990     0.785     ra.IK
                 0.000    0.000    0.000      0.000    0.000      0.000    0.500     0.000     ra.IM
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.974     0.068     ra.IO
                 0.949    0.000    0.992      0.949    0.970      0.970    0.996     0.976     ra.IP
                 0.683    0.000    0.815      0.683    0.743      0.746    0.987     0.835     ra.IQ
                 0.041    0.000    0.097      0.041    0.057      0.063    0.938     0.209     ra.IR
                 0.800    0.000    0.769      0.800    0.784      0.784    0.918     0.684     ra.IS
                 0.598    0.000    0.643      0.598    0.620      0.620    0.975     0.602     ra.IT
                 0.784    0.000    0.793      0.784    0.789      0.789    0.966     0.793     ra.IU
                 0.800    0.000    0.727      0.800    0.762      0.763    0.900     0.514     ra.IV
                 0.633    0.001    0.627      0.633    0.630      0.629    0.982     0.651     ra.JC
                 0.000    0.000    0.000      0.000    0.000      0.000    1.000     0.064     ra.JG
                 0.304    0.000    0.362      0.304    0.331      0.331    0.953     0.346     ra.JR
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.946     0.125     ra.JT
                 0.012    0.000    0.133      0.012    0.022      0.039    0.843     0.026     ra.KA
                 0.209    0.002    0.204      0.209    0.206      0.204    0.956     0.159     ra.MA
                 0.000    0.000    0.000      0.000    0.000      0.000    0.499     0.000     ra.MD
                 0.236    0.002    0.376      0.236    0.290      0.296    0.958     0.336     ra.MS
                 0.291    0.002    0.294      0.291    0.292      0.290    0.981     0.225     ra.NA
                 0.883    0.015    0.422      0.883    0.571      0.604    0.979     0.411     ra.OA
                 0.802    0.016    0.569      0.802    0.666      0.665    0.984     0.665     ra.OO
                 0.843    0.006    0.864      0.843    0.853      0.846    0.993     0.848     ra.PA
                 0.632    0.004    0.427      0.632    0.510      0.517    0.985     0.377     ra.PL
                 0.041    0.000    0.550      0.041    0.076      0.150    0.966     0.175     ra.PT
                 0.002    0.000    0.174      0.002    0.004      0.017    0.972     0.185     ra.RA
                 0.924    0.002    0.943      0.924    0.933      0.931    0.998     0.942     ra.ROOT
                 0.830    0.003    0.743      0.830    0.784      0.782    0.989     0.776     ra.SP
                 0.479    0.005    0.537      0.479    0.506      0.502    0.979     0.487     ra.SS
                 0.000    0.000    0.000      0.000    0.000      0.000    0.500     0.000     ra.ST
                 0.025    0.001    0.193      0.025    0.045      0.068    0.932     0.101     ra.TA
                 0.000    0.000    0.000      0.000    0.000      0.000    0.975     0.089     ra.UK
                 0.000    0.000    0.000      0.000    0.000      0.000    0.857     0.003     ra.VA
                 0.892    0.003    0.781      0.892    0.833      0.833    0.991     0.821     ra.VG
                 0.000    0.000    0.000      0.000    0.000      -0.000   0.895     0.014     ra.VO
                 0.000    0.000    0.000      0.000    0.000      0.000    0.928     0.028     ra.VS
                 0.000    0.000    0.000      0.000    0.000      0.000    0.684     0.002     ra.XA
                 0.000    0.000    0.000      0.000    0.000      0.000    0.500     0.000     ra.XF
                 0.009    0.000    0.400      0.009    0.018      0.061    0.917     0.037     ra.XX
                 0.928    0.059    0.872      0.928    0.899      0.854    0.983     0.959     re
                 0.861    0.035    0.870      0.861    0.865      0.829    0.974     0.930     sh
Weighted Avg.    0.818    0.027    0.801      0.818    0.803      0.783    0.981     0.836     

=== Confusion Matrix ===

     a     b     c     d     e     f     g     h     i     j     k     l     m     n     o     p     q     r     s     t     u     v     w     x     y     z    aa    ab    ac    ad    ae    af    ag    ah    ai    aj    ak    al    am    an    ao    ap    aq    ar    as    at    au    av    aw    ax    ay    az    ba    bb    bc    bd    be    bf    bg    bh    bi    bj    bk    bl    bm    bn    bo    bp    bq    br    bs    bt    bu    bv    bw    bx    by    bz    ca    cb    cc    cd    ce    cf    cg    ch    ci    cj    ck    cl    cm    cn    co    cp    cq    cr    cs    ct    cu    cv    cw    cx    cy    cz    da    db    dc    dd    de    df    dg    dh    di   <-- classified as
  5807     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     1    23     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    13   357 |     a = la.++
     7    39     0    53     0     0     0     0    60     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     2     0    21     0     0     0     0     0     5     0     0   236     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2   123 |     b = la.+A
|     c = la.+F
     1    24     2  2485     4     1    11     0    63     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     9     0     0     0     0     4     9     2    23     3     2     2     0     0   182    11    58   489     0     1     0     0     0     0     0     0     2     2     0     0     0     0     1     0    96     0     0     0     0     0     4     9     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0    14     0     0     6    12     0     1     0     0     1     0     0     0     0     0    51     0     0     0     0     0    87   470 |     d = la.AA
     0     0     0     7     6     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     3 |     e = la.AG
|     f = la.AN
     0     0     0    18     0     0  6506     0     0    22     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     2     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     2    15 |     g = la.AT
|     h = la.C+
     0    31     0    85     0     0     1     0   199     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0    18     0     0     0     0     0     3     1     0   129     0     3     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3   241 |     i = la.CA
     0     0     0     0     0     0    55     0     2 14798     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0    11     2     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0    43     0     0     0     0     0     0    12     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    53     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     6   856 |     j = la.DT
|     k = la.ES
     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0 |     l = la.ET
     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    38     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1 |     m = la.FO
|     n = la.FS
|     o = la.FV
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   655     0     1     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    61 |     p = la.IC
|     q = la.IG
|     r = la.IK
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0  2067     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     7 |     s = la.IM
|     t = la.IP
|     u = la.IQ
|     v = la.IR
|     w = la.IS
|     x = la.IT
     2     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   252     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     1     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     2     0     2     0     0     0     0     0     0     0     0     0    63     0     0     0     0     0    10     0 |     y = la.IV
|     z = la.JC
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     2 |    aa = la.JG
|    ab = la.JR
|    ac = la.JT
     0     1     0    17     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     9     6     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     2     1 |    ad = la.KA
     0     9     0    85     0     0     2     0    12     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    10     0    31     1     0     0     0     0    17     3     3   254     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     4     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    12    24 |    ae = la.MA
     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     3     2     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     5     0     0     0     2     1     1     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     4     1 |    af = la.MS
     1    20     0    46     0     0     0     0    32     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0   127     0     0     0     0     0     6     0     0   365     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     5    45 |    ag = la.NA
     0     0     0    85     1     0     0     0     0     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     5     0     0     0     0    78     0     8    15     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    12    12 |    ah = la.OA
     0     0     0    14     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0   387     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     6     0     0     0     0     0    19     3 |    ai = la.OO
     0     0     0     1     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    61     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    16     0     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4    11 |    aj = la.PA
|    ak = la.PL
|    al = la.PT
     0     7     0   260     2     0     0     0     1     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4     0    19     5     0     0     0     0   259     0     8   301     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     5     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0    21    11 |    am = la.RA
     0     0     0    20     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0    86   277     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    16     0 |    an = la.SP
     0     0     0    95     0     0     0     0     0    43     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     2     2     0     0    16     0     0     0     7    13 12122    14     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     4     0     0     0     0     0     1    15     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     1     0     0     0     0     0     0     2     0     0     0     0    20     0     0     0     0     0   121    17 |    ao = la.SS
     0    12     0   370     2     0     1     0     5    19     0     0     0     0     0     0     0     0     0     0     0     1     0     0     4     0     0     0     0     1    14     2    60     1     0     0     0     0   115     0    57   889     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     1     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     2     0     0     1     7     0     0     0     0     0     1     0     0     0     0     5     0     0     0     0     0    37    27 |    ap = la.TA
     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     3  3785     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   532 |    aq = la.UK
    12     2     0    36     0     0     0     0    65     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     4     0     0     0     0     0     1     0     0    31     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    67 |    ar = la.VA
     0     2     0     3     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     2     4     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     1     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     4 |    as = la.XA
     0     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     7     4     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0 |    at = la.XF
|    au = la.XT
     1     0     0     1     0     0     1     0     1     7     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     9     2     0     0     0     0     0    39     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    19     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     8    11 |    av = la.XX
|    aw = ra.++
|    ax = ra.+A
     0     0     0    36     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0    10    37    23     0     1     0     0     0     0    25     0     0     0     0     0    42     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     3     5     0    69    10    55   327     4    13     0     0     0    67    40     0     2     0     0   263     0     0     0     0     0   295    42 |    ay = ra.+F
     0     0     0     9     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     1     0     1     0     0     0     0   225    16   306     3     2     0     0     0     1     5     0     3     0     0     1    47    26     0     0     0     1     0     0     0     1     0     0     0     0     0     0     0     0     0     1     0     0     0     1    76     0    40    63  1781   170     0   328     0     5     0    41     3     0    21     0     0    36     0     0     0     0     0   283   198 |    az = ra.AA
|    ba = ra.AG
     0     0     0     3     0     0     3     0     1    81     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     1     3     2     0    31     0     0     0     0   338     0     0     0     0     0    13    40     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     7     1    14    44     6     2     0     0     0    14     0     0     0     0     0     1     0     0     0     0     0   131    39 |    bb = ra.AN
|    bc = ra.AT
     1     1     0     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     6     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    43     1 |    bd = ra.BS
     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     9     0    19     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     6     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0    23    49 |    be = ra.C+
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   127     0     1     0     0     0     0     0     0     0     0     1     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    57     0     0    45     0     0     0    47     0     0     0     0     0     0     8     0     0     0     0     0     0     0     1     6    29 |    bf = ra.CA
     1     0     0    80     0     0     9     0     2   410     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     1     0     0     1     0     0     0     0     0     5     1     0     0     0     0     0     0     0     0    22     2     0    15     0     0     0     0  3173     0     0     0     0     0    22    22     0     0     0     6     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4     0     0    28     0     0    80    21     2     0     0     0     0     5     0     0     0     0    36     0     0     0     0     0   727   275 |    bg = ra.CC
|    bh = ra.CJ
|    bi = ra.DB
     0     0     0     3     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     1     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4    62 |    bj = ra.DT
     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     5     0     0    58     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    85     0 |    bk = ra.EF
|    bl = ra.EO
     0     0     0     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     5    11     0     1     0     0     0     0     1     0     0     0     0     0   167     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0    70     0     2   331     0     0     0     0     0    19    24     0     0     0     0     0     0     0     0     0     0    82     7 |    bm = ra.ES
     0     1     0     0     0     0     0     0     2    30     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     1     3     0     0     2     0   420     3     0     0     0     0     0     0     0     0     0     1     1    13     0     0     5     0   148     0     0     0     9     0     0  3701     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     4     1     0     0     0     3     0     0     0     0     1     0     0     0     0     0     0     0     0  3059   149 |    bn = ra.ET
|    bo = ra.FO
|    bp = ra.FS
|    bq = ra.FV
     2     0     0     3     0     0     1     0     0    29     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     5     0     0     0     0     1     0     0     0     0     0     0     1     0     0     1     1     0     3     0     0     0     0    90     0     0     0     0     0     1     5     0     0     0  4172     0     0     0     1     0     0     0     0     0     0     1     0     0     0     0     1     0     0     0     0     1     0     0    13    38     4     0     0     0     0     1     0     0     0     0    11     0     0     0     0     0    95    45 |    br = ra.HD
     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   375     0     0     0     0     0     4     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    56     0 |    bs = ra.I?
|    bt = ra.IC
|    bu = ra.IG
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0  2027     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0  1330   107 |    bv = ra.IK
|    bw = ra.IM
|    bx = ra.IO
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     4     0     0  8200     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   429     0 |    by = ra.IP
|    bz = ra.IQ
|    ca = ra.IR
|    cb = ra.IS
|    cc = ra.IT
|    cd = ra.IU
|    ce = ra.IV
|    cf = ra.JC
|    cg = ra.JG
|    ch = ra.JR
|    ci = ra.JT
     0     0     0     5     0     0     1     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     9     9    18     0     0     0     0     0     0     5     0     0     0     0     0    40     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     6     7     0    31     2    36   115     0    11     0     0     0    72    16     0     2     0     0     2     0     0     0     0     0    95    27 |    cj = ra.KA
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0   234     1    19     0     0     0     0     0     1     0     0     0     0     0     0    18     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   186     0     5   175    53    22     0    48     0     0     0     8     3     0    27     0     0     7     0     0     0     0     0    25    58 |    ck = ra.MA
|    cl = ra.MD
     1     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     0     2     7     0     0     0     0     0     0     0     2     7     5     0     0     0     0     0     0     1     0     0     0     0     0   118    20     0     0     0     0     0     0     0     1     0     0     4     0     0     0     0     0     0     1     0     1     0     3     4     0   318     0     4   516     0     0     0     0     0     6     8     0     0     0     0   215     0     0     0     0     0    85    12 |    cm = ra.MS
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   277     1     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1   158     0     0   265     0     0     0    92     0     0     0     0     1     0    45     0     0     0     0     0     0     0     0     6    63 |    cn = ra.NA
     0     0     0     8     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     8     9     3     2     0     0     0     0     0     0     0     0     0     0    45    46     0     0     0     0     0     0     0     1     0     0     1     0     0     0     0     0     1     0     0     0     0     0     2     0    13     0  3634    77     0     2     0     1     0     2     2     0     0     0     0    58     0     0     0     0     0   190     6 |    co = ra.OA
     0     0     0    24     0     0     5     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     5     0     0     0     0     0     0     0     0     4    35   115     0     2     0     0     1     0    12     0     0     0     1     1     4     1     1     0     0     0     0     1     0     0     0     0     0     1     0     0     0     0     0     2     0     0     0     5     0     0    59     0    60  7062     0     6     0     0     0    52   371     0     4     0     0    28     1     0     0     0     0   645   294 |    cp = ra.OO
     1     0     0    21     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     1     0     2     0     0     0     0     0     0     1     0     0     1     0     0     0     0    47     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     9     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0 12756     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0  1016  1281 |    cq = ra.PA
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   248     0     4     0     0     0     0     0     0     0     0    10     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    13     0     0    23   199    33     0   990     0     1     0     0     0     0     6     0     0     2     0     0     0     0     0     2    34 |    cr = ra.PL
|    cs = ra.PT
     0     0     0     0     0     0     0     0     5     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    64     2    15     2     0     0     0     0     0     6     0     2     0     0     0     0    58     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0    20     0     0    13  1652     9     1   147     0     4     0     0     1     0     6     0     0     0     0     0     0     0     0   182    51 |    ct = ra.RA
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0  9202     0     0     0     0     0     0     0     0     0     0     0     0     0   761 |    cu = ra.ROOT
     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2     1    75     0     0     0     0     0     0     5     0     1     0     0     0    38     1     2     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     1    16     0    19     2   106   159     0     1     0     1     0  3357    84     0     0     0     0     1     0     0     0     0     1    20   151 |    cv = ra.SP
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     3    15     0     2     0     0     0     0     4     0     0     0     0     0    79     1     0     2     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     3     0     0    58     0     4  1187     0     0     0     0     0   391  1747     0     0     0     0     1     0     0     0     0     0    46   103 |    cw = ra.SS
|    cx = ra.ST
     0     0     0     5     0     0     1     0     7     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     3     2     0     0     0     0     0     0     0   331     6    37     0     0     0     0     0     0     1     0     1     0     0     1    25    18     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     2    90     0    20    93   555   217     3   174     0     2     0    24     9     0    52     0     0    23     0     0     0     0     0   197   144 |    cy = ra.TA
|    cz = ra.UK
|    da = ra.VA
     0     0     0    13     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    22     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0    14     6     0     0     0     0     1     0     0     0     0     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    29     1     0   218     0     0     0     0     0     4     1     0     2     0     0  3906     0     0     0     0     0   145    12 |    db = ra.VG
     0     0     0     2     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     1     0     0     0     0     0     0     0     0     0     3     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     0    44     0     0     0     0     0     0     0     0     0     0     0     4     0     0     0     0     0    41     0 |    dc = ra.VO
|    dd = ra.VS
|    de = ra.XA
|    df = ra.XF
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     0     1     0     0     0     0     0     0     0     0     0     1     0     0     0     1     3     0     0     0     0     0     4     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0    12     0     2     1    22     5     0     2     0     0     0    92    20     0     0     0     0     2     0     0     0     0     2    28    15 |    dg = ra.XX
    11     1     0    19     0     0    25     0     3    17     0     0     0     0     0     0     3     0     0     0     2     0     0     9     5     0     1     0     0     0     6     0    11     0     0     2     0     0     3     3   124    15     7     0     0     0     0     0     0     1    58    57     1    16     1     2     5     1  1053     0     0     0    11     0    54  1680     0     0     2    20    31    11    14   378     0     0    53    46    17     9    47    18     0   143     0    39     1     7     1     0    35     3   136   297   560    68     4     2     0    46    21     0     5     0     0   205     1     0     0     0     0 94100  1892 |    dh = re
   467    23     0   217     0     0    20     0    60   230     0     0     0     0     0    56    11   116    38     0     4    30     0    14     3     0     2     0     0     0     1     2     4     2     0     6     0     0     0     1    19    14   265     1     0     0     0    10     1   110    10   193     0     5     1     0     8     4   209     0     2     2     0     0     0   174     4     1     0     3     0     3     1   173     0     0     0     4     1     1    14     0     0    37     0    10     0     1   123     0     8    29    28  1098  1284   246     4     3   552   312   588     0    26     0     0    40     0     0     0     0     1  3104 62003 |    di = sh

