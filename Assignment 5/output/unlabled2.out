=== Run information ===

Scheme:       weka.classifiers.trees.J48 -C 0.25 -M 2
Relation:     parse_action
Instances:    336949
Attributes:   5
              top_pos_stack
              first_pos_queue
              can_do_leftarc
              can_reduce
              action
Test mode:    10-fold cross-validation

=== Classifier model (full training set) ===

J48 pruned tree
------------------

first_pos_queue = nil: re (20949.0)
first_pos_queue = ROOT: sh (9963.0)
first_pos_queue = ++: sh (6144.0/34.0)
first_pos_queue = NN
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: sh (3222.0/371.0)
|   top_pos_stack = ++
|   |   can_do_leftarc = true: la (2299.0/352.0)
|   |   can_do_leftarc = false: re (10.0/4.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (1733.0/414.0)
|   |   can_do_leftarc = false: ra (2857.0/697.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (3134.0/22.0)
|   |   can_do_leftarc = false: ra (30.0/5.0)
|   top_pos_stack = AV: ra (1459.0/102.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (4626.0/18.0)
|   |   can_do_leftarc = false: re (421.0/86.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (644.0/43.0)
|   |   can_do_leftarc = false: re (388.0/128.0)
|   top_pos_stack = IP: re (2.0/1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (6432.0/149.0)
|   |   can_do_leftarc = false: re (583.0/111.0)
|   top_pos_stack = VV: ra (4853.0/368.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (896.0/415.0)
|   |   can_do_leftarc = false: re (1160.0/100.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (479.0/1.0)
|   |   can_do_leftarc = false: re (64.0/18.0)
|   top_pos_stack = PR: ra (11526.0/1559.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (1142.0/8.0)
|   |   can_do_leftarc = false: re (144.0/30.0)
|   top_pos_stack = ID
|   |   can_do_leftarc = true: la (8.0/2.0)
|   |   can_do_leftarc = false: re (802.0/397.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (155.0/7.0)
|   |   can_do_leftarc = false: re (74.0/37.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (345.0/123.0)
|   |   can_do_leftarc = false: re (71.0/3.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (5.0/1.0)
|   |   can_do_leftarc = false: sh (19.0/7.0)
|   top_pos_stack = UK: sh (1924.0/542.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (64.0/28.0)
|   |   can_do_leftarc = false: ra (293.0/88.0)
|   top_pos_stack = QV: ra (95.0/8.0)
|   top_pos_stack = WV: ra (12.0/1.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (11.0/2.0)
|   |   can_do_leftarc = false: re (45.0/9.0)
|   top_pos_stack = SV: ra (75.0/3.0)
|   top_pos_stack = HV: ra (703.0/26.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (30.0/3.0)
|   |   can_do_leftarc = false: re (86.0/18.0)
|   top_pos_stack = IG
|   |   can_do_leftarc = true: la (21.0/2.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   top_pos_stack = AN: ra (147.0/39.0)
|   top_pos_stack = MV: ra (40.0/1.0)
|   top_pos_stack = IM: sh (5.0/1.0)
|   top_pos_stack = BV: ra (197.0/9.0)
|   top_pos_stack = KV: ra (24.0/5.0)
|   top_pos_stack = GV: ra (117.0/3.0)
|   top_pos_stack = FV: ra (357.0/8.0)
|   top_pos_stack = PU
|   |   can_do_leftarc = true: la (28.0/1.0)
|   |   can_do_leftarc = false: ra (5.0/3.0)
|   top_pos_stack = SP
|   |   can_do_leftarc = true: la (96.0)
|   |   can_do_leftarc = false: re (15.0/7.0)
|   top_pos_stack = XX: la (4.0/2.0)
|   top_pos_stack = I?: re (4.0)
|   top_pos_stack = IS: sh (10.0/4.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (35.0/13.0)
|   |   can_do_leftarc = false: re (90.0/18.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: sh (4.0/2.0)
first_pos_queue = EN: sh (4055.0/136.0)
first_pos_queue = AV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (1962.0/69.0)
|   top_pos_stack = ++: la (350.0/12.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (1192.0/24.0)
|   |   can_do_leftarc = false: re (1077.0/183.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (6.0/1.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (14.0)
|   |   can_do_leftarc = false: ra (221.0/44.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (113.0)
|   |   can_do_leftarc = false: re (113.0/2.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (125.0/1.0)
|   |   can_do_leftarc = false: re (379.0/3.0)
|   top_pos_stack = IP: la (3.0/1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (1247.0/15.0)
|   |   can_do_leftarc = false: re (281.0/61.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (108.0/16.0)
|   |   can_do_leftarc = false: ra (1022.0/310.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (506.0/7.0)
|   |   can_do_leftarc = false: re (277.0/20.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (8.0)
|   |   can_do_leftarc = false: re (15.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (218.0/4.0)
|   |   can_do_leftarc = false: re (687.0/100.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (17.0/3.0)
|   |   can_do_leftarc = false: re (16.0)
|   top_pos_stack = ID
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (204.0/15.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (32.0)
|   |   can_do_leftarc = false: re (57.0/2.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (108.0/4.0)
|   |   can_do_leftarc = false: re (34.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (9.0)
|   |   can_do_leftarc = false: re (19.0/1.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (679.0/3.0)
|   |   can_do_leftarc = false: re (15.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (158.0/4.0)
|   |   can_do_leftarc = false: re (152.0/22.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (9.0/1.0)
|   |   can_do_leftarc = false: ra (125.0/12.0)
|   top_pos_stack = WV: ra (24.0/11.0)
|   top_pos_stack = IQ: re (10.0)
|   top_pos_stack = SV
|   |   can_do_leftarc = true: la (20.0/9.0)
|   |   can_do_leftarc = false: ra (160.0/11.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (12.0/5.0)
|   |   can_do_leftarc = false: ra (112.0/24.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (5.0)
|   |   can_do_leftarc = false: re (15.0)
|   top_pos_stack = IG: la (5.0/1.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (42.0/2.0)
|   |   can_do_leftarc = false: re (33.0/8.0)
|   top_pos_stack = MV
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: ra (63.0/8.0)
|   top_pos_stack = IM: la (70.0/1.0)
|   top_pos_stack = BV: ra (23.0/10.0)
|   top_pos_stack = KV: ra (9.0/1.0)
|   top_pos_stack = GV: ra (9.0/5.0)
|   top_pos_stack = FV
|   |   can_do_leftarc = true: la (6.0)
|   |   can_do_leftarc = false: ra (22.0/7.0)
|   top_pos_stack = PU: la (7.0/1.0)
|   top_pos_stack = SP
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = XX: la (11.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: re (4.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (11.0/2.0)
|   |   can_do_leftarc = false: re (31.0/1.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (14.0/2.0)
first_pos_queue = AJ
|   top_pos_stack = nil: sh (0.0)
|   top_pos_stack = ROOT: sh (369.0/43.0)
|   top_pos_stack = ++
|   |   can_do_leftarc = true: la (719.0/234.0)
|   |   can_do_leftarc = false: ra (2.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (296.0/47.0)
|   |   can_do_leftarc = false: re (441.0/144.0)
|   top_pos_stack = EN: sh (1339.0/41.0)
|   top_pos_stack = AV: ra (1632.0/143.0)
|   top_pos_stack = AJ: ra (1005.0/510.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (184.0/70.0)
|   |   can_do_leftarc = false: re (104.0/31.0)
|   top_pos_stack = IP: re (2.0/1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (2217.0/436.0)
|   |   can_do_leftarc = false: re (343.0/74.0)
|   top_pos_stack = VV: ra (978.0/309.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (1132.0/69.0)
|   |   can_do_leftarc = false: re (488.0/115.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: sh (41.0/16.0)
|   |   can_do_leftarc = false: ra (20.0/11.0)
|   top_pos_stack = PR: sh (1483.0/352.0)
|   top_pos_stack = RO: sh (107.0/19.0)
|   top_pos_stack = ID: re (160.0/76.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (18.0/2.0)
|   |   can_do_leftarc = false: re (11.0/2.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: sh (86.0/37.0)
|   |   can_do_leftarc = false: re (23.0/3.0)
|   top_pos_stack = MN: la (4.0/1.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (247.0/110.0)
|   |   can_do_leftarc = false: re (5.0/2.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: sh (13.0/5.0)
|   |   can_do_leftarc = false: re (59.0/15.0)
|   top_pos_stack = QV: ra (25.0/6.0)
|   top_pos_stack = WV: ra (3.0)
|   top_pos_stack = IQ: sh (8.0/2.0)
|   top_pos_stack = SV: ra (17.0/1.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: ra (4.0/1.0)
|   |   can_do_leftarc = false: sh (208.0/94.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (10.0/2.0)
|   |   can_do_leftarc = false: re (12.0/6.0)
|   top_pos_stack = IG: sh (7.0/3.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (15.0/7.0)
|   top_pos_stack = MV: ra (6.0/3.0)
|   top_pos_stack = IM: sh (16.0/1.0)
|   top_pos_stack = BV: ra (359.0/40.0)
|   top_pos_stack = KV: ra (7.0/2.0)
|   top_pos_stack = GV: ra (81.0/14.0)
|   top_pos_stack = FV: sh (82.0/24.0)
|   top_pos_stack = PU: sh (9.0/1.0)
|   top_pos_stack = SP
|   |   can_do_leftarc = true: la (7.0/3.0)
|   |   can_do_leftarc = false: ra (2.0/1.0)
|   top_pos_stack = XX: sh (0.0)
|   top_pos_stack = I?: sh (0.0)
|   top_pos_stack = IS: re (2.0/1.0)
|   top_pos_stack = IT: sh (16.0/6.0)
|   top_pos_stack = IU: sh (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = IK
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: ra (5.0/1.0)
|   top_pos_stack = ++: sh (13.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: ra (239.0/79.0)
|   |   can_do_leftarc = false: re (3008.0/1586.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: sh (6.0/1.0)
|   |   can_do_leftarc = false: ra (6.0/3.0)
|   top_pos_stack = AV: ra (603.0/148.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: sh (67.0/8.0)
|   |   can_do_leftarc = false: re (430.0/147.0)
|   top_pos_stack = IK: re (0.0)
|   top_pos_stack = IP: re (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (26.0/9.0)
|   |   can_do_leftarc = false: re (349.0/102.0)
|   top_pos_stack = VV: ra (2018.0/751.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: sh (11.0/2.0)
|   |   can_do_leftarc = false: re (299.0/55.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: sh (7.0/2.0)
|   |   can_do_leftarc = false: re (50.0/17.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: ra (9.0/3.0)
|   |   can_do_leftarc = false: re (1175.0/48.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: sh (5.0/1.0)
|   |   can_do_leftarc = false: re (81.0/32.0)
|   top_pos_stack = ID: re (229.0/117.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (6.0/2.0)
|   |   can_do_leftarc = false: re (201.0/111.0)
|   top_pos_stack = IC: re (112.0/28.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: sh (5.0)
|   |   can_do_leftarc = false: re (35.0/7.0)
|   top_pos_stack = UK: sh (10.0/2.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: ra (35.0/7.0)
|   |   can_do_leftarc = false: re (443.0/216.0)
|   top_pos_stack = QV: ra (84.0/34.0)
|   top_pos_stack = WV: re (25.0/9.0)
|   top_pos_stack = IQ: re (1.0)
|   top_pos_stack = SV: ra (100.0/37.0)
|   top_pos_stack = HV: ra (185.0/67.0)
|   top_pos_stack = IR: re (18.0/7.0)
|   top_pos_stack = IG: re (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: sh (11.0/5.0)
|   |   can_do_leftarc = false: re (143.0/69.0)
|   top_pos_stack = MV: ra (29.0/11.0)
|   top_pos_stack = IM
|   |   can_do_leftarc = true: sh (3.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = BV: ra (90.0/27.0)
|   top_pos_stack = KV: ra (10.0/3.0)
|   top_pos_stack = GV: ra (47.0/23.0)
|   top_pos_stack = FV: ra (74.0/20.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (7.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (3.0/1.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: ra (55.0/6.0)
first_pos_queue = IP
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: ra (2.0)
|   top_pos_stack = ++: ra (2.0/1.0)
|   top_pos_stack = NN: re (8114.0/150.0)
|   top_pos_stack = EN: re (24.0/2.0)
|   top_pos_stack = AV: ra (2958.0/1254.0)
|   top_pos_stack = AJ: re (969.0/21.0)
|   top_pos_stack = IK: ra (5.0/2.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO: re (876.0/10.0)
|   top_pos_stack = VV: re (10547.0/3892.0)
|   top_pos_stack = AB: re (784.0/20.0)
|   top_pos_stack = TP: re (189.0/6.0)
|   top_pos_stack = PR: re (6523.0/49.0)
|   top_pos_stack = RO: re (188.0/8.0)
|   top_pos_stack = ID: re (514.0/37.0)
|   top_pos_stack = PN: re (318.0/10.0)
|   top_pos_stack = IC: re (185.0/1.0)
|   top_pos_stack = MN: re (93.0/1.0)
|   top_pos_stack = UK: re (3.0)
|   top_pos_stack = VN: re (1380.0/31.0)
|   top_pos_stack = QV: ra (953.0/353.0)
|   top_pos_stack = WV: re (177.0/86.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: re (771.0/356.0)
|   top_pos_stack = HV: ra (1346.0/539.0)
|   top_pos_stack = IR: re (94.0/1.0)
|   top_pos_stack = IG: re (1.0)
|   top_pos_stack = AN: re (416.0/3.0)
|   top_pos_stack = MV: ra (347.0/93.0)
|   top_pos_stack = IM: re (2.0)
|   top_pos_stack = BV: re (499.0/207.0)
|   top_pos_stack = KV: ra (153.0/57.0)
|   top_pos_stack = GV: re (244.0/52.0)
|   top_pos_stack = FV: re (542.0/197.0)
|   top_pos_stack = PU: ra (11.0/1.0)
|   top_pos_stack = SP: re (17.0/1.0)
|   top_pos_stack = XX: re (1.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: ra (1.0)
|   top_pos_stack = IT: re (1.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY: ra (32.0/2.0)
first_pos_queue = PO
|   top_pos_stack = nil: sh (0.0)
|   top_pos_stack = ROOT: sh (3136.0/20.0)
|   top_pos_stack = ++: sh (997.0/156.0)
|   top_pos_stack = NN: sh (1233.0/188.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: sh (368.0/38.0)
|   |   can_do_leftarc = false: ra (9.0/2.0)
|   top_pos_stack = AV: ra (729.0/243.0)
|   top_pos_stack = AJ: sh (138.0/63.0)
|   top_pos_stack = IK: sh (848.0/60.0)
|   top_pos_stack = IP: sh (1.0)
|   top_pos_stack = PO: sh (1753.0/523.0)
|   top_pos_stack = VV: ra (3511.0/1047.0)
|   top_pos_stack = AB: sh (1355.0/432.0)
|   top_pos_stack = TP: sh (11.0/4.0)
|   top_pos_stack = PR: sh (3864.0/909.0)
|   top_pos_stack = RO: sh (36.0/13.0)
|   top_pos_stack = ID: sh (381.0/48.0)
|   top_pos_stack = PN: sh (20.0/8.0)
|   top_pos_stack = IC: sh (121.0/19.0)
|   top_pos_stack = MN: sh (0.0)
|   top_pos_stack = UK: sh (1740.0/60.0)
|   top_pos_stack = VN: sh (157.0/14.0)
|   top_pos_stack = QV: ra (204.0/19.0)
|   top_pos_stack = WV: ra (39.0/4.0)
|   top_pos_stack = IQ: sh (17.0/2.0)
|   top_pos_stack = SV: ra (184.0/24.0)
|   top_pos_stack = HV: ra (382.0/150.0)
|   top_pos_stack = IR: sh (30.0/6.0)
|   top_pos_stack = IG: re (2.0/1.0)
|   top_pos_stack = AN: sh (26.0/1.0)
|   top_pos_stack = MV: ra (77.0/10.0)
|   top_pos_stack = IM: sh (9.0)
|   top_pos_stack = BV: ra (101.0/33.0)
|   top_pos_stack = KV: ra (19.0/5.0)
|   top_pos_stack = GV: ra (142.0/33.0)
|   top_pos_stack = FV: ra (178.0/72.0)
|   top_pos_stack = PU: sh (1.0)
|   top_pos_stack = SP: sh (1.0)
|   top_pos_stack = XX: sh (0.0)
|   top_pos_stack = I?: sh (0.0)
|   top_pos_stack = IS: sh (14.0/2.0)
|   top_pos_stack = IT: sh (57.0/7.0)
|   top_pos_stack = IU: sh (0.0)
|   top_pos_stack = YY: sh (7.0/2.0)
first_pos_queue = VV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (4618.0/325.0)
|   top_pos_stack = ++: la (1433.0/53.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (2306.0/144.0)
|   |   can_do_leftarc = false: re (4013.0/1079.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (6.0/2.0)
|   |   can_do_leftarc = false: re (12.0/5.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (59.0/9.0)
|   |   can_do_leftarc = false: ra (830.0/89.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (154.0/4.0)
|   |   can_do_leftarc = false: re (582.0/44.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (375.0/17.0)
|   |   can_do_leftarc = false: re (1340.0/14.0)
|   top_pos_stack = IP: re (5.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (3743.0/81.0)
|   |   can_do_leftarc = false: re (1060.0/238.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (296.0/72.0)
|   |   can_do_leftarc = false: ra (3429.0/678.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (1918.0/11.0)
|   |   can_do_leftarc = false: re (1209.0/48.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (13.0/1.0)
|   |   can_do_leftarc = false: re (60.0/7.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (957.0/56.0)
|   |   can_do_leftarc = false: re (2263.0/627.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (33.0/1.0)
|   |   can_do_leftarc = false: re (77.0/5.0)
|   top_pos_stack = ID
|   |   can_do_leftarc = true: la (6.0/1.0)
|   |   can_do_leftarc = false: re (874.0/63.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (312.0/2.0)
|   |   can_do_leftarc = false: re (192.0/16.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (149.0/3.0)
|   |   can_do_leftarc = false: re (129.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (74.0/1.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (1542.0/21.0)
|   |   can_do_leftarc = false: re (21.0/3.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (352.0/15.0)
|   |   can_do_leftarc = false: re (585.0/160.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (167.0/18.0)
|   |   can_do_leftarc = false: ra (998.0/14.0)
|   top_pos_stack = WV
|   |   can_do_leftarc = true: la (31.0/6.0)
|   |   can_do_leftarc = false: ra (174.0/9.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (5.0)
|   |   can_do_leftarc = false: re (17.0/1.0)
|   top_pos_stack = SV: ra (886.0/56.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (68.0/24.0)
|   |   can_do_leftarc = false: ra (877.0/48.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (17.0)
|   |   can_do_leftarc = false: re (53.0/1.0)
|   top_pos_stack = IG
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (7.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (80.0/7.0)
|   |   can_do_leftarc = false: ra (221.0/105.0)
|   top_pos_stack = MV: ra (318.0/3.0)
|   top_pos_stack = IM
|   |   can_do_leftarc = true: la (1802.0/11.0)
|   |   can_do_leftarc = false: re (7.0/1.0)
|   top_pos_stack = BV
|   |   can_do_leftarc = true: la (6.0/1.0)
|   |   can_do_leftarc = false: ra (141.0/35.0)
|   top_pos_stack = KV: ra (164.0/14.0)
|   top_pos_stack = GV
|   |   can_do_leftarc = true: la (8.0/2.0)
|   |   can_do_leftarc = false: ra (61.0/15.0)
|   top_pos_stack = FV
|   |   can_do_leftarc = true: la (78.0/1.0)
|   |   can_do_leftarc = false: ra (247.0/22.0)
|   top_pos_stack = PU: la (14.0/1.0)
|   top_pos_stack = SP
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = XX
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = I?: re (1.0)
|   top_pos_stack = IS: re (11.0/1.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (44.0/4.0)
|   |   can_do_leftarc = false: re (65.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: ra (21.0)
first_pos_queue = AB
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (1234.0/53.0)
|   top_pos_stack = ++: sh (703.0/99.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (291.0/61.0)
|   |   can_do_leftarc = false: re (1191.0/658.0)
|   top_pos_stack = EN: sh (154.0/3.0)
|   top_pos_stack = AV: ra (1305.0/301.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (44.0/14.0)
|   |   can_do_leftarc = false: re (180.0/71.0)
|   top_pos_stack = IK: sh (646.0/113.0)
|   top_pos_stack = IP: re (4.0/2.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (807.0/11.0)
|   |   can_do_leftarc = false: re (987.0/182.0)
|   top_pos_stack = VV: ra (4141.0/407.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: sh (605.0/302.0)
|   |   can_do_leftarc = false: re (922.0/246.0)
|   top_pos_stack = TP: sh (44.0/22.0)
|   top_pos_stack = PR: sh (641.0/285.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: ra (6.0/2.0)
|   |   can_do_leftarc = false: sh (12.0/7.0)
|   top_pos_stack = ID: sh (169.0/90.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (9.0/2.0)
|   |   can_do_leftarc = false: re (54.0/24.0)
|   top_pos_stack = IC: sh (50.0/13.0)
|   top_pos_stack = MN: re (7.0/3.0)
|   top_pos_stack = UK: sh (228.0/67.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: sh (47.0/11.0)
|   |   can_do_leftarc = false: re (179.0/90.0)
|   top_pos_stack = QV: ra (371.0/9.0)
|   top_pos_stack = WV: ra (38.0/5.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (3.0/1.0)
|   |   can_do_leftarc = false: sh (7.0)
|   top_pos_stack = SV: ra (238.0/6.0)
|   top_pos_stack = HV: ra (453.0/56.0)
|   top_pos_stack = IR: sh (38.0/9.0)
|   top_pos_stack = IG: re (3.0/1.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: sh (8.0)
|   |   can_do_leftarc = false: re (29.0/12.0)
|   top_pos_stack = MV: ra (80.0/2.0)
|   top_pos_stack = IM: sh (93.0/3.0)
|   top_pos_stack = BV: ra (231.0/89.0)
|   top_pos_stack = KV: ra (57.0/3.0)
|   top_pos_stack = GV: ra (55.0/4.0)
|   top_pos_stack = FV: ra (209.0/21.0)
|   top_pos_stack = PU: sh (2.0)
|   top_pos_stack = SP: sh (8.0/4.0)
|   top_pos_stack = XX: sh (5.0/1.0)
|   top_pos_stack = I?: re (1.0)
|   top_pos_stack = IS: sh (3.0/1.0)
|   top_pos_stack = IT: sh (67.0/14.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: ra (6.0/3.0)
first_pos_queue = TP
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (40.0/11.0)
|   top_pos_stack = ++: la (89.0/27.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (53.0/24.0)
|   |   can_do_leftarc = false: re (139.0/60.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: sh (129.0/2.0)
|   |   can_do_leftarc = false: ra (2.0/1.0)
|   top_pos_stack = AV: ra (357.0/3.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (181.0/31.0)
|   |   can_do_leftarc = false: ra (33.0/15.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (36.0/14.0)
|   |   can_do_leftarc = false: re (34.0/2.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (204.0/40.0)
|   |   can_do_leftarc = false: re (42.0/6.0)
|   top_pos_stack = VV: ra (91.0/24.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (136.0/1.0)
|   |   can_do_leftarc = false: re (67.0/9.0)
|   top_pos_stack = TP: ra (33.0/4.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (55.0/14.0)
|   |   can_do_leftarc = false: sh (141.0/53.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (9.0/4.0)
|   |   can_do_leftarc = false: re (6.0/1.0)
|   top_pos_stack = ID: re (38.0/21.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (25.0/1.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: sh (10.0/2.0)
|   |   can_do_leftarc = false: re (6.0/2.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = UK: la (14.0/6.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: ra (5.0/2.0)
|   |   can_do_leftarc = false: re (30.0/13.0)
|   top_pos_stack = QV: ra (4.0/2.0)
|   top_pos_stack = WV: ra (0.0)
|   top_pos_stack = IQ: sh (1.0)
|   top_pos_stack = SV: ra (1.0)
|   top_pos_stack = HV: ra (12.0/5.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (6.0)
|   top_pos_stack = IG: ra (0.0)
|   top_pos_stack = AN: re (5.0)
|   top_pos_stack = MV: ra (0.0)
|   top_pos_stack = IM: ra (0.0)
|   top_pos_stack = BV: ra (96.0/1.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (7.0/1.0)
|   top_pos_stack = FV: ra (24.0/11.0)
|   top_pos_stack = PU: sh (4.0/1.0)
|   top_pos_stack = SP: ra (1.0)
|   top_pos_stack = XX: ra (0.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: ra (0.0)
|   top_pos_stack = IT: re (5.0/2.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (0.0)
first_pos_queue = PR
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (1151.0/78.0)
|   top_pos_stack = ++
|   |   can_do_leftarc = true: la (404.0/131.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: ra (866.0/141.0)
|   |   can_do_leftarc = false: re (5021.0/2465.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (77.0/18.0)
|   |   can_do_leftarc = false: ra (22.0/10.0)
|   top_pos_stack = AV: ra (1147.0/16.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: ra (36.0/11.0)
|   |   can_do_leftarc = false: re (749.0/83.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (90.0/31.0)
|   |   can_do_leftarc = false: re (336.0/36.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (263.0/91.0)
|   |   can_do_leftarc = false: re (784.0/58.0)
|   top_pos_stack = VV: ra (6449.0/114.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (461.0/46.0)
|   |   can_do_leftarc = false: re (1319.0/179.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: ra (3.0)
|   |   can_do_leftarc = false: re (362.0/93.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: ra (29.0/7.0)
|   |   can_do_leftarc = false: re (1225.0/295.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: sh (64.0/30.0)
|   |   can_do_leftarc = false: re (88.0/31.0)
|   top_pos_stack = ID
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (317.0/92.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (13.0/7.0)
|   |   can_do_leftarc = false: re (134.0/19.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (18.0/9.0)
|   |   can_do_leftarc = false: re (82.0/2.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (3.0/1.0)
|   |   can_do_leftarc = false: re (23.0/3.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (93.0/27.0)
|   |   can_do_leftarc = false: re (4.0)
|   top_pos_stack = VN: ra (1452.0/452.0)
|   top_pos_stack = QV: ra (61.0/2.0)
|   top_pos_stack = WV: ra (14.0/5.0)
|   top_pos_stack = IQ: re (7.0/2.0)
|   top_pos_stack = SV: ra (37.0/3.0)
|   top_pos_stack = HV: ra (365.0/11.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (17.0/4.0)
|   |   can_do_leftarc = false: re (36.0/5.0)
|   top_pos_stack = IG: sh (9.0/4.0)
|   top_pos_stack = AN: ra (242.0/106.0)
|   top_pos_stack = MV: ra (13.0)
|   top_pos_stack = IM: sh (44.0/1.0)
|   top_pos_stack = BV: ra (230.0/3.0)
|   top_pos_stack = KV: ra (13.0)
|   top_pos_stack = GV: ra (127.0/2.0)
|   top_pos_stack = FV: ra (194.0/5.0)
|   top_pos_stack = PU: sh (1.0)
|   top_pos_stack = SP: re (20.0/10.0)
|   top_pos_stack = XX
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: re (3.0/1.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: sh (7.0/1.0)
|   |   can_do_leftarc = false: re (50.0/8.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: la (1.0)
first_pos_queue = RO
|   top_pos_stack = nil: sh (0.0)
|   top_pos_stack = ROOT: sh (123.0/6.0)
|   top_pos_stack = ++: la (110.0/50.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (201.0/22.0)
|   |   can_do_leftarc = false: ra (134.0/70.0)
|   top_pos_stack = EN: ra (16.0/8.0)
|   top_pos_stack = AV: ra (73.0/36.0)
|   top_pos_stack = AJ: sh (18.0/9.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: sh (20.0/5.0)
|   |   can_do_leftarc = false: re (80.0/30.0)
|   top_pos_stack = IP
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = PO: sh (233.0/49.0)
|   top_pos_stack = VV: sh (178.0/74.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (293.0/49.0)
|   |   can_do_leftarc = false: sh (49.0/15.0)
|   top_pos_stack = TP: re (14.0/8.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: ra (108.0/50.0)
|   |   can_do_leftarc = false: sh (540.0/173.0)
|   top_pos_stack = RO: ra (158.0/32.0)
|   top_pos_stack = ID: ra (101.0/54.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: ra (39.0/22.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (6.0/2.0)
|   top_pos_stack = MN: ra (27.0/12.0)
|   top_pos_stack = UK: sh (57.0/4.0)
|   top_pos_stack = VN: sh (21.0/11.0)
|   top_pos_stack = QV: sh (2.0)
|   top_pos_stack = WV: sh (0.0)
|   top_pos_stack = IQ: re (14.0/6.0)
|   top_pos_stack = SV: ra (2.0/1.0)
|   top_pos_stack = HV: sh (22.0/6.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (3.0/2.0)
|   |   can_do_leftarc = false: re (24.0/10.0)
|   top_pos_stack = IG
|   |   can_do_leftarc = true: sh (22.0/9.0)
|   |   can_do_leftarc = false: re (11.0/5.0)
|   top_pos_stack = AN: re (1.0)
|   top_pos_stack = MV: sh (0.0)
|   top_pos_stack = IM: sh (0.0)
|   top_pos_stack = BV: ra (12.0/5.0)
|   top_pos_stack = KV: ra (1.0)
|   top_pos_stack = GV: sh (3.0/1.0)
|   top_pos_stack = FV: sh (13.0/5.0)
|   top_pos_stack = PU: la (1.0)
|   top_pos_stack = SP: sh (0.0)
|   top_pos_stack = XX: sh (0.0)
|   top_pos_stack = I?: sh (0.0)
|   top_pos_stack = IS: sh (0.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (4.0/2.0)
|   |   can_do_leftarc = false: re (18.0/5.0)
|   top_pos_stack = IU: sh (0.0)
|   top_pos_stack = YY: sh (0.0)
first_pos_queue = ID
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: ra (1.0)
|   top_pos_stack = ++: sh (13.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (43.0/1.0)
|   |   can_do_leftarc = false: ra (17.0/3.0)
|   top_pos_stack = EN: ra (0.0)
|   top_pos_stack = AV: ra (0.0)
|   top_pos_stack = AJ: ra (3.0/1.0)
|   top_pos_stack = IK: re (2.0)
|   top_pos_stack = IP: re (3.0)
|   top_pos_stack = PO: ra (293.0/2.0)
|   top_pos_stack = VV: ra (4.0)
|   top_pos_stack = AB: ra (1631.0/7.0)
|   top_pos_stack = TP: ra (0.0)
|   top_pos_stack = PR: ra (756.0/2.0)
|   top_pos_stack = RO: ra (30.0)
|   top_pos_stack = ID
|   |   can_do_leftarc = true: sh (8.0)
|   |   can_do_leftarc = false: re (1028.0/5.0)
|   top_pos_stack = PN: ra (683.0/1.0)
|   top_pos_stack = IC: ra (0.0)
|   top_pos_stack = MN: ra (406.0/3.0)
|   top_pos_stack = UK: ra (355.0)
|   top_pos_stack = VN: la (3.0/1.0)
|   top_pos_stack = QV: ra (0.0)
|   top_pos_stack = WV: ra (0.0)
|   top_pos_stack = IQ: ra (0.0)
|   top_pos_stack = SV: ra (0.0)
|   top_pos_stack = HV: re (1.0)
|   top_pos_stack = IR: la (1.0)
|   top_pos_stack = IG: ra (0.0)
|   top_pos_stack = AN: ra (7.0/3.0)
|   top_pos_stack = MV: ra (0.0)
|   top_pos_stack = IM: ra (0.0)
|   top_pos_stack = BV: ra (0.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (0.0)
|   top_pos_stack = FV: ra (0.0)
|   top_pos_stack = PU: ra (0.0)
|   top_pos_stack = SP: ra (0.0)
|   top_pos_stack = XX: ra (2.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: ra (0.0)
|   top_pos_stack = IT: ra (0.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (4.0)
first_pos_queue = PN
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (383.0/50.0)
|   top_pos_stack = ++: la (151.0/16.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (156.0/16.0)
|   |   can_do_leftarc = false: ra (65.0/17.0)
|   top_pos_stack = EN: la (2.0)
|   top_pos_stack = AV: ra (33.0/7.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (14.0)
|   |   can_do_leftarc = false: re (5.0/2.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (67.0/2.0)
|   |   can_do_leftarc = false: re (47.0/7.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (42.0/20.0)
|   |   can_do_leftarc = false: re (14.0/7.0)
|   top_pos_stack = VV: ra (207.0/16.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (60.0/23.0)
|   |   can_do_leftarc = false: re (40.0/6.0)
|   top_pos_stack = TP: ra (2.0/1.0)
|   top_pos_stack = PR: ra (646.0/122.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = ID: ra (70.0/31.0)
|   top_pos_stack = PN: ra (180.0/11.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (7.0/3.0)
|   |   can_do_leftarc = false: re (4.0/2.0)
|   top_pos_stack = MN: ra (2.0/1.0)
|   top_pos_stack = UK: sh (108.0/25.0)
|   top_pos_stack = VN: ra (7.0/4.0)
|   top_pos_stack = QV: ra (6.0)
|   top_pos_stack = WV: ra (1.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (5.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = SV: ra (3.0)
|   top_pos_stack = HV: ra (16.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (19.0/5.0)
|   |   can_do_leftarc = false: re (22.0/3.0)
|   top_pos_stack = IG: la (6.0/1.0)
|   top_pos_stack = AN: ra (3.0/1.0)
|   top_pos_stack = MV: ra (2.0)
|   top_pos_stack = IM: ra (0.0)
|   top_pos_stack = BV: ra (3.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (3.0)
|   top_pos_stack = FV: ra (9.0)
|   top_pos_stack = PU: la (6.0)
|   top_pos_stack = SP: ra (0.0)
|   top_pos_stack = XX: ra (0.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: re (11.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (7.0/2.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (0.0)
first_pos_queue = IC
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (183.0/17.0)
|   top_pos_stack = ++: sh (26.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (114.0/13.0)
|   |   can_do_leftarc = false: re (411.0/184.0)
|   top_pos_stack = EN: sh (28.0)
|   top_pos_stack = AV: ra (166.0/25.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: sh (42.0/10.0)
|   |   can_do_leftarc = false: ra (60.0/30.0)
|   top_pos_stack = IK: sh (23.0/7.0)
|   top_pos_stack = IP: re (54.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (70.0/4.0)
|   |   can_do_leftarc = false: re (68.0/11.0)
|   top_pos_stack = VV: ra (348.0/118.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: sh (11.0)
|   |   can_do_leftarc = false: re (32.0/5.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: sh (8.0/2.0)
|   |   can_do_leftarc = false: ra (17.0/9.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: sh (8.0)
|   |   can_do_leftarc = false: re (239.0/92.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: sh (3.0)
|   |   can_do_leftarc = false: re (8.0/3.0)
|   top_pos_stack = ID: ra (161.0/37.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (3.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   top_pos_stack = IC: re (2.0/1.0)
|   top_pos_stack = MN: ra (19.0/7.0)
|   top_pos_stack = UK: sh (59.0/1.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: sh (8.0)
|   |   can_do_leftarc = false: re (41.0/20.0)
|   top_pos_stack = QV: ra (8.0/4.0)
|   top_pos_stack = WV: ra (3.0/1.0)
|   top_pos_stack = IQ: sh (22.0/5.0)
|   top_pos_stack = SV: ra (13.0/6.0)
|   top_pos_stack = HV: ra (22.0/7.0)
|   top_pos_stack = IR: sh (8.0/3.0)
|   top_pos_stack = IG: re (23.0/1.0)
|   top_pos_stack = AN: re (21.0/8.0)
|   top_pos_stack = MV: ra (2.0/1.0)
|   top_pos_stack = IM: sh (21.0)
|   top_pos_stack = BV: ra (13.0/2.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (2.0/1.0)
|   top_pos_stack = FV: sh (3.0/1.0)
|   top_pos_stack = PU: ra (1.0)
|   top_pos_stack = SP: ra (1.0)
|   top_pos_stack = XX: sh (1.0)
|   top_pos_stack = I?: re (3.0)
|   top_pos_stack = IS: sh (3.0)
|   top_pos_stack = IT: ra (0.0)
|   top_pos_stack = IU: re (4.0)
|   top_pos_stack = YY: ra (0.0)
first_pos_queue = MN
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: sh (48.0/14.0)
|   top_pos_stack = ++: la (33.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (134.0/1.0)
|   |   can_do_leftarc = false: ra (26.0/9.0)
|   top_pos_stack = EN: la (3.0/1.0)
|   top_pos_stack = AV: ra (5.0/1.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (7.0)
|   |   can_do_leftarc = false: ra (2.0/1.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (21.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (16.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = VV: ra (48.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (20.0)
|   |   can_do_leftarc = false: re (11.0)
|   top_pos_stack = TP: ra (3.0)
|   top_pos_stack = PR: ra (200.0/6.0)
|   top_pos_stack = RO: re (5.0)
|   top_pos_stack = ID: re (41.0/20.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (17.0)
|   |   can_do_leftarc = false: ra (11.0/2.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (140.0/3.0)
|   |   can_do_leftarc = false: re (8.0)
|   top_pos_stack = MN: ra (35.0/2.0)
|   top_pos_stack = UK: sh (2.0)
|   top_pos_stack = VN: la (10.0/3.0)
|   top_pos_stack = QV: la (0.0)
|   top_pos_stack = WV: la (0.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (6.0)
|   top_pos_stack = SV: la (0.0)
|   top_pos_stack = HV: ra (5.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (12.0/1.0)
|   |   can_do_leftarc = false: re (14.0/1.0)
|   top_pos_stack = IG: re (2.0/1.0)
|   top_pos_stack = AN: la (0.0)
|   top_pos_stack = MV: ra (1.0)
|   top_pos_stack = IM: la (0.0)
|   top_pos_stack = BV: ra (1.0)
|   top_pos_stack = KV: la (0.0)
|   top_pos_stack = GV: la (0.0)
|   top_pos_stack = FV: la (0.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: la (0.0)
|   top_pos_stack = IT: la (1.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: la (0.0)
first_pos_queue = UK: sh (4438.0/117.0)
first_pos_queue = VN
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: sh (514.0/77.0)
|   top_pos_stack = ++: la (367.0/51.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (406.0/36.0)
|   |   can_do_leftarc = false: ra (326.0/125.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (610.0/1.0)
|   |   can_do_leftarc = false: ra (4.0/1.0)
|   top_pos_stack = AV: ra (174.0/7.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (1058.0/1.0)
|   |   can_do_leftarc = false: re (67.0/10.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (92.0/4.0)
|   |   can_do_leftarc = false: re (63.0/12.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (1001.0/23.0)
|   |   can_do_leftarc = false: re (78.0/10.0)
|   top_pos_stack = VV: ra (728.0/25.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (112.0/47.0)
|   |   can_do_leftarc = false: re (155.0/4.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (78.0/1.0)
|   |   can_do_leftarc = false: ra (10.0/5.0)
|   top_pos_stack = PR: ra (1615.0/128.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (18.0)
|   |   can_do_leftarc = false: ra (3.0/1.0)
|   top_pos_stack = ID: ra (160.0/89.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (38.0)
|   |   can_do_leftarc = false: re (12.0/1.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (28.0/8.0)
|   |   can_do_leftarc = false: re (6.0/1.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = UK: sh (203.0/49.0)
|   top_pos_stack = VN: ra (206.0/41.0)
|   top_pos_stack = QV: ra (23.0)
|   top_pos_stack = WV: ra (1.0)
|   top_pos_stack = IQ
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   top_pos_stack = SV: ra (14.0/1.0)
|   top_pos_stack = HV: ra (153.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: sh (3.0/1.0)
|   |   can_do_leftarc = false: re (14.0)
|   top_pos_stack = IG: la (2.0/1.0)
|   top_pos_stack = AN: ra (29.0/1.0)
|   top_pos_stack = MV: ra (7.0)
|   top_pos_stack = IM: la (1.0)
|   top_pos_stack = BV: ra (43.0/2.0)
|   top_pos_stack = KV: ra (6.0)
|   top_pos_stack = GV: ra (23.0)
|   top_pos_stack = FV: ra (73.0)
|   top_pos_stack = PU: la (8.0/2.0)
|   top_pos_stack = SP
|   |   can_do_leftarc = true: la (20.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: re (2.0/1.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (5.0/2.0)
|   |   can_do_leftarc = false: re (16.0/3.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = QV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (681.0/17.0)
|   top_pos_stack = ++: la (156.0/2.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (341.0/9.0)
|   |   can_do_leftarc = false: re (417.0/110.0)
|   top_pos_stack = EN: la (2.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (8.0)
|   |   can_do_leftarc = false: ra (71.0/15.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (26.0/1.0)
|   |   can_do_leftarc = false: re (41.0/8.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (54.0/1.0)
|   |   can_do_leftarc = false: re (165.0/2.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (491.0/4.0)
|   |   can_do_leftarc = false: re (93.0/33.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (36.0/3.0)
|   |   can_do_leftarc = false: ra (273.0/102.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (257.0/10.0)
|   |   can_do_leftarc = false: re (53.0/18.0)
|   top_pos_stack = TP: re (11.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (125.0)
|   |   can_do_leftarc = false: re (220.0/19.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (10.0/2.0)
|   top_pos_stack = ID: re (78.0/3.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (7.0)
|   |   can_do_leftarc = false: re (5.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (12.0/1.0)
|   |   can_do_leftarc = false: re (9.0/2.0)
|   top_pos_stack = MN: re (7.0/1.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (185.0/1.0)
|   |   can_do_leftarc = false: re (4.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (48.0/3.0)
|   |   can_do_leftarc = false: re (66.0/16.0)
|   top_pos_stack = QV: ra (29.0/9.0)
|   top_pos_stack = WV
|   |   can_do_leftarc = true: la (4.0/1.0)
|   |   can_do_leftarc = false: ra (7.0/3.0)
|   top_pos_stack = IQ: re (1.0)
|   top_pos_stack = SV: sh (57.0/10.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (8.0/1.0)
|   |   can_do_leftarc = false: ra (37.0/21.0)
|   top_pos_stack = IR: re (4.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (9.0)
|   |   can_do_leftarc = false: re (25.0/9.0)
|   top_pos_stack = MV: re (7.0/4.0)
|   top_pos_stack = IM: sh (29.0/1.0)
|   top_pos_stack = BV: ra (16.0/7.0)
|   top_pos_stack = KV: ra (3.0)
|   top_pos_stack = GV: ra (6.0/3.0)
|   top_pos_stack = FV: re (16.0/8.0)
|   top_pos_stack = PU: la (3.0/1.0)
|   top_pos_stack = SP: re (1.0)
|   top_pos_stack = XX: la (5.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: re (3.0/1.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (5.0/1.0)
|   |   can_do_leftarc = false: re (7.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: la (0.0)
first_pos_queue = WV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (105.0/10.0)
|   top_pos_stack = ++: la (33.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (46.0/13.0)
|   |   can_do_leftarc = false: re (64.0/19.0)
|   top_pos_stack = EN: la (1.0)
|   top_pos_stack = AV: ra (20.0/6.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (9.0/4.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (7.0)
|   |   can_do_leftarc = false: re (37.0/1.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (185.0/8.0)
|   |   can_do_leftarc = false: ra (43.0/23.0)
|   top_pos_stack = VV: ra (71.0/25.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (42.0)
|   |   can_do_leftarc = false: re (19.0/7.0)
|   top_pos_stack = TP: re (2.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (35.0/8.0)
|   top_pos_stack = RO: la (0.0)
|   top_pos_stack = ID: re (15.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (12.0)
|   |   can_do_leftarc = false: re (2.0/1.0)
|   top_pos_stack = IC: la (3.0/1.0)
|   top_pos_stack = MN: la (1.0)
|   top_pos_stack = UK: la (63.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (10.0/3.0)
|   top_pos_stack = QV: ra (5.0)
|   top_pos_stack = WV: ra (8.0/2.0)
|   top_pos_stack = IQ: la (0.0)
|   top_pos_stack = SV: ra (11.0/6.0)
|   top_pos_stack = HV: ra (7.0/3.0)
|   top_pos_stack = IR: la (0.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN: re (1.0)
|   top_pos_stack = MV: la (0.0)
|   top_pos_stack = IM: sh (3.0)
|   top_pos_stack = BV: ra (3.0/1.0)
|   top_pos_stack = KV: la (0.0)
|   top_pos_stack = GV: ra (4.0/1.0)
|   top_pos_stack = FV: ra (2.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: re (1.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: re (1.0)
|   top_pos_stack = IT: re (2.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (2.0)
first_pos_queue = IQ
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: ra (1.0)
|   top_pos_stack = ++: sh (1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (7.0)
|   |   can_do_leftarc = false: re (222.0/93.0)
|   top_pos_stack = EN: re (1.0)
|   top_pos_stack = AV: ra (43.0/8.0)
|   top_pos_stack = AJ: re (11.0/1.0)
|   top_pos_stack = IK: la (2.0/1.0)
|   top_pos_stack = IP: re (0.0)
|   top_pos_stack = PO: re (37.0/9.0)
|   top_pos_stack = VV: ra (199.0/58.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (23.0/4.0)
|   top_pos_stack = TP: re (7.0/3.0)
|   top_pos_stack = PR: re (128.0/8.0)
|   top_pos_stack = RO: ra (15.0/8.0)
|   top_pos_stack = ID: re (28.0/12.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: sh (3.0)
|   |   can_do_leftarc = false: ra (29.0/11.0)
|   top_pos_stack = IC: re (4.0/1.0)
|   top_pos_stack = MN: re (5.0)
|   top_pos_stack = UK: sh (9.0/1.0)
|   top_pos_stack = VN: re (35.0/10.0)
|   top_pos_stack = QV: ra (5.0)
|   top_pos_stack = WV: re (1.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: ra (4.0/2.0)
|   top_pos_stack = HV: ra (12.0/5.0)
|   top_pos_stack = IR: re (0.0)
|   top_pos_stack = IG: re (1.0)
|   top_pos_stack = AN: re (6.0/1.0)
|   top_pos_stack = MV: ra (2.0/1.0)
|   top_pos_stack = IM: re (0.0)
|   top_pos_stack = BV: ra (11.0/4.0)
|   top_pos_stack = KV: re (0.0)
|   top_pos_stack = GV: ra (4.0/2.0)
|   top_pos_stack = FV: ra (5.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (0.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (0.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY: la (2.0/1.0)
first_pos_queue = SV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (476.0/51.0)
|   top_pos_stack = ++: la (95.0/9.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (350.0/5.0)
|   |   can_do_leftarc = false: re (319.0/66.0)
|   top_pos_stack = EN: re (1.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: ra (93.0/21.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (14.0)
|   |   can_do_leftarc = false: re (39.0/3.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (45.0)
|   |   can_do_leftarc = false: re (143.0/2.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (408.0/3.0)
|   |   can_do_leftarc = false: re (71.0/13.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (32.0/5.0)
|   |   can_do_leftarc = false: ra (298.0/80.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (234.0/1.0)
|   |   can_do_leftarc = false: re (66.0/7.0)
|   top_pos_stack = TP: re (5.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (73.0/2.0)
|   |   can_do_leftarc = false: re (208.0/58.0)
|   top_pos_stack = RO: re (7.0)
|   top_pos_stack = ID: re (91.0/4.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (5.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (19.0)
|   |   can_do_leftarc = false: re (6.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (7.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (362.0/2.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (52.0/2.0)
|   |   can_do_leftarc = false: re (43.0/15.0)
|   top_pos_stack = QV: ra (5.0/2.0)
|   top_pos_stack = WV: ra (14.0/4.0)
|   top_pos_stack = IQ: re (6.0/1.0)
|   top_pos_stack = SV
|   |   can_do_leftarc = true: la (8.0/1.0)
|   |   can_do_leftarc = false: ra (37.0/4.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (5.0)
|   |   can_do_leftarc = false: ra (21.0/9.0)
|   top_pos_stack = IR: re (3.0/1.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (9.0)
|   |   can_do_leftarc = false: re (13.0/4.0)
|   top_pos_stack = MV: ra (2.0)
|   top_pos_stack = IM: la (0.0)
|   top_pos_stack = BV: ra (10.0/2.0)
|   top_pos_stack = KV: re (1.0)
|   top_pos_stack = GV: ra (3.0/1.0)
|   top_pos_stack = FV: ra (14.0/4.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (5.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: re (4.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (5.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (4.0)
first_pos_queue = HV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (938.0/42.0)
|   top_pos_stack = ++: la (167.0/2.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (528.0/24.0)
|   |   can_do_leftarc = false: re (546.0/102.0)
|   top_pos_stack = EN: la (2.0/1.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (9.0/2.0)
|   |   can_do_leftarc = false: ra (100.0/17.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (23.0)
|   |   can_do_leftarc = false: re (61.0/5.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (45.0/1.0)
|   |   can_do_leftarc = false: re (178.0/1.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (498.0/15.0)
|   |   can_do_leftarc = false: re (114.0/28.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (23.0/2.0)
|   |   can_do_leftarc = false: ra (319.0/99.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (248.0/1.0)
|   |   can_do_leftarc = false: re (85.0/14.0)
|   top_pos_stack = TP: re (8.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (173.0)
|   |   can_do_leftarc = false: re (305.0/37.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (8.0)
|   |   can_do_leftarc = false: re (14.0)
|   top_pos_stack = ID: re (123.0/8.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (55.0)
|   |   can_do_leftarc = false: re (39.0/3.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (20.0)
|   |   can_do_leftarc = false: re (7.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (8.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (223.0/4.0)
|   |   can_do_leftarc = false: re (6.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (78.0/1.0)
|   |   can_do_leftarc = false: re (86.0/14.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (10.0)
|   |   can_do_leftarc = false: ra (32.0/5.0)
|   top_pos_stack = WV: ra (69.0/6.0)
|   top_pos_stack = IQ: re (6.0/1.0)
|   top_pos_stack = SV: ra (70.0/10.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (9.0)
|   |   can_do_leftarc = false: ra (82.0/14.0)
|   top_pos_stack = IR
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (9.0)
|   top_pos_stack = IG: la (2.0/1.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (17.0)
|   |   can_do_leftarc = false: re (6.0)
|   top_pos_stack = MV: ra (23.0/2.0)
|   top_pos_stack = IM: la (34.0/7.0)
|   top_pos_stack = BV: ra (12.0/5.0)
|   top_pos_stack = KV: ra (1.0)
|   top_pos_stack = GV: ra (2.0/1.0)
|   top_pos_stack = FV
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: ra (13.0/4.0)
|   top_pos_stack = PU: sh (5.0/2.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (2.0)
|   top_pos_stack = I?: re (1.0)
|   top_pos_stack = IS: re (5.0/1.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (14.0/2.0)
|   |   can_do_leftarc = false: re (21.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (5.0/1.0)
first_pos_queue = IR
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: sh (59.0/4.0)
|   top_pos_stack = ++: sh (2.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: ra (23.0/4.0)
|   |   can_do_leftarc = false: re (336.0/143.0)
|   top_pos_stack = EN: re (2.0)
|   top_pos_stack = AV: ra (32.0/7.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: ra (9.0/2.0)
|   |   can_do_leftarc = false: re (27.0/16.0)
|   top_pos_stack = IK: sh (3.0)
|   top_pos_stack = IP: re (29.0)
|   top_pos_stack = PO: ra (17.0/9.0)
|   top_pos_stack = VV: ra (120.0/37.0)
|   top_pos_stack = AB: re (18.0/3.0)
|   top_pos_stack = TP: re (12.0/4.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: ra (3.0)
|   |   can_do_leftarc = false: re (117.0/13.0)
|   top_pos_stack = RO: re (58.0/5.0)
|   top_pos_stack = ID: ra (78.0/35.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: ra (7.0/1.0)
|   |   can_do_leftarc = false: re (37.0/12.0)
|   top_pos_stack = IC: re (12.0/2.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: ra (2.0)
|   |   can_do_leftarc = false: re (32.0/14.0)
|   top_pos_stack = UK: sh (1.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: ra (8.0)
|   |   can_do_leftarc = false: re (53.0/23.0)
|   top_pos_stack = QV: ra (3.0/1.0)
|   top_pos_stack = WV: re (0.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: ra (2.0/1.0)
|   top_pos_stack = HV: ra (10.0/2.0)
|   top_pos_stack = IR: ra (2.0)
|   top_pos_stack = IG: re (1.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: ra (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = MV: re (0.0)
|   top_pos_stack = IM: re (0.0)
|   top_pos_stack = BV: ra (10.0/2.0)
|   top_pos_stack = KV: ra (4.0)
|   top_pos_stack = GV: re (0.0)
|   top_pos_stack = FV: re (3.0)
|   top_pos_stack = PU: ra (4.0/1.0)
|   top_pos_stack = SP: re (3.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (2.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (1.0)
|   top_pos_stack = IU: re (3.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = IG
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: sh (10.0)
|   top_pos_stack = ++: la (2.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: sh (5.0/2.0)
|   |   can_do_leftarc = false: re (46.0/12.0)
|   top_pos_stack = EN: re (0.0)
|   top_pos_stack = AV: ra (24.0/3.0)
|   top_pos_stack = AJ: re (7.0/1.0)
|   top_pos_stack = IK: re (2.0)
|   top_pos_stack = IP: re (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (10.0/2.0)
|   top_pos_stack = VV: ra (48.0/21.0)
|   top_pos_stack = AB: re (5.0)
|   top_pos_stack = TP: re (2.0/1.0)
|   top_pos_stack = PR: re (23.0/1.0)
|   top_pos_stack = RO: sh (28.0/7.0)
|   top_pos_stack = ID: ra (1.0)
|   top_pos_stack = PN: sh (1.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: sh (6.0)
|   |   can_do_leftarc = false: re (6.0/1.0)
|   top_pos_stack = MN: sh (2.0)
|   top_pos_stack = UK: re (0.0)
|   top_pos_stack = VN: re (7.0/1.0)
|   top_pos_stack = QV: re (0.0)
|   top_pos_stack = WV: ra (2.0/1.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: re (0.0)
|   top_pos_stack = HV: ra (2.0)
|   top_pos_stack = IR: sh (3.0/1.0)
|   top_pos_stack = IG: sh (2.0)
|   top_pos_stack = AN: re (2.0)
|   top_pos_stack = MV: re (0.0)
|   top_pos_stack = IM: sh (3.0/1.0)
|   top_pos_stack = BV: re (0.0)
|   top_pos_stack = KV: re (0.0)
|   top_pos_stack = GV: re (0.0)
|   top_pos_stack = FV: ra (3.0/1.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (0.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (0.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = AN
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: sh (87.0/8.0)
|   top_pos_stack = ++: la (147.0/9.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (81.0/10.0)
|   |   can_do_leftarc = false: ra (178.0/50.0)
|   top_pos_stack = EN
|   |   can_do_leftarc = true: la (73.0)
|   |   can_do_leftarc = false: ra (2.0)
|   top_pos_stack = AV: ra (36.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (198.0/2.0)
|   |   can_do_leftarc = false: re (36.0/6.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (58.0/2.0)
|   |   can_do_leftarc = false: re (13.0/1.0)
|   top_pos_stack = IP: ra (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (202.0)
|   |   can_do_leftarc = false: re (18.0/3.0)
|   top_pos_stack = VV: ra (226.0/6.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: sh (38.0/17.0)
|   |   can_do_leftarc = false: re (53.0/4.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (22.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = PR: ra (320.0/30.0)
|   top_pos_stack = RO: la (5.0)
|   top_pos_stack = ID: re (31.0/17.0)
|   top_pos_stack = PN: la (2.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (15.0/7.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = MN: ra (0.0)
|   top_pos_stack = UK: sh (46.0/19.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (12.0/5.0)
|   |   can_do_leftarc = false: ra (21.0/2.0)
|   top_pos_stack = QV: ra (2.0)
|   top_pos_stack = WV: ra (0.0)
|   top_pos_stack = IQ: re (2.0)
|   top_pos_stack = SV: ra (2.0)
|   top_pos_stack = HV: ra (72.0)
|   top_pos_stack = IR: ra (0.0)
|   top_pos_stack = IG: ra (0.0)
|   top_pos_stack = AN: ra (47.0/4.0)
|   top_pos_stack = MV: ra (1.0)
|   top_pos_stack = IM: ra (0.0)
|   top_pos_stack = BV: ra (7.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (2.0/1.0)
|   top_pos_stack = FV: ra (34.0)
|   top_pos_stack = PU: la (1.0)
|   top_pos_stack = SP: la (3.0)
|   top_pos_stack = XX: ra (0.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: ra (0.0)
|   top_pos_stack = IT: sh (3.0/1.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = MV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (261.0/3.0)
|   top_pos_stack = ++: la (55.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (97.0/2.0)
|   |   can_do_leftarc = false: re (140.0/25.0)
|   top_pos_stack = EN: la (0.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (5.0)
|   |   can_do_leftarc = false: ra (27.0/6.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (3.0/1.0)
|   |   can_do_leftarc = false: re (16.0/1.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (30.0)
|   |   can_do_leftarc = false: re (49.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (167.0/1.0)
|   |   can_do_leftarc = false: re (19.0/2.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (23.0/1.0)
|   |   can_do_leftarc = false: re (102.0/45.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (58.0)
|   |   can_do_leftarc = false: re (19.0)
|   top_pos_stack = TP: re (1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (37.0)
|   |   can_do_leftarc = false: re (74.0/7.0)
|   top_pos_stack = RO: re (1.0)
|   top_pos_stack = ID: re (16.0/1.0)
|   top_pos_stack = PN: re (5.0/1.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = MN: la (1.0)
|   top_pos_stack = UK: la (47.0/1.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (21.0)
|   |   can_do_leftarc = false: re (14.0/4.0)
|   top_pos_stack = QV: ra (6.0/2.0)
|   top_pos_stack = WV: re (4.0/2.0)
|   top_pos_stack = IQ: la (0.0)
|   top_pos_stack = SV
|   |   can_do_leftarc = true: la (9.0)
|   |   can_do_leftarc = false: ra (8.0/4.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (4.0/1.0)
|   top_pos_stack = IR: re (1.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: re (10.0/1.0)
|   top_pos_stack = MV: ra (5.0/1.0)
|   top_pos_stack = IM: la (0.0)
|   top_pos_stack = BV: re (5.0/1.0)
|   top_pos_stack = KV: ra (3.0)
|   top_pos_stack = GV: re (3.0/1.0)
|   top_pos_stack = FV: ra (7.0/1.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: la (1.0)
|   top_pos_stack = IT: re (4.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (3.0)
first_pos_queue = IM: sh (2096.0/20.0)
first_pos_queue = BV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (232.0/9.0)
|   top_pos_stack = ++: la (61.0/4.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (166.0/5.0)
|   |   can_do_leftarc = false: re (186.0/16.0)
|   top_pos_stack = EN: re (2.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: ra (39.0/6.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (14.0)
|   |   can_do_leftarc = false: re (36.0/1.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (36.0)
|   |   can_do_leftarc = false: re (59.0/1.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (127.0/1.0)
|   |   can_do_leftarc = false: re (49.0/3.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (21.0)
|   |   can_do_leftarc = false: ra (166.0/39.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (81.0)
|   |   can_do_leftarc = false: re (76.0/3.0)
|   top_pos_stack = TP
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (10.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (36.0)
|   |   can_do_leftarc = false: re (141.0/24.0)
|   top_pos_stack = RO
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = ID: re (30.0/4.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = IC
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = MN: re (2.0)
|   top_pos_stack = UK
|   |   can_do_leftarc = true: la (121.0/2.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (29.0)
|   |   can_do_leftarc = false: re (30.0/3.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (3.0/1.0)
|   |   can_do_leftarc = false: ra (38.0/1.0)
|   top_pos_stack = WV: ra (6.0/1.0)
|   top_pos_stack = IQ: la (0.0)
|   top_pos_stack = SV: ra (57.0/3.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (8.0/2.0)
|   |   can_do_leftarc = false: ra (58.0/5.0)
|   top_pos_stack = IR: re (2.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: ra (3.0/1.0)
|   top_pos_stack = MV: ra (17.0)
|   top_pos_stack = IM: la (42.0)
|   top_pos_stack = BV
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: ra (15.0/2.0)
|   top_pos_stack = KV: ra (17.0)
|   top_pos_stack = GV: ra (2.0)
|   top_pos_stack = FV: ra (8.0/3.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: la (0.0)
|   top_pos_stack = IT: re (4.0/1.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = KV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (103.0/1.0)
|   top_pos_stack = ++: la (21.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (68.0/1.0)
|   |   can_do_leftarc = false: re (62.0/11.0)
|   top_pos_stack = EN: la (0.0)
|   top_pos_stack = AV: ra (10.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (4.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (12.0)
|   |   can_do_leftarc = false: re (24.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (56.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (8.0)
|   |   can_do_leftarc = false: ra (44.0/12.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (32.0)
|   |   can_do_leftarc = false: re (17.0)
|   top_pos_stack = TP: la (0.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (11.0)
|   |   can_do_leftarc = false: re (37.0/3.0)
|   top_pos_stack = RO: re (3.0)
|   top_pos_stack = ID: re (7.0)
|   top_pos_stack = PN: re (3.0/1.0)
|   top_pos_stack = IC: re (1.0)
|   top_pos_stack = MN: la (0.0)
|   top_pos_stack = UK: la (29.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (16.0)
|   |   can_do_leftarc = false: re (8.0/1.0)
|   top_pos_stack = QV: ra (3.0/1.0)
|   top_pos_stack = WV: la (0.0)
|   top_pos_stack = IQ: la (0.0)
|   top_pos_stack = SV: ra (4.0/2.0)
|   top_pos_stack = HV: ra (11.0)
|   top_pos_stack = IR: la (2.0/1.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN: la (2.0/1.0)
|   top_pos_stack = MV: ra (1.0)
|   top_pos_stack = IM: la (1.0)
|   top_pos_stack = BV: ra (2.0)
|   top_pos_stack = KV: ra (3.0/1.0)
|   top_pos_stack = GV: ra (4.0/2.0)
|   top_pos_stack = FV: re (4.0)
|   top_pos_stack = PU: la (0.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (2.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: la (0.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (2.0)
first_pos_queue = GV
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: ra (70.0/7.0)
|   top_pos_stack = ++: la (21.0/1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (31.0/1.0)
|   |   can_do_leftarc = false: re (77.0/24.0)
|   top_pos_stack = EN: ra (0.0)
|   top_pos_stack = AV: ra (15.0/2.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (9.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (30.0)
|   top_pos_stack = IP: ra (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (99.0/1.0)
|   |   can_do_leftarc = false: re (25.0/6.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (9.0/3.0)
|   |   can_do_leftarc = false: ra (72.0/13.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (30.0)
|   |   can_do_leftarc = false: re (36.0)
|   top_pos_stack = TP: re (4.0/1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (18.0/3.0)
|   |   can_do_leftarc = false: re (42.0/10.0)
|   top_pos_stack = RO: la (2.0/1.0)
|   top_pos_stack = ID: re (17.0/2.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (5.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   top_pos_stack = IC: re (4.0)
|   top_pos_stack = MN: la (1.0)
|   top_pos_stack = UK: la (43.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (13.0/3.0)
|   |   can_do_leftarc = false: ra (18.0/6.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (4.0)
|   |   can_do_leftarc = false: ra (25.0)
|   top_pos_stack = WV: ra (11.0/2.0)
|   top_pos_stack = IQ: re (1.0)
|   top_pos_stack = SV: ra (24.0)
|   top_pos_stack = HV: ra (28.0)
|   top_pos_stack = IR: re (1.0)
|   top_pos_stack = IG: ra (0.0)
|   top_pos_stack = AN
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (9.0/2.0)
|   top_pos_stack = MV: ra (14.0)
|   top_pos_stack = IM: la (47.0/1.0)
|   top_pos_stack = BV: ra (4.0)
|   top_pos_stack = KV: ra (4.0)
|   top_pos_stack = GV: ra (2.0/1.0)
|   top_pos_stack = FV: ra (12.0/4.0)
|   top_pos_stack = PU: ra (0.0)
|   top_pos_stack = SP: ra (0.0)
|   top_pos_stack = XX: ra (0.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: ra (0.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (2.0/1.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (1.0)
first_pos_queue = FV
|   top_pos_stack = nil: la (0.0)
|   top_pos_stack = ROOT: ra (230.0/9.0)
|   top_pos_stack = ++: la (73.0/4.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (133.0/5.0)
|   |   can_do_leftarc = false: re (211.0/44.0)
|   top_pos_stack = EN: la (0.0)
|   top_pos_stack = AV
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: ra (54.0/8.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (9.0/1.0)
|   |   can_do_leftarc = false: re (41.0/2.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (22.0)
|   |   can_do_leftarc = false: re (53.0/1.0)
|   top_pos_stack = IP: la (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: la (177.0/3.0)
|   |   can_do_leftarc = false: re (53.0/10.0)
|   top_pos_stack = VV
|   |   can_do_leftarc = true: la (15.0/1.0)
|   |   can_do_leftarc = false: ra (161.0/52.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (98.0/1.0)
|   |   can_do_leftarc = false: re (52.0/7.0)
|   top_pos_stack = TP: re (2.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (43.0/4.0)
|   |   can_do_leftarc = false: re (148.0/45.0)
|   top_pos_stack = RO: re (4.0/1.0)
|   top_pos_stack = ID: re (54.0/7.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: la (13.0)
|   |   can_do_leftarc = false: re (17.0/1.0)
|   top_pos_stack = IC: re (9.0/1.0)
|   top_pos_stack = MN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (4.0)
|   top_pos_stack = UK: la (101.0/1.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: la (7.0)
|   |   can_do_leftarc = false: re (17.0/1.0)
|   top_pos_stack = QV
|   |   can_do_leftarc = true: la (9.0/2.0)
|   |   can_do_leftarc = false: ra (82.0/8.0)
|   top_pos_stack = WV: ra (3.0/1.0)
|   top_pos_stack = IQ: re (1.0)
|   top_pos_stack = SV
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: ra (42.0/11.0)
|   top_pos_stack = HV
|   |   can_do_leftarc = true: la (7.0/2.0)
|   |   can_do_leftarc = false: ra (52.0/9.0)
|   top_pos_stack = IR: la (2.0/1.0)
|   top_pos_stack = IG: la (0.0)
|   top_pos_stack = AN: ra (11.0/5.0)
|   top_pos_stack = MV: sh (15.0/5.0)
|   top_pos_stack = IM: la (108.0/16.0)
|   top_pos_stack = BV: ra (12.0/4.0)
|   top_pos_stack = KV: ra (10.0)
|   top_pos_stack = GV: ra (6.0/1.0)
|   top_pos_stack = FV: ra (12.0/5.0)
|   top_pos_stack = PU: la (2.0)
|   top_pos_stack = SP: la (0.0)
|   top_pos_stack = XX: la (0.0)
|   top_pos_stack = I?: la (0.0)
|   top_pos_stack = IS: la (0.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (4.0)
|   top_pos_stack = IU: la (0.0)
|   top_pos_stack = YY: ra (2.0)
first_pos_queue = PU: sh (101.0/34.0)
first_pos_queue = SP
|   top_pos_stack = nil: sh (0.0)
|   top_pos_stack = ROOT: sh (4.0/1.0)
|   top_pos_stack = ++: la (15.0/4.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (6.0/3.0)
|   |   can_do_leftarc = false: re (27.0/12.0)
|   top_pos_stack = EN: sh (17.0/2.0)
|   top_pos_stack = AV: ra (9.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: la (21.0/10.0)
|   |   can_do_leftarc = false: ra (3.0/1.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: la (3.0/1.0)
|   |   can_do_leftarc = false: re (5.0)
|   top_pos_stack = IP: sh (0.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: sh (57.0/11.0)
|   |   can_do_leftarc = false: re (3.0)
|   top_pos_stack = VV: sh (14.0/6.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: la (15.0/1.0)
|   |   can_do_leftarc = false: re (3.0/1.0)
|   top_pos_stack = TP: ra (1.0)
|   top_pos_stack = PR
|   |   can_do_leftarc = true: la (11.0/3.0)
|   |   can_do_leftarc = false: sh (38.0/11.0)
|   top_pos_stack = RO: sh (3.0/1.0)
|   top_pos_stack = ID: sh (3.0/1.0)
|   top_pos_stack = PN: sh (2.0)
|   top_pos_stack = IC: la (1.0)
|   top_pos_stack = MN: sh (0.0)
|   top_pos_stack = UK: sh (4.0/1.0)
|   top_pos_stack = VN: ra (4.0/2.0)
|   top_pos_stack = QV: sh (0.0)
|   top_pos_stack = WV: sh (0.0)
|   top_pos_stack = IQ: sh (0.0)
|   top_pos_stack = SV: sh (0.0)
|   top_pos_stack = HV: ra (4.0/1.0)
|   top_pos_stack = IR: re (4.0)
|   top_pos_stack = IG: sh (0.0)
|   top_pos_stack = AN: sh (0.0)
|   top_pos_stack = MV: sh (0.0)
|   top_pos_stack = IM: sh (0.0)
|   top_pos_stack = BV: ra (1.0)
|   top_pos_stack = KV: sh (0.0)
|   top_pos_stack = GV: ra (3.0)
|   top_pos_stack = FV: sh (0.0)
|   top_pos_stack = PU: sh (1.0)
|   top_pos_stack = SP: ra (3.0)
|   top_pos_stack = XX: sh (0.0)
|   top_pos_stack = I?: sh (0.0)
|   top_pos_stack = IS: sh (0.0)
|   top_pos_stack = IT: re (1.0)
|   top_pos_stack = IU: sh (0.0)
|   top_pos_stack = YY: sh (0.0)
first_pos_queue = XX: sh (52.0/13.0)
first_pos_queue = I?
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: ra (1.0)
|   top_pos_stack = ++: ra (1.0)
|   top_pos_stack = NN: re (363.0/22.0)
|   top_pos_stack = EN: re (1.0)
|   top_pos_stack = AV: ra (114.0/30.0)
|   top_pos_stack = AJ: re (34.0/4.0)
|   top_pos_stack = IK: re (1.0)
|   top_pos_stack = IP: re (0.0)
|   top_pos_stack = PO: re (46.0/2.0)
|   top_pos_stack = VV: re (382.0/146.0)
|   top_pos_stack = AB: re (53.0/14.0)
|   top_pos_stack = TP: re (7.0)
|   top_pos_stack = PR: re (236.0/1.0)
|   top_pos_stack = RO: re (4.0)
|   top_pos_stack = ID: re (15.0/1.0)
|   top_pos_stack = PN: re (9.0)
|   top_pos_stack = IC: re (5.0)
|   top_pos_stack = MN: re (3.0)
|   top_pos_stack = UK: re (0.0)
|   top_pos_stack = VN: re (60.0/5.0)
|   top_pos_stack = QV: ra (35.0/8.0)
|   top_pos_stack = WV: ra (9.0/3.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: ra (72.0/16.0)
|   top_pos_stack = HV: ra (46.0/12.0)
|   top_pos_stack = IR: re (2.0)
|   top_pos_stack = IG: re (0.0)
|   top_pos_stack = AN: re (15.0/3.0)
|   top_pos_stack = MV: ra (9.0/4.0)
|   top_pos_stack = IM: re (0.0)
|   top_pos_stack = BV: re (15.0/4.0)
|   top_pos_stack = KV: ra (4.0/1.0)
|   top_pos_stack = GV: ra (12.0/3.0)
|   top_pos_stack = FV: ra (13.0/6.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (0.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (0.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY: re (1.0)
first_pos_queue = IS
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: ra (1.0)
|   top_pos_stack = ++: re (0.0)
|   top_pos_stack = NN: re (41.0/2.0)
|   top_pos_stack = EN: re (3.0/1.0)
|   top_pos_stack = AV: ra (14.0/6.0)
|   top_pos_stack = AJ: re (4.0)
|   top_pos_stack = IK: re (0.0)
|   top_pos_stack = IP: re (0.0)
|   top_pos_stack = PO: re (5.0)
|   top_pos_stack = VV: ra (47.0/17.0)
|   top_pos_stack = AB: re (1.0)
|   top_pos_stack = TP: re (1.0)
|   top_pos_stack = PR: re (20.0)
|   top_pos_stack = RO: re (9.0)
|   top_pos_stack = ID: re (3.0)
|   top_pos_stack = PN: re (12.0/1.0)
|   top_pos_stack = IC: re (0.0)
|   top_pos_stack = MN: re (7.0)
|   top_pos_stack = UK: sh (1.0)
|   top_pos_stack = VN: re (6.0)
|   top_pos_stack = QV: ra (2.0)
|   top_pos_stack = WV: re (0.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: ra (1.0)
|   top_pos_stack = HV: ra (4.0/1.0)
|   top_pos_stack = IR: re (1.0)
|   top_pos_stack = IG: re (0.0)
|   top_pos_stack = AN: re (1.0)
|   top_pos_stack = MV: re (0.0)
|   top_pos_stack = IM: re (0.0)
|   top_pos_stack = BV: ra (2.0/1.0)
|   top_pos_stack = KV: re (0.0)
|   top_pos_stack = GV: re (0.0)
|   top_pos_stack = FV: re (1.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (0.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (0.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (0.0)
|   top_pos_stack = IU: re (0.0)
|   top_pos_stack = YY: re (0.0)
first_pos_queue = IT
|   top_pos_stack = nil: re (0.0)
|   top_pos_stack = ROOT: sh (51.0)
|   top_pos_stack = ++: sh (7.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: ra (44.0/12.0)
|   |   can_do_leftarc = false: re (251.0/76.0)
|   top_pos_stack = EN: re (0.0)
|   top_pos_stack = AV: ra (55.0/13.0)
|   top_pos_stack = AJ
|   |   can_do_leftarc = true: ra (4.0/2.0)
|   |   can_do_leftarc = false: re (31.0/4.0)
|   top_pos_stack = IK: re (0.0)
|   top_pos_stack = IP: re (1.0)
|   top_pos_stack = PO
|   |   can_do_leftarc = true: ra (7.0/2.0)
|   |   can_do_leftarc = false: re (17.0/2.0)
|   top_pos_stack = VV: ra (147.0/64.0)
|   top_pos_stack = AB
|   |   can_do_leftarc = true: ra (2.0)
|   |   can_do_leftarc = false: re (32.0/6.0)
|   top_pos_stack = TP: re (9.0/3.0)
|   top_pos_stack = PR: re (112.0/1.0)
|   top_pos_stack = RO: ra (28.0/8.0)
|   top_pos_stack = ID: re (17.0/8.0)
|   top_pos_stack = PN
|   |   can_do_leftarc = true: ra (3.0/1.0)
|   |   can_do_leftarc = false: re (20.0/8.0)
|   top_pos_stack = IC: re (4.0/1.0)
|   top_pos_stack = MN: re (0.0)
|   top_pos_stack = UK: re (0.0)
|   top_pos_stack = VN
|   |   can_do_leftarc = true: ra (8.0/2.0)
|   |   can_do_leftarc = false: re (27.0/9.0)
|   top_pos_stack = QV: ra (8.0/3.0)
|   top_pos_stack = WV: re (1.0)
|   top_pos_stack = IQ: re (0.0)
|   top_pos_stack = SV: ra (5.0/2.0)
|   top_pos_stack = HV: ra (18.0/6.0)
|   top_pos_stack = IR: re (0.0)
|   top_pos_stack = IG: re (0.0)
|   top_pos_stack = AN: ra (8.0/2.0)
|   top_pos_stack = MV: re (1.0)
|   top_pos_stack = IM: re (0.0)
|   top_pos_stack = BV: ra (7.0)
|   top_pos_stack = KV: ra (5.0)
|   top_pos_stack = GV: ra (6.0/3.0)
|   top_pos_stack = FV: re (5.0/2.0)
|   top_pos_stack = PU: re (0.0)
|   top_pos_stack = SP: re (1.0)
|   top_pos_stack = XX: re (0.0)
|   top_pos_stack = I?: re (2.0/1.0)
|   top_pos_stack = IS: re (0.0)
|   top_pos_stack = IT: re (0.0)
|   top_pos_stack = IU: re (1.0)
|   top_pos_stack = YY: re (1.0)
first_pos_queue = IU: re (279.0/88.0)
first_pos_queue = YY
|   top_pos_stack = nil: ra (0.0)
|   top_pos_stack = ROOT: ra (53.0/3.0)
|   top_pos_stack = ++: la (1.0)
|   top_pos_stack = NN
|   |   can_do_leftarc = true: la (2.0)
|   |   can_do_leftarc = false: re (4.0/1.0)
|   top_pos_stack = EN: ra (0.0)
|   top_pos_stack = AV: ra (2.0/1.0)
|   top_pos_stack = AJ: ra (2.0/1.0)
|   top_pos_stack = IK
|   |   can_do_leftarc = true: sh (2.0)
|   |   can_do_leftarc = false: re (12.0/1.0)
|   top_pos_stack = IP: ra (0.0)
|   top_pos_stack = PO: ra (2.0)
|   top_pos_stack = VV: ra (7.0)
|   top_pos_stack = AB: ra (0.0)
|   top_pos_stack = TP: ra (0.0)
|   top_pos_stack = PR: ra (0.0)
|   top_pos_stack = RO: ra (0.0)
|   top_pos_stack = ID: ra (0.0)
|   top_pos_stack = PN: ra (0.0)
|   top_pos_stack = IC: la (3.0)
|   top_pos_stack = MN: ra (0.0)
|   top_pos_stack = UK: ra (0.0)
|   top_pos_stack = VN: ra (0.0)
|   top_pos_stack = QV: ra (1.0)
|   top_pos_stack = WV: ra (0.0)
|   top_pos_stack = IQ: la (1.0)
|   top_pos_stack = SV: ra (0.0)
|   top_pos_stack = HV: ra (0.0)
|   top_pos_stack = IR: la (2.0/1.0)
|   top_pos_stack = IG: ra (0.0)
|   top_pos_stack = AN: ra (0.0)
|   top_pos_stack = MV: ra (0.0)
|   top_pos_stack = IM: ra (0.0)
|   top_pos_stack = BV: ra (0.0)
|   top_pos_stack = KV: ra (0.0)
|   top_pos_stack = GV: ra (1.0)
|   top_pos_stack = FV: ra (0.0)
|   top_pos_stack = PU: ra (0.0)
|   top_pos_stack = SP: ra (0.0)
|   top_pos_stack = XX: ra (0.0)
|   top_pos_stack = I?: ra (0.0)
|   top_pos_stack = IS: ra (0.0)
|   top_pos_stack = IT
|   |   can_do_leftarc = true: la (3.0)
|   |   can_do_leftarc = false: re (2.0)
|   top_pos_stack = IU: ra (0.0)
|   top_pos_stack = YY: ra (1.0)

Number of Leaves  :   1840

Size of the tree :  2244


Time taken to build model: 1.09 seconds

=== Stratified cross-validation ===
=== Summary ===

Correctly Classified Instances      290554               86.2309 %
Incorrectly Classified Instances     46395               13.7691 %
Kappa statistic                          0.8134
Mean absolute error                      0.0987
Root mean squared error                  0.2231
Relative absolute error                 26.7113 %
Root relative squared error             51.9064 %
Coverage of cases (0.95 level)          98.6965 %
Mean rel. region size (0.95 level)      40.6476 %
Total Number of Instances           336949     

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.944    0.015    0.936      0.944    0.940      0.926    0.995     0.975     la
                 0.804    0.067    0.839      0.804    0.821      0.747    0.955     0.898     ra
                 0.898    0.082    0.825      0.898    0.860      0.797    0.973     0.940     re
                 0.824    0.028    0.889      0.824    0.855      0.819    0.974     0.928     sh
Weighted Avg.    0.862    0.053    0.863      0.862    0.862      0.810    0.972     0.931     

=== Confusion Matrix ===

     a     b     c     d   <-- classified as
 58616   610    65  2783 |     a = la
  1362 81552 15250  3255 |     b = ra
    72  8937 91029  1381 |     c = re
  2582  6147  3951 59357 |     d = sh

